{"version":3,"sources":["Actions/Logs/getLogsAction.js","Actions/Logs/refreshLogsAction.js","Actions/Logs/setAutoRefreshAction.js","Actions/Logs/setLogsAction.js","Actions/Logs/setQueryAction.js","Actions/Logs/setSearchPeriodAction.js","Actions/Profile/availableAppsLoadedAction.js","Actions/Profile/clearDataAction.js","Actions/Profile/loadProfileAction.js","Actions/Profile/profileLoadedAction.js","Actions/Profile/setCredentialsAction.js","Actions/Profile/tryFindApiCredentialsAction.js","Models/AuthenticationType.js","Reducers/initialState.js","Actions/UI/changeThemeAction.js","Actions/errorAction.js","Reducers/combineActiveReducers.js","Actions/Profile/Account/listSubscriptionsAction.js","Actions/Profile/Account/subscriptionsLoadedAction.js","Actions/Profile/Account/listAIAppsAction.js","Actions/Profile/Account/aiAppsLoadedAction.js","Actions/Profile/Account/aadLoginAction.js","Actions/Profile/Account/aadLogoutAction.js","Actions/Profile/Account/aadSilentTokenRefreshAction.js","Reducers/index.js","Reducers/Profile/clearDataReducer.js","Reducers/Profile/profileLoadedReducer.js","Reducers/Profile/availableAppsReducer.js","Reducers/Profile/setCredentialsReducer.js","Reducers/Profile/Account/aadSubscriptionsReducer.js","Reducers/Profile/Account/aadSubscriptionAppsReducer.js","Reducers/Logs/setAutoRefreshReducer.js","Reducers/Logs/setQueryReducer.js","Reducers/Logs/setSearchPeriodReducer.js","Reducers/Logs/setLogsReducer.js","Reducers/Logs/getLogsReducer.js","Reducers/UI/changeThemeReducer.js","Reducers/errorReducer.js","Epics/credentialsUtils.js","Epics/Logs/autoRefreshEpic.js","Epics/Logs/getLogsEpic.js","Epics/Profile/Account/loadSubscriptionsEpic.js","Epics/Profile/Account/loadSubscriptionsAppsEpic.js","Epics/index.js","Actions/emptyAction.js","Epics/Profile/setCredentialsEpic.js","Epics/Profile/findCredentialsCandidateEpic.js","Epics/Profile/setQueryEpic.js","Epics/Profile/clearDataEpic.js","Epics/Profile/loadProfileEpic.js","Epics/Profile/Account/aadLoginEpic.js","Epics/Profile/Account/aadLogoutEpic.js","Epics/Profile/Account/aadSilentTokenRefreshEpic.js","Epics/UI/changeThemeEpic.js","Epics/UI/loadUISettingsEpic.js","Utils/DomUtils.js","Utils/ConsoleDoc.js","Utils/QueryStringUtils.js","Utils/DateUtils.js","Services/ProfileRepository.js","Services/StorageRepository.js","Services/ResponseMappers/index.js","Services/ApplicationInsightsClient.js","Services/HttpClient.js","Services/AadAuthService.js","Store/container.js","Store/index.js","Components/Header.js","Models/SeverityLevel.js","Components/LogLine.js","Components/Log.js","Components/Settings/UISettings.js","Components/Settings/AadResourcePicker.js","Components/Settings/AuthenticationModeSelector.js","Components/Settings/Credentials.js","Components/QueryBox.js","Components/StatusBar.js","App.js","registerServiceWorker.js","index.js"],"names":["GET_LOGS","USER_SEARCH_GET_LOGS_SOURCE","AUTOREFRESH_GET_LOGS_SOURCE","SET_AUTOREFRESH","SET_LOGS","SET_QUERY","SET_SEARCH_PERIOD","AVAILABLE_APPS_LOADED","CLEAR_DATA","LOAD_PROFILE","PROFILE_LOADED","SET_CREDENTIALS","setCredentialsAction","credentials","type","payload","TRY_FIND_CREDENTIALS","AuthenticationType","none","apiKey","aad","initialState","logs","api","appId","subscriptionId","resourceId","authenticated","authenticationType","query","searchPeriod","autoRefresh","refreshInterval","appName","fetchTime","loading","error","availableApps","subscriptionsApps","subscriptions","ui","theme","CHANGE_UI_THEME","UIThemes","name","className","changeThemeAction","ERROR","errorAction","reason","LIST_AAD_SUBSCRIPTIONS","AAD_SUBSCRIPTIONS_LOADED","LIST_AI_APPS","AI_APPS_LOADED","AAD_LOGIN","AAD_LOGOUT","AAD_SILENT_REFRESH","aadSilentTokenRefreshAction","retryAction","retry","Object","objectSpread","reducers","rootReducer","state","action","loadedProps","_action$payload","apps","enabled","skipLoading","source","arguments","length","undefined","currentState","forEach","reducer","newState","anyCredentials","isAutoRefreshEnabled","$state","value","profileLoaded","isAadAuth","retryExceeded","rootEpic","combineEpics","action$","state$","_ref","inject","applicationInsightsClient","domUtils","pipe","ofType","filter","switchMap","forceScrollEnd","isScrollEnd","hasToScroll","getLogs","mergeMap","of","setLogsAction","catchError","err","status","message","tap","scrollBottom","q","timer","map","t","store","profileRepository","storeCredentials","getStoredAppNamesCredentials","availableAppsLoadedAction","findCredentialsCanditate","storeQuery","clearData","consoleDoc","aadAuthService","printHelpOnConsole","getCredentials","isAuthenticated","getQuery","profileLoadedAction","listSubscriptions","subscriptionsLoadedAction","r","details","response","concat","code","listAppInsightsAccounts","aiAppsLoadedAction","loginRedirect","logout","silentTokenRefresh","result","success","alert","errorMessage","setUITheme","getUITheme","DomUtils","classCallCheck","this","createClass","key","selector","document","querySelector","scrollTo","scrollHeight","scrollTop","offsetHeight","calcViewHeight","viewHeight","Math","max","documentElement","clientHeight","window","innerHeight","body","style","height","addEventListener","ConsoleDoc","console","log","location","href","split","QueryStringUtils","search","test","slice","reduce","params","param","_param$split","_param$split2","slicedToArray","decodeURIComponent","replace","history","url","pushState","DateUtils","date","formatTwoDigit","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","formatDate","formatTime","number","ProfileRepository","storageRepository","queryStringUtils","queryCredentials","getCredentialsFromQuery","storedCredentials","getSessionData","ensureCredentialsV2Model","getLocalData","saveSessionData","saveLocalData","storeAppCredentials","credentialsByApp","getAllCredentials","keys","queryParams","getParams","removeParams","clearSessionData","clearLocalData","StorageRepository","localStorage","sessionStorage","parseObject","content","getItem","JSON","parse","e","serializeObject","setItem","stringify","removeItem","clear","traceMapper","row","colPropertiesIndex","hasRequiredProperties","model","timestamp","Date","severityLevel","responseMappers","trace","exception","v","join","props","prop","properties","every","ApplicationInsightsClient","httpClient","timespan","_this","push","get","buildAppUri","buildHeaders","httpResponse","mapQueryResponse","throwError","mapError","innererror","Error","buildAadAuthorizationHeaders","x-api-key","aadAccessToken","getToken","Authorization","toCamelCase","object","Array","isArray","mappedObject","objectProp","hasOwnProperty","newKey","charAt","toLowerCase","toString","constructor","tables","columns","c","i","propName","columnName","buildColumnPropertyIndex","rows","reponseMapper","itemType","getRowMapper","sort","a","b","getAppName","columnsIndexPropertyMap","appNameIndex","uri","resource","id","AppId","displayName","HttpClient","headers","request","method","requestHeaders","Accept","Content-Type","queryString","encodeURIComponent","buildQuery","ajax","responseType","AadAuthService","clientId","process","scopes","iframeName","refreshingToken","tokenSubject","Subject","checkResponseCallback","fragmentParams","parseFragmentParams","isIfFrame","postMessageToParent","messageTypes","refresh_token_error","removeSessionData","setHash","refresh_token_success","accessToken","warn","createIFrameIfNotExists","redirectUrl","buildLoginUrl","setTimeout","open","fromEvent","event","origin","data","_unused","remove","take","next","iframe","createElement","setAttribute","appendChild","hash","parent","postMessage","prompt","formatQuery","getHash","substring","p","prev","current","self","top","_unused2","dependencies","dependencyFactory","epicMiddleware","createEpicMiddleware","createStore","applyMiddleware","run","Header","sidebar","toggleSidebar","titleIconClass","react_default","hidden","role","aria-labelledby","onClick","SeverityLevel","0","1","2","3","4","dateUtils","LogLine","formatDateTime","Log","react","item","src_Components_LogLine","connect","UISettings","possibleConstructorReturn","getPrototypeOf","call","handleThemeChange","bind","assertThisInitialized","changeTheme","_this2","nextTheme","Component","themeIndex","findIndex","dispatch","AadResourcePicker","handleSubmit","preventDefault","checkSubscriptionsLoad","setCredentials","validCredentials","selectResource","app","find","s","selectSubscription","login","nextProps","nextSubscription","listAIApps","setState","onChange","target","subscription","_this3","subscriptionApps","_this4","aria-label","onSubmit","renderLoginButton","renderSubscriptionsDropDown","renderAppsDropDown","toConsumableArray","listAIAppsAction","AuthenticationModeSelector","changeAuthentication","isActive","title","Credentials","handleChange","defineProperty","editing","confirm","selectedStoredCredential","credentialsChanged","setSearchPeriod","tryFindCredentials","setAutoRefresh","credentials1","credentials2","placeholder","disabled","checkStoredAppCredentials","checked","toggleAutoRefresh","htmlFor","_this5","handlePeriodChange","renderCredentialsForm","Settings_AadResourcePicker","Settings_AuthenticationModeSelector","renderApplicationPicker","renderGlobalOptions","renderPeriod","Settings_UISettings","tryFindApiCredentialsAction","setAutoRefreshAction","setSearchPeriodAction","QueryBox","setQuery","onEnterPress","keyCode","ctrlKey","onKeyDown","connected","setQueryAction","StatusBar","App","loadProfile","activeTheme","src_Components_Header","hasCredentials","Components_Log","src_Components_StatusBar","src_Components_QueryBox","Components_Settings_Credentials","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","render","es","src_App_0","getElementById","URL","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","listenViewHeightChanges"],"mappings":"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","file":"static/js/main.863ef482.chunk.js","sourcesContent":["export const GET_LOGS = 'GET_LOGS';\r\nexport const USER_SEARCH_GET_LOGS_SOURCE = 'USER_SEARCH';\r\n\r\nexport function getLogsAction() {\r\n  return { type: GET_LOGS, payload: { source: USER_SEARCH_GET_LOGS_SOURCE } };\r\n}","import { GET_LOGS } from './getLogsAction';\r\nexport const AUTOREFRESH_GET_LOGS_SOURCE = 'AUTOREFRESH';\r\n\r\nexport function refreshLogsAction() {\r\n  return { type: GET_LOGS, payload: { source: AUTOREFRESH_GET_LOGS_SOURCE } };\r\n}","export const SET_AUTOREFRESH = 'SET_AUTOREFRESH';\r\nexport function setAutoRefreshAction(enabled) {\r\n  return { type: SET_AUTOREFRESH, payload: { enabled } };\r\n}","export const SET_LOGS = 'SET_LOGS';\r\nexport function setLogsAction(logs) {\r\n  return { type: SET_LOGS, payload: logs };\r\n}\r\n","export const SET_QUERY = 'SET_QUERY';\r\nexport function setQueryAction(query) {\r\n  return { type: SET_QUERY, payload: { query } };\r\n}","export const SET_SEARCH_PERIOD = 'SET_SEARCH_PERIOD';\r\nexport function setSearchPeriodAction(searchPeriod) {\r\n  return { type: SET_SEARCH_PERIOD, payload: { searchPeriod } };\r\n}","export const AVAILABLE_APPS_LOADED = 'AVAILABLE_APPS_LOADED';\r\nexport function availableAppsLoadedAction(availableApps) {\r\n  return {\r\n    type: AVAILABLE_APPS_LOADED,\r\n    payload: {\r\n      availableApps\r\n    }\r\n  };\r\n}","export const CLEAR_DATA = 'CLEAR_DATA';\r\nexport function clearDataAction() {\r\n  return { type: CLEAR_DATA, payload: null };\r\n}","export const LOAD_PROFILE = 'LOAD_PROFILE';\r\nexport function loadProfileAction() {\r\n  return { type: LOAD_PROFILE };\r\n}","export const PROFILE_LOADED = 'PROFILE_LOADED';\r\nexport function profileLoadedAction(credentials, query, availableApps) {\r\n  return {\r\n    type: PROFILE_LOADED,\r\n    payload: {\r\n      credentials,\r\n      query,\r\n      availableApps\r\n    }\r\n  };\r\n}","export const SET_CREDENTIALS = 'SET_CREDENTIALS';\r\nexport function setCredentialsAction(credentials) {\r\n  return { type: SET_CREDENTIALS, payload: { credentials } };\r\n}","export const TRY_FIND_CREDENTIALS = 'TRY_FIND_CREDENTIALS';\r\nexport function tryFindApiCredentialsAction(appName) {\r\n  return { type: TRY_FIND_CREDENTIALS, payload: { appName } };\r\n}","const AuthenticationType = {\r\n  none: 0,\r\n  apiKey: 1,\r\n  aad: 2\r\n};\r\n\r\nexport default AuthenticationType;\r\n","import AuthenticationType from 'Models/AuthenticationType';\r\n\r\nexport const initialState = () => {\r\n  return {\r\n    logs: [],\r\n    credentials: {\r\n      api: {\r\n        appId: '',\r\n        apiKey: '',\r\n      },\r\n      aad: {\r\n        subscriptionId: '',\r\n        resourceId: '',\r\n        appId: '',\r\n        authenticated: false\r\n      },\r\n      authenticationType: AuthenticationType.aad\r\n    },\r\n    query: 'traces | sort by timestamp desc | limit 50',\r\n    searchPeriod: '',\r\n    autoRefresh: true,\r\n    refreshInterval: null,\r\n    appName: null,\r\n    fetchTime: null,\r\n    loading: false,\r\n    error: null,\r\n    availableApps: [],\r\n    aad: {\r\n      subscriptionsApps: {},\r\n      subscriptions: [],\r\n    },\r\n    ui: {\r\n      theme: 'theme-default'\r\n    }\r\n  }\r\n};","export const CHANGE_UI_THEME = 'CHANGE_UI_THEME';\r\n\r\nexport const UIThemes = [\r\n  {\r\n    name: 'Dark (default)',\r\n    className: 'theme-default'\r\n  },\r\n  {\r\n    name: 'Light',\r\n    className: 'theme-light'\r\n  }\r\n];\r\n\r\nexport function changeThemeAction(theme) {\r\n  return { type: CHANGE_UI_THEME, payload: { theme: theme } };\r\n}","export const ERROR = 'ERROR';\r\nexport function errorAction(reason) {\r\n  return { type: ERROR, payload: reason };\r\n}","export const combineActiveReducers = (reducers, initialState) => {\r\n  return (state = initialState, action) => {\r\n    let currentState = state;\r\n    reducers.forEach(reducer => {\r\n      const newState = reducer(currentState, action);\r\n      if (newState) {\r\n        currentState = newState;\r\n      }\r\n    });\r\n    return currentState;\r\n  };\r\n};","export const LIST_AAD_SUBSCRIPTIONS = 'LIST_AAD_SUBSCRIPTIONS';\r\n\r\nexport function listSubscriptionsAction() {\r\n  return { type: LIST_AAD_SUBSCRIPTIONS, payload: { }};\r\n}","export const AAD_SUBSCRIPTIONS_LOADED = 'AAD_SUBSCRIPTIONS_LOADED';\r\n\r\nexport function subscriptionsLoadedAction(subscriptions) {\r\n  return { type: AAD_SUBSCRIPTIONS_LOADED, payload: { subscriptions }};\r\n}","export const LIST_AI_APPS = 'LIST_AI_APPS';\r\n\r\nexport function listAIAppsAction(subscriptionId) {\r\n  return { type: LIST_AI_APPS, payload: { subscriptionId } };\r\n}","export const AI_APPS_LOADED = 'AI_APPS_LOADED';\r\n\r\nexport function aiAppsLoadedAction(subscriptionId, apps) {\r\n  return { type: AI_APPS_LOADED, payload: { subscriptionId, apps }};\r\n}","export const AAD_LOGIN = 'AAD_LOGIN';\r\n\r\nexport function aadLoginAction() {\r\n  return { type: AAD_LOGIN, payload: {} };\r\n}","export const AAD_LOGOUT = 'AAD_LOGOUT';\r\n\r\nexport function aadLogoutAction() {\r\n  return { type: AAD_LOGOUT, payload: {} };\r\n}","export const AAD_SILENT_REFRESH = 'AAD_SILENT_REFRESH';\r\n\r\nexport function aadSilentTokenRefreshAction(retryAction) {\r\n  const retry = retryAction.retry ? retryAction.retry++ : 1;\r\n  return {\r\n    type: AAD_SILENT_REFRESH,\r\n    payload: {\r\n      retryAction: {...retryAction, retry }\r\n    }\r\n  };\r\n}","import {\r\n  getLogsReducer,\r\n  setAutoRefreshReducer,\r\n  setLogsReducer,\r\n  setQueryReducer,\r\n  setSearchPeriodReducer\r\n} from './Logs';\r\nimport {\r\n  clearDataReducer,\r\n  profileLoadedReducer,\r\n  setCredentialsReducer,\r\n  availableAppsReducer\r\n} from './Profile';\r\nimport { changeThemeReducer } from './UI';\r\nimport { initialState } from './initialState';\r\nimport { errorReducer } from './errorReducer';\r\nimport { combineActiveReducers } from './combineActiveReducers';\r\nimport { aadSubscriptionsReducer, aadSubscriptionAppsReducer } from './Profile/Account';\r\n\r\nexport const rootReducer = combineActiveReducers([\r\n  clearDataReducer,\r\n  profileLoadedReducer,\r\n  availableAppsReducer,\r\n  setCredentialsReducer,\r\n\r\n  aadSubscriptionsReducer,\r\n  aadSubscriptionAppsReducer,\r\n\r\n  setAutoRefreshReducer,\r\n  setQueryReducer,\r\n  setSearchPeriodReducer,\r\n  setLogsReducer,\r\n  getLogsReducer,\r\n\r\n  changeThemeReducer,\r\n  errorReducer\r\n], initialState());","import { initialState } from 'Reducers/initialState';\r\nimport { CLEAR_DATA } from 'Actions/Profile';\r\n\r\nexport function clearDataReducer(state, action) {\r\n  if (action.type !== CLEAR_DATA) return;\r\n  return { ...initialState() };\r\n}\r\n","import { PROFILE_LOADED } from 'Actions/Profile';\r\n\r\nexport function profileLoadedReducer(state, action) {\r\n  if (action.type !== PROFILE_LOADED) return;\r\n  let credentials = {...state.credentials};\r\n  if (action.payload.credentials) {\r\n    credentials.authenticationType = action.payload.credentials.authenticationType;\r\n    credentials.aad = {...credentials.aad, ...action.payload.credentials.aad};\r\n    credentials.api = {...credentials.api, ...action.payload.credentials.api};\r\n  }\r\n  let { query } = state;\r\n  if (action.payload.query) {\r\n    query = action.payload.query;\r\n  }\r\n  const newState = { ...state, credentials, query };\r\n  return newState;\r\n}","import { PROFILE_LOADED, AVAILABLE_APPS_LOADED } from 'Actions/Profile';\r\n\r\nexport function availableAppsReducer(state, action) {\r\n  if (action.type !== PROFILE_LOADED && action.type !== AVAILABLE_APPS_LOADED) return;\r\n  const loadedProps = {};\r\n  if (action.payload.availableApps) {\r\n    loadedProps.availableApps = action.payload.availableApps;\r\n  }\r\n  return { ...state, ...loadedProps };\r\n}","import { SET_CREDENTIALS } from 'Actions/Profile';\r\n\r\nexport function setCredentialsReducer(state, action) {\r\n  if (action.type !== SET_CREDENTIALS) return;\r\n  return { ...state, credentials: action.payload.credentials };\r\n}","import { AAD_SUBSCRIPTIONS_LOADED } from 'Actions/Profile/Account';\r\n\r\nexport function aadSubscriptionsReducer(state, action) {\r\n  if (action.type !== AAD_SUBSCRIPTIONS_LOADED) return;\r\n\r\n  const { subscriptions } = action.payload;\r\n  const aad = { ...state.aad, subscriptions }\r\n  return { ...state, aad };\r\n}","import { AI_APPS_LOADED } from 'Actions/Profile/Account';\r\n\r\nexport function aadSubscriptionAppsReducer(state, action) {\r\n  if (action.type !== AI_APPS_LOADED) return;\r\n\r\n  const { subscriptionId, apps } = action.payload;\r\n  const subscriptionsApps = { ...state.aad.subscriptionsApps }\r\n  subscriptionsApps[subscriptionId] = apps;\r\n  return { ...state, aad: { ...state.aad, subscriptionsApps} };\r\n}","import { SET_AUTOREFRESH } from 'Actions/Logs';\r\n\r\nexport function setAutoRefreshReducer(state, action) {\r\n  if (action.type !== SET_AUTOREFRESH) return;\r\n  return { ...state, autoRefresh: action.payload.enabled };\r\n}","import { SET_QUERY } from 'Actions/Logs';\r\n\r\nexport function setQueryReducer(state, action) {\r\n  if (action.type !== SET_QUERY) return;\r\n  return { ...state, query: action.payload.query };\r\n}\r\n","import { SET_SEARCH_PERIOD } from 'Actions/Logs';\r\n\r\nexport function setSearchPeriodReducer(state, action) {\r\n  if (action.type !== SET_SEARCH_PERIOD) return;\r\n  return { ...state, searchPeriod: action.payload.searchPeriod };\r\n}\r\n","import { SET_LOGS } from 'Actions/Logs';\r\n\r\nexport function setLogsReducer(state, action) {\r\n  if (action.type !== SET_LOGS) return;\r\n  return {\r\n    ...state,\r\n    logs: action.payload.logs,\r\n    appName: action.payload.appName,\r\n    fetchTime: action.payload.fetchTime,\r\n    loading: false,\r\n    error: null\r\n  };\r\n}","import { GET_LOGS, AUTOREFRESH_GET_LOGS_SOURCE } from 'Actions/Logs';\r\n\r\nexport function getLogsReducer(state, action) {\r\n  if (action.type !== GET_LOGS) return;\r\n  const skipLoading = action.payload.source === AUTOREFRESH_GET_LOGS_SOURCE && state.error;\r\n  return { ...state, loading: skipLoading ? false : true };\r\n}\r\n","import { CHANGE_UI_THEME } from 'Actions/UI';\r\n\r\nexport function changeThemeReducer(state, action) {\r\n    if (action.type !== CHANGE_UI_THEME) return;\r\n\r\n    const ui = { ...state.ui, ...{ theme: action.payload.theme } };\r\n    return { ...state, ...{ ui: { ...ui } } };\r\n}","import { ERROR } from 'Actions';\r\n\r\nexport function errorReducer(state, action) {\r\n  if (action.type !== ERROR) return;\r\n  return { ...state, error: action.payload, loading: false };\r\n}","import AuthenticationType from 'Models/AuthenticationType';\r\n\r\nexport function anyCredentials(credentials) {\r\n  if (credentials.authenticationType === AuthenticationType.none) {\r\n    return false;\r\n  } else if (credentials.authenticationType === AuthenticationType.aad) {\r\n    return !(!credentials.aad.authenticated || !credentials.aad.subscriptionId || !credentials.aad.resourceId);\r\n  } else if (credentials.authenticationType === AuthenticationType.apiKey) {\r\n    return !(!credentials.api.appId || !credentials.api.apiKey);\r\n  }\r\n}","import { timer } from 'rxjs';\r\nimport { filter, switchMap, map } from 'rxjs/operators';\r\nimport { anyCredentials } from 'Epics/credentialsUtils';\r\nimport { refreshLogsAction, SET_AUTOREFRESH, SET_LOGS } from 'Actions/Logs';\r\nimport { emptyAction } from 'Actions';\r\nimport { PROFILE_LOADED } from 'Actions/Profile';\r\nconst refreshTimeThreshold = 30000;\r\n\r\nexport const autoRefreshEpic = (action$, $state) =>\r\n  action$\r\n    .pipe(\r\n      filter(q =>\r\n        (q.type === SET_AUTOREFRESH && q.payload.enabled) ||\r\n        // set auto refresh on startup and after setting logs, queue next refresh\r\n        (isAutoRefreshEnabled($state) && ((q.type === SET_LOGS) || profileLoaded(q)))\r\n      ),\r\n      switchMap(q => {\r\n        return timer(refreshTimeThreshold)\r\n          .pipe(\r\n            map(t => isAutoRefreshEnabled($state) ? refreshLogsAction() : emptyAction())\r\n          );\r\n      })\r\n    );\r\n\r\nconst isAutoRefreshEnabled = ($state) => $state.value.autoRefresh && !$state.value.loading;\r\nconst profileLoaded = (action) => action.type === PROFILE_LOADED && anyCredentials(action.payload.credentials);","import { of } from 'rxjs';\r\nimport { filter, switchMap, mergeMap, catchError, tap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { anyCredentials } from 'Epics/credentialsUtils';\r\nimport { errorAction } from 'Actions';\r\nimport {\r\n  setCredentialsAction,\r\n  PROFILE_LOADED\r\n} from 'Actions/Profile';\r\nimport {\r\n  setLogsAction,\r\n  GET_LOGS,\r\n  AUTOREFRESH_GET_LOGS_SOURCE\r\n} from 'Actions/Logs';\r\nimport {\r\n  aadSilentTokenRefreshAction\r\n} from 'Actions/Profile/Account';\r\nimport AuthenticationType from 'Models/AuthenticationType';\r\n\r\nexport const getLogsEpic = (action$, state$, { inject }) => {\r\n  const applicationInsightsClient = inject('ApplicationInsightsClient');\r\n  const domUtils = inject('DomUtils');\r\n\r\n  return action$\r\n    .pipe(\r\n      ofType(GET_LOGS, PROFILE_LOADED),\r\n      filter(action => {\r\n        const state = state$.value;\r\n        return anyCredentials(state.credentials) &&\r\n          !(action.payload.source === AUTOREFRESH_GET_LOGS_SOURCE && state.error)\r\n          && !retryExceeded(action);\r\n      }),\r\n      switchMap(action => {\r\n        // force scroll search is done by user or it is already at the end of scroll\r\n        const forceScrollEnd = hasToScroll(action, domUtils);\r\n\r\n        const state = state$.value;\r\n        return applicationInsightsClient.getLogs(state.credentials, state.query, state.searchPeriod)\r\n          .pipe(\r\n            mergeMap(logs => of(\r\n              setLogsAction(logs),\r\n              setCredentialsAction({ ...state$.value.credentials, appName: logs.appName }))\r\n            ),\r\n            catchError(err => {\r\n              if (err.status === 401) {\r\n                return of(\r\n                  isAadAuth(state$.value) && !retryExceeded(action) ?\r\n                  aadSilentTokenRefreshAction(action) :\r\n                  errorAction('Error 401 - Unauthorized')\r\n                  );\r\n              }\r\n              let reason = typeof (err) === 'string' ? err : err.message\r\n              return of(errorAction(reason || 'Error when getting logs'));\r\n            }),\r\n            tap(() => {\r\n              if (forceScrollEnd) {\r\n                domUtils.scrollBottom('.ail-body');\r\n              }\r\n            })\r\n          );\r\n      })\r\n    )\r\n  ;\r\n}\r\n\r\nfunction hasToScroll(action, domUtils) {\r\n  return action.payload.source !== AUTOREFRESH_GET_LOGS_SOURCE ||\r\n    domUtils.isScrollEnd('.ail-body');\r\n}\r\n\r\nconst isAadAuth = (state) => state.credentials.authenticationType === AuthenticationType.aad;\r\nconst retryExceeded = (action) => (+action.retry) > 1;","import { of } from 'rxjs';\r\nimport { switchMap, map, filter, catchError } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { errorAction } from 'Actions';\r\nimport {\r\n  LIST_AAD_SUBSCRIPTIONS,\r\n  subscriptionsLoadedAction,\r\n  aadSilentTokenRefreshAction\r\n} from 'Actions/Profile/Account';\r\n\r\nexport const loadSubscriptionsEpic = (action$, state$, { inject }) => {\r\n  const applicationInsightsClient = inject('ApplicationInsightsClient');\r\n\r\n  return action$\r\n    .pipe(\r\n      ofType(LIST_AAD_SUBSCRIPTIONS),\r\n      filter(action => {\r\n        const { aad } = state$.value.credentials;\r\n        return aad.authenticated && !retryExceeded(action);\r\n      }),\r\n      switchMap((action) => {\r\n        return applicationInsightsClient.listSubscriptions()\r\n          .pipe(\r\n            map(subscriptions => subscriptionsLoadedAction(subscriptions)),\r\n            catchError(r => {\r\n              if (r.status === 401 && !retryExceeded(action)) {\r\n                return of(aadSilentTokenRefreshAction(action));\r\n              }\r\n              const details = r.response && r.response.error ? ` ${r.response.error.code}: ${r.response.error.message}` : '';\r\n              return of(errorAction(`Error loading subscriptions => [HTTP Status ${r.status}]${details}`));\r\n            })\r\n          );\r\n      }),\r\n    );\r\n}\r\n\r\nconst retryExceeded = (action) => (+action.retry) > 1;","import { of } from 'rxjs';\r\nimport { switchMap, map, filter, catchError } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { errorAction } from 'Actions';\r\nimport {\r\n  LIST_AI_APPS,\r\n  aiAppsLoadedAction,\r\n  aadSilentTokenRefreshAction\r\n} from 'Actions/Profile/Account';\r\n\r\nexport const loadSubscriptionsAppsEpic = (action$, state$, { inject }) => {\r\n  const applicationInsightsClient = inject('ApplicationInsightsClient');\r\n\r\n  return action$\r\n    .pipe(\r\n      ofType(LIST_AI_APPS),\r\n      filter(action => {\r\n        const { aad } = state$.value.credentials;\r\n        return aad.authenticated && !retryExceeded(action);\r\n      }),\r\n      switchMap((action) => {\r\n        const subscriptionId = action.payload.subscriptionId;\r\n        return applicationInsightsClient.listAppInsightsAccounts(subscriptionId)\r\n          .pipe(\r\n            map(apps => aiAppsLoadedAction(subscriptionId, apps)),\r\n            catchError(r => {\r\n              if (r.status === 401 && !retryExceeded(action)) {\r\n                return of(aadSilentTokenRefreshAction(action));\r\n              }\r\n              const details = r.response && r.response.error ? ` ${r.response.error.code}: ${r.response.error.message}` : '';\r\n              return of(errorAction(`Error loading subscription apps => [HTTP Status ${r.status}]${details}`));\r\n            })\r\n          );\r\n      }),\r\n    );\r\n}\r\n\r\nconst retryExceeded = (action) => (+action.retry) > 1;","import { combineEpics } from 'redux-observable';\r\nimport {\r\n    getLogsEpic,\r\n    autoRefreshEpic\r\n} from './Logs';\r\n\r\nimport {\r\n    setCredentialsEpic,\r\n    findCredentialsCandidateEpic,\r\n    setQueryEpic,\r\n    clearDataEpic,\r\n    loadProfileEpic\r\n} from './Profile';\r\n\r\nimport {\r\n    changeThemeEpic,\r\n    loadUISettingsEpic\r\n} from './UI';\r\n\r\nimport {\r\n  loadSubscriptionsEpic,\r\n  loadSubscriptionsAppsEpic,\r\n  aadLoginEpic,\r\n  aadLogoutEpic,\r\n  aadSilentTokenRefreshEpic\r\n} from './Profile/Account';\r\n\r\nexport const rootEpic = combineEpics(\r\n    getLogsEpic,\r\n    autoRefreshEpic,\r\n\r\n    setCredentialsEpic,\r\n    findCredentialsCandidateEpic,\r\n    setQueryEpic,\r\n    clearDataEpic,\r\n    loadProfileEpic,\r\n\r\n    loadSubscriptionsEpic,\r\n    loadSubscriptionsAppsEpic,\r\n    aadLoginEpic,\r\n    aadLogoutEpic,\r\n    aadSilentTokenRefreshEpic,\r\n\r\n    changeThemeEpic,\r\n    loadUISettingsEpic\r\n);","export function emptyAction() {\r\n  return { type: 'never', payload: { } };\r\n}","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { SET_CREDENTIALS, availableAppsLoadedAction } from 'Actions/Profile';\r\n\r\nexport const setCredentialsEpic = (action$, store, { inject }) => {\r\n  const profileRepository = inject('ProfileRepository');\r\n  return action$\r\n    .pipe(\r\n      ofType(SET_CREDENTIALS),\r\n      switchMap(q => {\r\n        profileRepository.storeCredentials(q.payload.credentials);\r\n        const availableApps = profileRepository.getStoredAppNamesCredentials();\r\n        return of(availableAppsLoadedAction(availableApps));\r\n      })\r\n    );\r\n}\r\n","import { of } from 'rxjs';\r\nimport { switchMap, map } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { emptyAction } from 'Actions';\r\nimport { TRY_FIND_CREDENTIALS, setCredentialsAction } from 'Actions/Profile';\r\n\r\nexport const findCredentialsCandidateEpic = (action$, store, { inject }) => {\r\n  const profileRepository = inject('ProfileRepository');\r\n  return action$\r\n    .pipe(\r\n      ofType(TRY_FIND_CREDENTIALS),\r\n      switchMap(q => {\r\n        return of(profileRepository.findCredentialsCanditate(q.payload.appName))\r\n          .pipe(\r\n            map(credentials => {\r\n              return credentials ? setCredentialsAction(credentials) : emptyAction();\r\n            })\r\n          )\r\n      })\r\n    );\r\n}","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { SET_QUERY } from 'Actions/Logs';\r\nimport { emptyAction } from 'Actions';\r\n\r\nexport const setQueryEpic = (action$, store, { inject }) => {\r\n  const profileRepository = inject('ProfileRepository');\r\n  return action$\r\n    .pipe(\r\n      ofType(SET_QUERY),\r\n      switchMap(q => {\r\n        profileRepository.storeQuery(q.payload.query);\r\n        return of(emptyAction());\r\n      })\r\n    );\r\n}","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { CLEAR_DATA } from 'Actions/Profile';\r\nimport { emptyAction } from 'Actions';\r\n\r\nexport const clearDataEpic = (action$, store, { inject }) => {\r\n  const profileRepository = inject('ProfileRepository');\r\n  return action$\r\n    .pipe(\r\n      ofType(CLEAR_DATA),\r\n      switchMap(q => {\r\n        profileRepository.clearData();\r\n        return of(emptyAction());\r\n      })\r\n    );\r\n}\r\n","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { profileLoadedAction, LOAD_PROFILE } from 'Actions/Profile';\r\nimport AuthenticationType from 'Models/AuthenticationType';\r\n\r\nexport const loadProfileEpic = (action$, state$, { inject }) => {\r\n  const profileRepository = inject('ProfileRepository');\r\n  const consoleDoc = inject('ConsoleDoc');\r\n  const aadAuthService = inject('AadAuthService');\r\n  return action$.pipe(\r\n    ofType(LOAD_PROFILE),\r\n    switchMap(q => {\r\n      consoleDoc.printHelpOnConsole();\r\n      const credentials = profileRepository.getCredentials();\r\n      const availableApps = profileRepository.getStoredAppNamesCredentials();\r\n      credentials.aad.authenticated = aadAuthService.isAuthenticated();\r\n      if (!credentials.authenticationType && credentials.aad.authenticated) {\r\n        credentials.authenticationType = AuthenticationType.aad;\r\n      }\r\n      const query = profileRepository.getQuery();\r\n      return of(profileLoadedAction(credentials, query, availableApps));\r\n    })\r\n  );\r\n}","import { map } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { AAD_LOGIN } from 'Actions/Profile/Account';\r\nimport { emptyAction } from 'Actions';\r\n\r\nexport const aadLoginEpic = (action$, state$, { inject }) => {\r\n  const aadAuthService = inject('AadAuthService');\r\n\r\n  return action$\r\n    .pipe(\r\n      ofType(AAD_LOGIN),\r\n      map(() => {\r\n        aadAuthService.loginRedirect();\r\n        return emptyAction();\r\n      })\r\n    )\r\n  ;\r\n}","import { map } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { AAD_LOGOUT } from 'Actions/Profile/Account';\r\nimport { emptyAction } from 'Actions';\r\n\r\nexport const aadLogoutEpic = (action$, state$, { inject }) => {\r\n  const aadAuthService = inject('AadAuthService');\r\n\r\n  return action$\r\n    .pipe(\r\n      ofType(AAD_LOGOUT),\r\n      map(() => {\r\n        aadAuthService.logout();\r\n        return emptyAction();\r\n      })\r\n    )\r\n  ;\r\n}","import { mergeMap, map, filter } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { emptyAction } from 'Actions';\r\nimport { AAD_SILENT_REFRESH } from 'Actions/Profile/Account';\r\nimport AuthenticationType from 'Models/AuthenticationType';\r\n\r\nexport const aadSilentTokenRefreshEpic = (action$, state$, { inject }) => {\r\n  const aadAuthService = inject('AadAuthService');\r\n\r\n  return action$\r\n    .pipe(\r\n      ofType(AAD_SILENT_REFRESH),\r\n      filter(action => {\r\n        const state = state$.value;\r\n        return state.credentials.authenticationType === AuthenticationType.aad;\r\n      }),\r\n      mergeMap((action) => {\r\n        return aadAuthService.silentTokenRefresh()\r\n          .pipe(\r\n            map(result => {\r\n              if (!result.success) {\r\n                alert(`An error has occurred while refreshing token silently: ${result.errorMessage}`);\r\n              }\r\n              const retryAction = action.payload.retryAction;\r\n              return retryAction ? retryAction : emptyAction();\r\n            })\r\n          );\r\n      })\r\n    )\r\n  ;\r\n}","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { emptyAction } from 'Actions';\r\nimport { CHANGE_UI_THEME } from 'Actions/UI';\r\n\r\nexport const changeThemeEpic = (action$, $state, { inject }) => {\r\n  const profileRepository = inject('ProfileRepository');\r\n  return action$\r\n    .pipe(\r\n      ofType(CHANGE_UI_THEME),\r\n      switchMap(q => {\r\n        profileRepository.setUITheme(q.payload.theme);\r\n        return of(emptyAction());\r\n      })\r\n    );\r\n}","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { emptyAction} from 'Actions';\r\nimport { LOAD_PROFILE } from 'Actions/Profile';\r\nimport { changeThemeAction} from 'Actions/UI';\r\n\r\nexport const loadUISettingsEpic = (action$, store, { inject }) => {\r\n  const profileRepository = inject('ProfileRepository');\r\n  return action$.pipe(\r\n    ofType(LOAD_PROFILE),\r\n    switchMap(q => {\r\n      const theme = profileRepository.getUITheme();\r\n      if (theme) {\r\n          return of(changeThemeAction(theme));\r\n      }\r\n      return of(emptyAction());\r\n    })\r\n  );\r\n}","export class DomUtils {\r\n  scrollBottom(selector) {\r\n    document.querySelector(selector).scrollTo(0, document.querySelector(selector).scrollHeight);\r\n  }\r\n\r\n  isScrollEnd(selector) {\r\n    const scrollPosition =\r\n      document.querySelector(selector).scrollTop +\r\n      document.querySelector(selector).offsetHeight;\r\n    return scrollPosition === document.querySelector(selector).scrollHeight;\r\n  }\r\n\r\n  listenViewHeightChanges() {\r\n    function calcViewHeight() {\r\n      const viewHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n      document.body.style.height = `${viewHeight}px`;\r\n    }\r\n\r\n    calcViewHeight();\r\n    window.addEventListener('onorientationchange', calcViewHeight, true);\r\n    window.addEventListener('resize', calcViewHeight, true);\r\n  }\r\n}","export class ConsoleDoc {\r\n  printHelpOnConsole() {\r\n    if (process.env.NODE_ENV === 'test') {\r\n      return;\r\n    }\r\n\r\n    console.log(\r\n`Hello! Here are some tips you must think useful:\r\nQuery documentation (https://docs.loganalytics.io/docs/Language-Reference/):\r\nSeverity levels:\r\n0: 'verbose',\r\n1: 'information',\r\n2: 'warning',\r\n3: 'error',\r\n4: 'critical'\r\n\r\nQuery samples:\r\ntraces | where severityLevel > 2 | sort by timestamp desc | limit 200\r\ntraces | where message has 'Error' | sort by timestamp desc | limit 200\r\nexceptions | sort by timestamp desc | limit 200\r\nunion exceptions, traces | sort by timestamp desc | limit 200\r\ntraces | where timestamp > todatetime(\"2018-04-26 10:20:00Z\") | sort by timestamp desc | limit 100\r\ntraces | where timestamp > ago(1h)\r\n\r\nShare a url: ${window.location.href.split('?')[0]}?app_id={your_app_id}&api_key={your_api_key}`);\r\n  }\r\n}","export class QueryStringUtils {\r\n  getParams() {\r\n    if (!window.location) {\r\n      return {};\r\n    }\r\n\r\n    const query = window.location.search;\r\n    if (!query) {\r\n      return {};\r\n    }\r\n\r\n    return (/^[?#]/.test(query) ? query.slice(1) : query)\r\n      .split('&')\r\n      .reduce((params, param) => {\r\n        let [key, value] = param.split('=');\r\n        params[key] = value ? decodeURIComponent(value.replace(/\\+/g, ' ')) : '';\r\n        return params;\r\n      }, {});\r\n  }\r\n\r\n  removeParams() {\r\n    if (!window.history) {\r\n      return;\r\n    }\r\n    const url = window.location.href.split('?');\r\n    window.history.pushState({}, '', url[0]);\r\n  }\r\n}","export class DateUtils {\r\n  formatDate(date) {\r\n    return `${this.formatTwoDigit(date.getFullYear())}-${this.formatTwoDigit(date.getMonth() + 1)}-${this.formatTwoDigit(date.getDate())}`;\r\n  }\r\n\r\n  formatTime(date) {\r\n    return `${this.formatTwoDigit(date.getHours())}:${this.formatTwoDigit(date.getMinutes())}:${this.formatTwoDigit(date.getSeconds())}`;\r\n  }\r\n\r\n  formatDateTime(date) {\r\n    if (!date) {\r\n      return '-';\r\n    }\r\n    return this.formatDate(date) + ' ' + this.formatTime(date);\r\n  }\r\n\r\n  formatTwoDigit(number) {\r\n    if (number < 10) {\r\n      return `0${number}`;\r\n    }\r\n    return number;\r\n  }\r\n}","import AuthenticationType from 'Models/AuthenticationType';\r\n\r\nexport class ProfileRepository {\r\n  constructor(storageRepository, queryStringUtils) {\r\n    this.storageRepository = storageRepository;\r\n    this.queryStringUtils = queryStringUtils;\r\n  }\r\n\r\n  getCredentials() {\r\n    const queryCredentials = this.getCredentialsFromQuery();\r\n    if (queryCredentials) {\r\n      return queryCredentials;\r\n    }\r\n\r\n    const storedCredentials = this.storageRepository.getSessionData('credentials', true);\r\n    if (storedCredentials) {\r\n      return ensureCredentialsV2Model(storedCredentials);\r\n    } else {\r\n      const lastUsedCredentials = this.storageRepository.getLocalData('lruCredentials', true);\r\n      if (lastUsedCredentials) {\r\n        return ensureCredentialsV2Model(storedCredentials);\r\n      }\r\n    }\r\n\r\n    return ensureCredentialsV2Model();\r\n  }\r\n\r\n  storeCredentials(credentials) {\r\n    this.storageRepository.saveSessionData('credentials', credentials, true);\r\n    this.storageRepository.saveLocalData('lruCredentials', credentials, true);\r\n    if (credentials.authenticationType === AuthenticationType.apiKey && credentials.appName) {\r\n      this.storeAppCredentials(credentials, credentials.appName);\r\n    }\r\n  }\r\n\r\n  getQuery() {\r\n    return this.storageRepository.getSessionData('query');\r\n  }\r\n\r\n  storeQuery(query) {\r\n    this.storageRepository.saveSessionData('query', query);\r\n  }\r\n\r\n  storeAppCredentials(credentials, appName) {\r\n    if (!appName || !credentials.appId || !credentials.apiKey || credentials.appId === appName) {\r\n      return;\r\n    }\r\n\r\n    const credentialsByApp = this.getAllCredentials() || {};\r\n    credentialsByApp[appName] = credentials;\r\n    this.storageRepository.saveLocalData('credentialsByApp', credentialsByApp, true);\r\n  }\r\n\r\n  getAllCredentials() {\r\n    return this.storageRepository.getLocalData('credentialsByApp', true);\r\n  }\r\n\r\n  getStoredAppNamesCredentials() {\r\n    const credentialsByApp = this.getAllCredentials();\r\n    if (!credentialsByApp) {\r\n      return [];\r\n    }\r\n    const apps = Object.keys(credentialsByApp);\r\n    return apps;\r\n  }\r\n\r\n  findCredentialsCanditate(appName) {\r\n    const credentialsByApp = this.getAllCredentials();\r\n    if (!credentialsByApp) {\r\n      return null;\r\n    }\r\n    return {\r\n      authenticationType: AuthenticationType.apiKey,\r\n      api: credentialsByApp[appName]\r\n    };\r\n  }\r\n\r\n  getUITheme() {\r\n    return this.storageRepository.getLocalData('ui-theme');\r\n  }\r\n\r\n  setUITheme(theme) {\r\n    this.storageRepository.saveLocalData('ui-theme', theme);\r\n  }\r\n\r\n  getCredentialsFromQuery() {\r\n    const queryParams = this.queryStringUtils.getParams();\r\n    if (queryParams['app_id'] && queryParams['api_key']) {\r\n      this.queryStringUtils.removeParams();\r\n      return ensureCredentialsV2Model({\r\n        authenticationType: AuthenticationType.apiKey,\r\n        api: {\r\n          appId: queryParams['app_id'],\r\n          apiKey: queryParams['api_key'],\r\n        }\r\n      });\r\n    }\r\n    return null;\r\n  }\r\n\r\n  clearData() {\r\n    this.storageRepository.clearSessionData();\r\n    this.storageRepository.clearLocalData();\r\n  }\r\n}\r\n\r\nfunction ensureCredentialsV2Model(credentials) {\r\n  credentials = credentials || {};\r\n  const appId = credentials.appId || '';\r\n  const apiKey = credentials.apiKey || '';\r\n  let authenticationType = credentials.authenticationType ? credentials.authenticationType : AuthenticationType.none;\r\n  if (appId && apiKey) {\r\n    authenticationType = AuthenticationType.api;\r\n  }\r\n  return {\r\n    authenticationType,\r\n    api: credentials.api ?\r\n      credentials.api :\r\n      {\r\n        appId,\r\n        apiKey,\r\n      },\r\n    aad: credentials.aad ?\r\n      credentials.aad :\r\n      {\r\n        subscriptionId: '',\r\n        resourceId: '',\r\n        appId: '',\r\n        authenticated: false\r\n      }\r\n  };\r\n}","export class StorageRepository {\r\n  constructor(localStorage, sessionStorage) {\r\n    this.localStorage = localStorage;\r\n    this.sessionStorage = sessionStorage;\r\n  }\r\n\r\n  getSessionData(key, parseObject) {\r\n    if (parseObject) {\r\n      const content = this.sessionStorage.getItem(key);\r\n      try {\r\n        return content ? JSON.parse(content) : null;\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    }\r\n    return this.sessionStorage.getItem(key);\r\n  }\r\n\r\n  saveSessionData(key, value, serializeObject) {\r\n    this.sessionStorage.setItem(key, serializeObject ? JSON.stringify(value) : value);\r\n  }\r\n\r\n  removeSessionData(key) {\r\n    this.sessionStorage.removeItem(key);\r\n  }\r\n\r\n  clearSessionData() {\r\n    this.sessionStorage.clear();\r\n  }\r\n\r\n  getLocalData(key, parseObject) {\r\n    if (parseObject) {\r\n      const content = this.localStorage.getItem(key);\r\n      try {\r\n        return content ? JSON.parse(content) : null;\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    }\r\n    return this.localStorage.getItem(key);\r\n  }\r\n\r\n  saveLocalData(key, value, serializeObject) {\r\n    this.localStorage.setItem(key, serializeObject ? JSON.stringify(value) : value);\r\n  }\r\n\r\n  removeLocalData(key) {\r\n    this.localStorage.removeItem(key);\r\n  }\r\n\r\n  clearLocalData() {\r\n    this.localStorage.clear();\r\n  }\r\n}\r\n\r\nexport class MockStorage {\r\n  constructor(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  getItem(key) {\r\n    return this.data[key];\r\n  }\r\n\r\n  setItem(key, value) {\r\n    this.data[key] = value;\r\n  }\r\n\r\n  removeItem(key) {\r\n    delete this.data[key];\r\n  }\r\n\r\n  clear() {\r\n    Object.keys(this.data).forEach(key => {\r\n      this.removeItem(key);\r\n    });\r\n  }\r\n}","const traceMapper = (row, colPropertiesIndex) => {\r\n  if (!hasRequiredProperties(['timestamp', 'message'], row, colPropertiesIndex)) {\r\n    return null;\r\n  }\r\n  const model = { };\r\n  model.timestamp = new Date(row[colPropertiesIndex['timestamp']]);\r\n  model.severityLevel = row[colPropertiesIndex['severityLevel']] || 0;\r\n  model.message = row[colPropertiesIndex['message']];\r\n\r\n  return model;\r\n};\r\n\r\nconst exceptionMapper = (row, colPropertiesIndex) => {\r\n  if (!hasRequiredProperties(['timestamp'], row, colPropertiesIndex)) {\r\n    return null;\r\n  }\r\n  const model = { };\r\n  model.timestamp = new Date(row[colPropertiesIndex['timestamp']]);\r\n  model.severityLevel = row[colPropertiesIndex['severityLevel']] || 0;\r\n  model.message =\r\n  [\r\n    row[colPropertiesIndex['problemId']],\r\n    row[colPropertiesIndex['outerMessage']]\r\n  ]\r\n  .filter(v => v != null)\r\n  .join(': ');\r\n\r\n  if (row[colPropertiesIndex['outerMessage']] !== row[colPropertiesIndex['innermostMessage']] && row[colPropertiesIndex['innermostMessage']]) {\r\n    model.message += '\\r\\n' +\r\n    [\r\n      row[colPropertiesIndex['innermostType']],\r\n      row[colPropertiesIndex['innermostMessage']]\r\n    ]\r\n    .filter(v => v != null)\r\n    .join(': ');\r\n  }\r\n  return model;\r\n};\r\n\r\nconst propsMapper = (row, colPropertiesIndex) => {\r\n  if (!hasRequiredProperties(['timestamp'], row, colPropertiesIndex)) {\r\n    return null;\r\n  }\r\n  const model = { };\r\n  model.timestamp = new Date(row[colPropertiesIndex['timestamp']]);\r\n  model.severityLevel = row[colPropertiesIndex['severityLevel']] || 0;\r\n  model.message = '';\r\n\r\n  Object.keys(colPropertiesIndex)\r\n    .filter(prop => prop !== 'timestamp' && prop !== 'severityLevel')\r\n    .forEach(prop => {\r\n      model.message += `${prop}: ${row[colPropertiesIndex[prop]]}\\n`;\r\n    });\r\n\r\n  return model;\r\n};\r\n\r\n\r\nconst responseMappers = {\r\n  'trace': traceMapper,\r\n  'exception': exceptionMapper,\r\n  'log': traceMapper,\r\n  'props': propsMapper\r\n};\r\n\r\nexport function getRowMapper(row, colPropertiesIndex) {\r\n  const itemType = row[colPropertiesIndex['itemType']];\r\n  if (responseMappers[itemType]) {\r\n    return responseMappers[itemType];\r\n  }\r\n  if (hasRequiredProperties(['timestamp', 'message'], row, colPropertiesIndex)) {\r\n    return responseMappers['log'];\r\n  }\r\n  return responseMappers['props'];\r\n}\r\n\r\n/**\r\n * return a dictionary of property name and column index\r\n * {[columnName: string]: columnIndex: number} response\r\n */\r\nexport function buildColumnPropertyIndex(response) {\r\n  const colPropertiesIndex = {};\r\n  response.tables[0].columns.forEach((c, i) => {\r\n    const propName = c.name || c.columnName;\r\n    colPropertiesIndex[propName] = i;\r\n  });\r\n  return colPropertiesIndex;\r\n}\r\n\r\nexport function toCamelCase(object) {\r\n  if (Array.isArray(object)) {\r\n    return object.map((value) => {\r\n        if (typeof value === 'object') {\r\n          value = toCamelCase(value);\r\n        }\r\n        return value;\r\n    });\r\n  } else if (typeof object === 'object') {\r\n    let mappedObject = null;\r\n    for (const objectProp in object) {\r\n      if (!mappedObject) {\r\n        mappedObject = {};\r\n      }\r\n      if (object.hasOwnProperty(objectProp)) {\r\n        const newKey = (objectProp.charAt(0).toLowerCase() + objectProp.slice(1) || objectProp).toString();\r\n        let value = object[objectProp];\r\n        if (value instanceof Array || (value != null && value.constructor === Object)) {\r\n          value = toCamelCase(value);\r\n        }\r\n        mappedObject[newKey] = value;\r\n      }\r\n    }\r\n    return mappedObject;\r\n  } else {\r\n    return object;\r\n  }\r\n}\r\n\r\nfunction hasRequiredProperties(properties, row, colPropertiesIndex) {\r\n  return properties.every(prop => row[colPropertiesIndex[prop]] != null);\r\n}","import { throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { buildColumnPropertyIndex, getRowMapper, toCamelCase } from './ResponseMappers';\r\nimport AuthenticationType from 'Models/AuthenticationType';\r\n\r\nexport class ApplicationInsightsClient {\r\n  constructor(httpClient, aadAuthService) {\r\n    this.httpClient = httpClient;\r\n    this.aadAuthService = aadAuthService;\r\n  }\r\n\r\n  getLogs(credentials, query, timespan) {\r\n    const queryParams = [{ name: 'query', value: query }, { name: 'api-version', value: '2018-05-01-preview' }];\r\n    if (timespan) {\r\n      queryParams.push({ name: 'timespan', value: timespan });\r\n    }\r\n    try {\r\n      return this.httpClient.get(\r\n        `${this.buildAppUri(credentials)}/query`,\r\n        this.buildHeaders(credentials),\r\n        queryParams\r\n      )\r\n      .pipe(\r\n        map(httpResponse => this.mapQueryResponse(httpResponse.response)),\r\n        catchError(error => {\r\n          console.error(error.response);\r\n          if (error.status === 401) {\r\n            return throwError(error);\r\n          } else if (error.response && error.response.error) {\r\n            const reason = this.mapError('', error.response.error);\r\n            return throwError(reason);\r\n          } else if (typeof (error.response) === 'string') {\r\n            return throwError(`${error.status}: ${error.response}`);\r\n          }\r\n          return throwError(error);\r\n        })\r\n      );\r\n\r\n    } catch (e) {\r\n      return throwError(e);\r\n    }\r\n  }\r\n\r\n  mapError(message, error) {\r\n    if (!error || !error.message) {\r\n      return `${message}`;\r\n    }\r\n    return this.mapError(`${message}${error.message}. `, error.innererror);\r\n  }\r\n\r\n  buildAppUri(credentials) {\r\n    if (credentials.authenticationType === AuthenticationType.aad) {\r\n      return `https://management.azure.com/${credentials.aad.resourceId}/api`;\r\n    } else if (credentials.authenticationType === AuthenticationType.apiKey) {\r\n      return `https://api.applicationinsights.io/v1/apps/${credentials.api.appId}`;\r\n    }\r\n    throw new Error('You must setup an authentication to fetch logs');\r\n  }\r\n\r\n  buildHeaders(credentials) {\r\n    if (credentials.authenticationType === AuthenticationType.none) {\r\n      throw new Error('You must setup an authentication');\r\n    }\r\n\r\n    if (credentials.authenticationType === AuthenticationType.aad) {\r\n      return this.buildAadAuthorizationHeaders();\r\n    }\r\n\r\n    return {\r\n      'x-api-key': credentials.api.apiKey\r\n    };\r\n  }\r\n\r\n  buildAadAuthorizationHeaders() {\r\n    if (!this.aadAuthService.isAuthenticated()) {\r\n      throw new Error('You must be authenticated to your Azure Active Directory tenant');\r\n    }\r\n\r\n    const aadAccessToken = this.aadAuthService.getToken();\r\n    return {\r\n      'Authorization': `Bearer ${aadAccessToken}`\r\n    };\r\n  }\r\n\r\n  mapQueryResponse(response) {\r\n    response = toCamelCase(response);\r\n    if (!response || !response.tables) {\r\n      throw new Error('Unexpected response content from query');\r\n    }\r\n\r\n    const colPropertiesIndex = buildColumnPropertyIndex(response);\r\n    const rows = response.tables[0].rows.map(row => {\r\n      const reponseMapper = getRowMapper(row, colPropertiesIndex);\r\n      if (!reponseMapper) {\r\n        // when item type is not supported, skip\r\n        return null;\r\n      }\r\n\r\n      var model = reponseMapper(row, colPropertiesIndex);\r\n      return model;\r\n    })\r\n      .filter(r => r !== null)\r\n      .sort((a, b) => {\r\n        if (a.timestamp === b.timestamp) {\r\n          return 0;\r\n        } else if (a.timestamp > b.timestamp) {\r\n          return 1;\r\n        } else {\r\n          return -1;\r\n        }\r\n      });\r\n\r\n    return {\r\n      logs: rows,\r\n      appName: this.getAppName(response, colPropertiesIndex),\r\n      fetchTime: new Date()\r\n    };\r\n  }\r\n\r\n  getAppName(response, columnsIndexPropertyMap) {\r\n    if (response.tables[0].rows.length < 1) {\r\n      return null;\r\n    }\r\n    const appNameIndex = columnsIndexPropertyMap['appName'];\r\n    return response.tables[0].rows[0][appNameIndex]\r\n  }\r\n\r\n  listAppInsightsAccounts(subscriptionId) {\r\n    const queryParams = [{ name: 'api-version', value: '2015-05-01' }];\r\n    let uri = `https://management.azure.com/subscriptions/${subscriptionId}/providers/Microsoft.Insights/components`;\r\n\r\n    return this.httpClient.get(uri, this.buildAadAuthorizationHeaders(), queryParams)\r\n      .pipe(map(r => r.response.value.map(resource => {\r\n        return {\r\n          id: resource.id,\r\n          name: resource.name,\r\n          appId: resource.properties.AppId\r\n        };\r\n      })));\r\n  }\r\n\r\n  listSubscriptions() {\r\n    const queryParams = [{ name: 'api-version', value: '2015-05-01' }];\r\n    const uri = `https://management.azure.com/subscriptions`;\r\n\r\n    return this.httpClient.get(uri, this.buildAadAuthorizationHeaders(), queryParams)\r\n      .pipe(map(r => r.response.value.map(resource => {\r\n        return {\r\n          id: resource.subscriptionId,\r\n          name: resource.displayName\r\n        };\r\n      })));\r\n  }\r\n}","import { ajax } from 'rxjs/ajax';\r\n\r\nexport class HttpClient {\r\n  get(uri, headers, query) {\r\n    return this.request('GET', uri, headers, query);\r\n  }\r\n\r\n  post(uri, body, headers, query) {\r\n    return this.request('POST', uri, headers, query, body);\r\n  }\r\n\r\n  put(uri, body, headers, query) {\r\n    return this.request('PUT', uri, headers, query, body);\r\n  }\r\n\r\n  delete(uri, headers, query) {\r\n    return this.request('DELETE', uri, headers, query);\r\n  }\r\n\r\n  request(method, uri, headers, query, body) {\r\n    let requestHeaders = {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    };\r\n\r\n    if (headers) {\r\n      requestHeaders = { ...requestHeaders, ...headers };\r\n    }\r\n\r\n    const queryString = buildQuery(query);\r\n    return ajax({\r\n      url: queryString ? `${uri}?${queryString}` : uri,\r\n      method: method,\r\n      headers: requestHeaders,\r\n      responseType: 'json',\r\n      body: body\r\n    });\r\n  }\r\n}\r\n\r\nfunction buildQuery(query) {\r\n  if (!query || !query.length) return null;\r\n\r\n  return query.map(q => `${q.name}=${encodeURIComponent(q.value)}`).join('&');\r\n}","import { fromEvent, of } from 'rxjs';\r\nimport { filter, map, take, tap } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport class AadAuthService {\r\n  constructor(storageRepository) {\r\n    this.storageRepository = storageRepository;\r\n    this.clientId = process.env.REACT_APP_CLIENT_ID;\r\n    this.scopes = [\r\n      'openid',\r\n      'profile',\r\n      'https://management.azure.com/user_impersonation',\r\n      // 'https://api5.applicationinsights.io/Data.Read' // AAD Gives an error (AADSTS28000) if more than 1 scope. Really MSFT!?\r\n    ];\r\n    this.iframeName = 'aad-silent-refresh';\r\n    this.refreshingToken = false;\r\n    this.tokenSubject = new Subject();\r\n\r\n    this.checkResponseCallback();\r\n  }\r\n\r\n  checkResponseCallback() {\r\n    const fragmentParams = this.parseFragmentParams();\r\n    if (!fragmentParams) return;\r\n\r\n    if (fragmentParams['error']) {\r\n      const err = `Error: ${fragmentParams['error']}\\nDetails: ${fragmentParams['error_description']}`;\r\n      if (!isIfFrame()) {\r\n        this.storageRepository.removeSessionData('access_token');\r\n        alert(err);\r\n      } else {\r\n        this.postMessageToParent({\r\n          type: messageTypes.refresh_token_error,\r\n          errorMessage: err\r\n        });\r\n      }\r\n      this.setHash('');\r\n    } else if (fragmentParams['access_token']) {\r\n      if (!isIfFrame()) {\r\n        this.storageRepository.saveSessionData('access_token', fragmentParams['access_token']);\r\n      } else {\r\n        this.postMessageToParent({\r\n          type: messageTypes.refresh_token_success,\r\n          accessToken: fragmentParams['access_token']\r\n        });\r\n      }\r\n      this.setHash('');\r\n    }\r\n  }\r\n\r\n  logout() {\r\n    this.storageRepository.removeSessionData('access_token');\r\n  }\r\n\r\n  silentTokenRefresh() {\r\n    if (isIfFrame()) {\r\n      const errorMessage = 'silentTokenRefresh should not be run in an iframe';\r\n      console.warn(errorMessage);\r\n      return of({success: false, errorMessage });\r\n    }\r\n    if (this.refreshingToken) {\r\n      console.warn('Refresh token silent is already in progress');\r\n      return this.tokenSubject;\r\n    }\r\n    this.refreshingToken = true;\r\n    this.createIFrameIfNotExists();\r\n\r\n    const redirectUrl = this.buildLoginUrl('none');\r\n    setTimeout(() => window.open(redirectUrl, this.iframeName), 1000);\r\n    return fromEvent(window, 'message')\r\n      .pipe(\r\n        filter(event => {\r\n          if (event.origin !== window.origin) {\r\n            return false;\r\n          }\r\n\r\n          let message = null;\r\n          try {\r\n            message = JSON.parse(event.data);\r\n          } catch { }\r\n          return message && (\r\n            message.type === messageTypes.refresh_token_success ||\r\n            message.type === messageTypes.refresh_token_error\r\n            );\r\n        }),\r\n        map(e => JSON.parse(e.data)),\r\n        map(message => {\r\n          if (message.type === messageTypes.refresh_token_success) {\r\n            this.storageRepository.saveSessionData('access_token', message.accessToken);\r\n          } else {\r\n            this.storageRepository.removeSessionData('access_token');\r\n            this.storageRepository.saveSessionData('aad.error', message.errorMessage);\r\n          }\r\n\r\n          this.refreshingToken = false;\r\n          document.querySelector(`#${this.iframeName}`).remove();\r\n          return {\r\n            success: message.type === messageTypes.refresh_token_success,\r\n            errorMessage: message.errorMessage ? message.errorMessage : null\r\n          };\r\n        }),\r\n        take(1),\r\n        tap(message => this.tokenSubject.next(message)),\r\n      );\r\n  }\r\n\r\n  createIFrameIfNotExists() {\r\n    if (!document.querySelector(`#${this.iframeName}`)) {\r\n      const iframe = document.createElement('iframe');\r\n      iframe.setAttribute('id', this.iframeName);\r\n      iframe.setAttribute('name', this.iframeName);\r\n      iframe.setAttribute('hidden', 'true');\r\n      document.body.appendChild(iframe);\r\n    }\r\n  }\r\n\r\n  loginRedirect() {\r\n    const redirectUrl = this.buildLoginUrl();\r\n    document.location.href = redirectUrl;\r\n  }\r\n\r\n  getToken() {\r\n    return this.storageRepository.getSessionData('access_token');\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return !isIfFrame() && this.getToken() != null;\r\n  }\r\n\r\n  getHash() {\r\n    return document.location.hash;\r\n  }\r\n\r\n  setHash(hash) {\r\n    return document.location.hash = hash;\r\n  }\r\n\r\n  postMessageToParent(message) {\r\n    window.parent.postMessage(JSON.stringify(message), '*');\r\n  }\r\n\r\n  buildLoginUrl(prompt) {\r\n    if (!prompt) {\r\n      prompt = 'select_account';\r\n    }\r\n    const queryParams = [\r\n      { name: 'client_id', value: this.clientId },\r\n      { name: 'response_type', value: 'token' },\r\n      { name: 'redirect_uri', value: document.location.origin },\r\n      { name: 'scope', value: this.scopes.join(' ') },\r\n      { name: 'prompt', value: prompt },\r\n    ];\r\n    const tenant = 'organizations';\r\n    const redirectUrl = `https://login.microsoftonline.com/${tenant}/oauth2/v2.0/authorize?${this.formatQuery(queryParams)}`;\r\n    return redirectUrl;\r\n  }\r\n\r\n  parseFragmentParams() {\r\n    if (this.getHash() === '') {\r\n      return null;\r\n    }\r\n    const params = this.getHash().substring(1).split('&')\r\n      .map(p => {\r\n        const prop = p.split('=');\r\n        return {\r\n          name: prop[0],\r\n          value: decodeURIComponent(prop[1].replace(/\\+/g, '%20'))\r\n        }\r\n      }).reduce((prev, current) => {\r\n        prev[current.name] = current.value;\r\n        return prev;\r\n      }, {});\r\n\r\n    return params;\r\n  }\r\n\r\n  formatQuery(queryParams) {\r\n    const query = queryParams.map(q => `${q.name}=${encodeURIComponent(q.value)}`).join('&');\r\n    return query;\r\n  }\r\n}\r\n\r\nfunction isIfFrame() {\r\n  try {\r\n    return window.self !== window.top;\r\n  } catch {\r\n    return true;\r\n  }\r\n}\r\n\r\nconst messageTypes = {\r\n  refresh_token_success: 'refresh_token_success',\r\n  refresh_token_error: 'refresh_token_error',\r\n};","import { DomUtils } from 'Utils/DomUtils';\r\nimport { ConsoleDoc } from 'Utils/ConsoleDoc';\r\nimport { QueryStringUtils } from 'Utils/QueryStringUtils';\r\nimport { DateUtils } from 'Utils/DateUtils';\r\nimport { ProfileRepository } from 'Services/ProfileRepository';\r\nimport { StorageRepository, MockStorage } from 'Services/StorageRepository';\r\nimport { ApplicationInsightsClient } from 'Services/ApplicationInsightsClient';\r\nimport { HttpClient } from 'Services/HttpClient';\r\nimport { AadAuthService } from 'Services/AadAuthService';\r\n\r\nconst isTest = process.env.NODE_ENV === 'test';\r\n\r\nconst dependencies = {\r\n  ApplicationInsightsClient: (c) => new ApplicationInsightsClient(\r\n    c('HttpClient'),\r\n    c('AadAuthService')\r\n  ),\r\n  ProfileRepository: (c) => new ProfileRepository(c('StorageRepository'), c('QueryStringUtils')),\r\n  DomUtils: () => new DomUtils(),\r\n  ConsoleDoc: () => new ConsoleDoc(),\r\n  QueryStringUtils: () => new QueryStringUtils(),\r\n  DateUtils: () => new DateUtils(),\r\n  HttpClient: () => new HttpClient(),\r\n  AadAuthService: (c) => new AadAuthService(c('StorageRepository')),\r\n  StorageRepository: () => {\r\n    const localStorage = isTest ?\r\n      new MockStorage({}) :\r\n      window.localStorage;\r\n\r\n    const sessionStorage = isTest ?\r\n      new MockStorage({}) :\r\n      window.sessionStorage;\r\n    return new StorageRepository(localStorage, sessionStorage);\r\n  }\r\n};\r\n\r\nexport function inject(name) {\r\n  const dependencyFactory = dependencies[name];\r\n  if (!dependencyFactory) {\r\n    throw new Error(`${name} is not registered`);\r\n  }\r\n  return dependencyFactory(inject);\r\n}","import { createStore, applyMiddleware } from 'redux';\r\nimport { createEpicMiddleware } from 'redux-observable';\r\nimport { rootReducer } from 'Reducers';\r\nimport { rootEpic } from 'Epics';\r\nimport { inject } from './container';\r\n\r\nconst epicMiddleware = createEpicMiddleware({\r\n  dependencies: {\r\n    inject: inject\r\n  }\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(epicMiddleware)\r\n);\r\n\r\nepicMiddleware.run(rootEpic);\r\n\r\nexport default store;","import './Header.css';\r\nimport React from 'react';\r\n\r\nconst Header = (props) => {\r\n  const { sidebar, toggleSidebar, appName, loading } = props;\r\n  const titleIconClass = `ail-header-title_icon ${(loading ? 'ail-header-title_icon--loading' : '')}`;\r\n  return (\r\n    <header className=\"ail-header\">\r\n      <div className=\"ail-header-app_name\" hidden={!appName}>{appName}</div>\r\n      <strong className=\"ail-header-title\">\r\n        <span className={titleIconClass} role=\"img\" aria-labelledby=\"ail-header-title\">💡 </span>\r\n        <span id=\"ail-header-title\">Application Insights Log</span>\r\n      </strong>\r\n      <div className=\"ail-credentials-menu\">\r\n        <div className={`ail-icon-menu ${sidebar ? 'open' : ''}`}\r\n          onClick={() => toggleSidebar()}>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","const SeverityLevel = {\r\n  0: 'verbose',\r\n  1: 'information',\r\n  2: 'warning',\r\n  3: 'error',\r\n  4: 'critical'\r\n};\r\n\r\nexport default SeverityLevel;\r\n","import React from 'react';\r\nimport SeverityLevel from 'Models/SeverityLevel';\r\nimport { inject } from 'Store/container';\r\nimport './LogLine.css';\r\n\r\nconst dateUtils = inject('DateUtils');\r\n\r\nconst LogLine = (props) => {\r\n  const { log } = props;\r\n  return (\r\n    <div className={`ail-log_line ail-log_line--${SeverityLevel[log.severityLevel]}`}>\r\n      <span className=\"ail-log_line-time\">[{dateUtils.formatDateTime(log.timestamp)}]</span>\r\n      <span className=\"ail-log_line-message\">{log.message}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogLine;","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LogLine from './LogLine';\r\nimport { inject } from 'Store/container';\r\n\r\nconst dateUtils = inject('DateUtils');\r\n\r\nconst mapStateToProps = state => {\r\n  return { logs: state.logs, fetchTime: state.fetchTime, appName: state.appName };\r\n};\r\n\r\nlet Log = ({ logs, fetchTime, appName }) => (\r\n  <Fragment>\r\n    <h1>\r\n      {appName || 'No results'}\r\n    </h1>\r\n    <div className=\"ail-log\">\r\n      {logs.map((item, i) =>\r\n        <LogLine log={item} key={dateUtils.formatDate(fetchTime) + i} />\r\n      )}\r\n    </div>\r\n  </Fragment>\r\n);\r\nLog = connect(mapStateToProps)(Log);\r\nexport default Log;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  changeThemeAction,\r\n  UIThemes\r\n} from 'Actions/UI';\r\n\r\nconst mapStateToProps = state => {\r\n  let themeIndex = UIThemes.findIndex(t => t.className === state.ui.theme);\r\n  themeIndex = (themeIndex < UIThemes.length - 1) ? themeIndex + 1 : 0;\r\n  return {\r\n    nextTheme: UIThemes[themeIndex],\r\n    theme: state.ui.theme\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeTheme: theme => dispatch(changeThemeAction(theme))\r\n  };\r\n};\r\n\r\nclass UISettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.handleThemeChange = this.handleThemeChange.bind(this);\r\n  }\r\n\r\n  handleThemeChange(value) {\r\n    this.props.changeTheme(value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ail-credentials-section\">\r\n        <label>UI Theme</label>\r\n        <div className=\"ail-btn ail-btn--default\" onClick={() => this.handleThemeChange(this.props.nextTheme.className)}>\r\n          Toggle {this.props.nextTheme.name} theme\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nUISettings = connect(mapStateToProps, mapDispatchToProps)(UISettings);\r\nexport default UISettings;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setCredentialsAction,\r\n} from 'Actions/Profile';\r\nimport {\r\n  listSubscriptionsAction,\r\n  listAIAppsAction,\r\n  aadLoginAction,\r\n  aadLogoutAction,\r\n} from 'Actions/Profile/Account';\r\nimport AuthenticationType from 'Models/AuthenticationType';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    subscriptionsApps: {...state.aad.subscriptionsApps},\r\n    subscriptions: [...state.aad.subscriptions],\r\n    credentials: {...state.credentials}\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCredentials: credentials => dispatch(setCredentialsAction(credentials)),\r\n    listSubscriptions: () => dispatch(listSubscriptionsAction()),\r\n    listAIApps: subscriptionId => dispatch(listAIAppsAction(subscriptionId)),\r\n    login: () => dispatch(aadLoginAction()),\r\n    logout: () => dispatch(aadLogoutAction()),\r\n  };\r\n};\r\n\r\nclass AadResourcePicker extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      credentials: props.credentials\r\n    };\r\n  }\r\n\r\n  checkSubscriptionsLoad(props) {\r\n    if (props.credentials.authenticationType === AuthenticationType.aad && props.credentials.aad.authenticated && props.subscriptions.length === 0) {\r\n      this.props.listSubscriptions();\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.credentials.aad.authenticated) {\r\n      this.checkSubscriptionsLoad(nextProps);\r\n      const nextSubscription = nextProps.credentials.aad.subscriptionId;\r\n      if (\r\n        nextSubscription &&\r\n        this.state.credentials.aad.subscriptionId !== nextSubscription &&\r\n        !nextProps.subscriptionsApps[nextSubscription]\r\n      ) {\r\n          this.props.listAIApps(nextSubscription);\r\n      }\r\n    }\r\n    this.setState({\r\n      credentials: {...nextProps.credentials}\r\n    });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.checkSubscriptionsLoad(this.props);\r\n    this.props.setCredentials(this.state.credentials);\r\n  }\r\n\r\n  validCredentials = () => {\r\n    return this.state.credentials.aad.resourceId\r\n      && this.state.credentials.aad.subscriptionId;\r\n  }\r\n\r\n  selectResource = (resourceId) => {\r\n    const app = this.props.subscriptionsApps[this.state.credentials.aad.subscriptionId]\r\n      .find(s => s.id === resourceId);\r\n\r\n    let { aad } = this.state.credentials;\r\n    const appId = app ? app.appId : '';\r\n    aad = { ...aad, resourceId, appId };\r\n    this.props.setCredentials({...this.state.credentials, aad });\r\n  }\r\n\r\n  selectSubscription = (subscriptionId) => {\r\n    let { aad } = this.state.credentials;\r\n    const resourceId = '';\r\n    const appId = '';\r\n    aad = { ...aad, subscriptionId, resourceId, appId };\r\n    this.props.setCredentials({...this.state.credentials, aad });\r\n  }\r\n\r\n  renderSubscriptionsDropDown() {\r\n    if (!this.state.credentials.aad.authenticated) return '';\r\n    const subscriptions = this.props.subscriptions;\r\n\r\n    return (\r\n      <div className=\"ail-credentials-section\">\r\n        <label>Subscription</label>\r\n        <select value={this.state.credentials.aad.subscriptionId}\r\n          className=\"ail-input\"\r\n          onChange={(e) => this.selectSubscription(e.target.value)}>\r\n          <option value=\"\">Select subscription</option>\r\n          {subscriptions.map((subscription) =>\r\n            <option key={subscription.id} value={subscription.id}>{subscription.name}</option>\r\n          )}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAppsDropDown() {\r\n    if (!this.state.credentials.aad.authenticated) return '';\r\n    const subscriptionApps = this.props.subscriptionsApps[this.state.credentials.aad.subscriptionId] || [];\r\n    if (subscriptionApps.length === 0) {\r\n      return '';\r\n    }\r\n    return (\r\n      <div className=\"ail-credentials-section\">\r\n        <label>Application Insights Resource</label>\r\n        <select value={this.state.credentials.aad.resourceId}\r\n          className=\"ail-input\"\r\n          onChange={(e) => this.selectResource(e.target.value)}>\r\n          <option value=\"\">Select application</option>\r\n          {subscriptionApps.map((app) =>\r\n            <option key={app.id} value={app.id}>{app.name}</option>\r\n          )}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  login = () => {\r\n    this.props.login();\r\n  }\r\n\r\n  logout = () => {\r\n    this.props.logout();\r\n  }\r\n\r\n  renderLoginButton() {\r\n    return (<Fragment>{\r\n      this.props.credentials.aad.authenticated ?\r\n          <button type=\"button\" className={`ail-btn ail-btn--success u-w100 u-mt-2`} onClick={() => this.logout()}>\r\n            Logout <span role=\"img\" aria-label=\"lock\">🔒</span>\r\n          </button> :\r\n          <button type=\"button\"\r\n            className={`ail-btn ail-btn--default u-w100 u-mt-2`}\r\n            onClick={() => this.login()}>Login <span role=\"img\" aria-label=\"key\">🔑</span></button>\r\n    }</Fragment>);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        {this.renderLoginButton()}\r\n        {this.renderSubscriptionsDropDown()}\r\n        {this.renderAppsDropDown()}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nAadResourcePicker = connect(mapStateToProps, mapDispatchToProps)(AadResourcePicker);\r\nexport default AadResourcePicker;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setCredentialsAction,\r\n} from 'Actions/Profile';\r\nimport AuthenticationType from 'Models/AuthenticationType';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    credentials: { ...state.credentials }\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCredentials: credentials => dispatch(setCredentialsAction(credentials))\r\n  };\r\n};\r\n\r\nclass AuthenticationModeSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      credentials: props.credentials\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      credentials: { ...nextProps.credentials }\r\n    });\r\n  }\r\n\r\n  changeAuthentication = (authenticationType) => {\r\n    this.props.setCredentials({ ...this.state.credentials, authenticationType });\r\n  }\r\n\r\n  isActive(authenticationType) {\r\n    return this.props.credentials.authenticationType === authenticationType;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label>Authentication Mode</label>\r\n        <div className=\"ail-btn-group\">\r\n          <button type=\"button\" className={`ail-btn ${this.isActive(AuthenticationType.aad) ? 'is-active' : ''} u-mt-2`}\r\n            title=\"Connect to Application Insights using an Azure Active Directory account\"\r\n            onClick={() => this.changeAuthentication(AuthenticationType.aad)}>\r\n            Azure AD\r\n          </button>\r\n          <button type=\"button\" className={`ail-btn ${this.isActive(AuthenticationType.apiKey) ? 'is-active' : ''} u-mt-2`}\r\n            title=\"Connect to Application Insights using an AppID and Api key\"\r\n            onClick={() => this.changeAuthentication(AuthenticationType.apiKey)}>\r\n            API Key\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAuthenticationModeSelector = connect(mapStateToProps, mapDispatchToProps)(AuthenticationModeSelector);\r\nexport default AuthenticationModeSelector;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setCredentialsAction,\r\n  clearDataAction,\r\n  tryFindApiCredentialsAction\r\n} from 'Actions/Profile';\r\nimport { setAutoRefreshAction, setSearchPeriodAction } from 'Actions/Logs';\r\nimport AuthenticationType from 'Models/AuthenticationType';\r\nimport './Credentials.css';\r\nimport UISettings from './UISettings';\r\nimport AadResourcePicker from './AadResourcePicker';\r\nimport AuthenticationModeSelector from './AuthenticationModeSelector';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    autoRefresh: state.autoRefresh,\r\n    searchPeriod: state.searchPeriod,\r\n    availableApps: [...state.availableApps],\r\n    credentials: { ...state.credentials }\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCredentials: credentials => dispatch(setCredentialsAction(credentials)),\r\n    clearData: () => dispatch(clearDataAction()),\r\n    tryFindCredentials: appName => dispatch(tryFindApiCredentialsAction(appName)),\r\n    setAutoRefresh: enabled => dispatch(setAutoRefreshAction(enabled)),\r\n    setSearchPeriod: searchPeriod => dispatch(setSearchPeriodAction(searchPeriod)),\r\n  };\r\n};\r\n\r\nclass Credentials extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      credentials: { ...props.credentials },\r\n      availableApps: props.availableApps,\r\n      selectedStoredCredential: '',\r\n      editing: props.credentials.api.appId === null\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (!this.state.editing && this.credentialsChanged(nextProps.credentials, this.state.credentials)) {\r\n      this.setState({\r\n        credentials: nextProps.credentials,\r\n        selectedStoredCredential: ''\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    let { api } = this.state.credentials;\r\n    api = { ...api, [event.target.id]: event.target.value };\r\n    this.setState({ credentials: { ...this.state.credentials, api } });\r\n  }\r\n\r\n  handlePeriodChange(event) {\r\n    this.props.setSearchPeriod(event.target.value);\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (!this.state.editing) {\r\n      this.setState({ editing: !this.state.editing });\r\n      return;\r\n    }\r\n    const { api } = this.state.credentials;\r\n    this.props.setCredentials({\r\n      ...this.state.credentials,\r\n      api\r\n    });\r\n    this.setState({ editing: !this.state.editing });\r\n  }\r\n\r\n  checkStoredAppCredentials(appName) {\r\n    this.setState({ editing: false });\r\n    this.props.tryFindCredentials(appName);\r\n    this.setState({ selectedStoredCredential: appName })\r\n  }\r\n\r\n  clearData = () => {\r\n    if (!window.confirm('Are you sure to clear all stored data?')) {\r\n      return;\r\n    }\r\n    this.props.clearData();\r\n  }\r\n\r\n  toggleAutoRefresh() {\r\n    this.props.setAutoRefresh(!this.props.autoRefresh);\r\n  }\r\n\r\n  credentialsChanged(credentials1, credentials2) {\r\n    return credentials1.api.appId !== credentials2.api.appId || credentials1.api.apiKey !== credentials2.api.apiKey;\r\n  }\r\n\r\n  validCredentials = () => {\r\n    return this.state.credentials.api.appId && this.state.credentials.api.apiKey;\r\n  }\r\n\r\n  renderCredentialsForm() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"ail-credentials-section ail-credentials\">\r\n          <label>Credentials</label>\r\n          <input className=\"ail-input\" value={this.state.credentials.api.appId}\r\n            placeholder='App id'\r\n            id=\"appId\"\r\n            disabled={!this.state.editing}\r\n            onChange={(e) => this.handleChange(e)} />\r\n          <input className=\"ail-input\" value={this.state.credentials.api.apiKey}\r\n            id=\"apiKey\"\r\n            placeholder='API key'\r\n            disabled={!this.state.editing}\r\n            onChange={(e) => this.handleChange(e)} />\r\n          {\r\n            this.state.editing ?\r\n              <button className={`ail-btn ail-btn--success u-w100 u-mt-2 ${(!this.validCredentials() ? 'disabled' : '')}`}>\r\n                Apply\r\n              </button> :\r\n              <button className={`ail-btn ail-btn--default u-w100 u-mt-2`}>Edit</button>\r\n          }\r\n        </div>\r\n        {this.renderAppsDropDown()}\r\n      </form>\r\n    );\r\n  }\r\n\r\n  renderAppsDropDown() {\r\n    if (this.props.availableApps.length === 0) {\r\n      return '';\r\n    }\r\n\r\n    return (\r\n      <div className=\"ail-credentials-section\">\r\n        <label>Switch apps</label>\r\n        <select value={this.state.selectedStoredCredential}\r\n          className=\"ail-input\"\r\n          onChange={(e) => this.checkStoredAppCredentials(e.target.value)}>\r\n          <option>Saved apps</option>\r\n          {this.props.availableApps.sort().map((appName, i) =>\r\n            <option key={i} value={appName}>{appName}</option>\r\n          )}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderGlobalOptions() {\r\n    return (\r\n      <div className=\"ail-credentials-section\">\r\n        <label>Settings</label>\r\n        <ul className=\"ail-btn-list\">\r\n          <li className=\"ail-toggle\">\r\n            <input className=\"hidden\" type=\"checkbox\" id=\"autorefresh\" checked={this.props.autoRefresh} onChange={(e) => this.toggleAutoRefresh()} />\r\n            <label htmlFor=\"autorefresh\" className=\"ail-btn\">Auto refresh</label>\r\n          </li>\r\n          <li className=\"ail-btn ail-btn--default\" onClick={() => this.clearData()}>Clear data</li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderPeriod() {\r\n    return (\r\n      <div className=\"ail-credentials-section\">\r\n        <label>Search period</label>\r\n        <input className=\"ail-input\" value={this.props.searchPeriod}\r\n          placeholder='Specify period (P7D, PT1H...)'\r\n          id=\"searchPeriod\"\r\n          onChange={(e) => this.handlePeriodChange(e)} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderApplicationPicker() {\r\n    return (\r\n      <Fragment>\r\n        {this.props.credentials.authenticationType === AuthenticationType.apiKey ? this.renderCredentialsForm() : ''}\r\n        {this.props.credentials.authenticationType === AuthenticationType.aad ? <AadResourcePicker /> : ''}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AuthenticationModeSelector />\r\n        {this.renderApplicationPicker()}\r\n        {this.renderGlobalOptions()}\r\n        {this.renderPeriod()}\r\n        <UISettings />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nCredentials = connect(mapStateToProps, mapDispatchToProps)(Credentials);\r\nexport default Credentials;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setQueryAction,\r\n  getLogsAction\r\n} from 'Actions/Logs';\r\nimport {\r\n  anyCredentials\r\n} from 'Epics/credentialsUtils';\r\nimport './QueryBox.css';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    query: state.query,\r\n    connected: anyCredentials(state.credentials)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getLogs: () => dispatch(getLogsAction()),\r\n    setQuery: query => dispatch(setQueryAction(query))\r\n  };\r\n};\r\n\r\nclass QueryBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: props.query\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.state.query !== nextProps.query) {\r\n      this.setState({ query: nextProps.query });\r\n    }\r\n  }\r\n\r\n  setQuery = (event) => {\r\n    this.setState({ query: event.target.value });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.setQuery(this.state.query);\r\n    this.props.getLogs();\r\n  }\r\n\r\n  onEnterPress = (event) => {\r\n    if (event.keyCode === 13 && event.ctrlKey === true) {\r\n      this.handleSubmit(event);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"ail-footer\" onSubmit={this.handleSubmit}>\r\n        <textarea\r\n          className=\"ail-query\"\r\n          value={this.state.query}\r\n          placeholder=\"Write a query...\"\r\n          onKeyDown={this.onEnterPress}\r\n          onChange={this.setQuery} />\r\n        <button className=\"ail-search\" disabled={!this.state.query || !this.props.connected}>Search</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nQueryBox = connect(mapStateToProps, mapDispatchToProps)(QueryBox);\r\nexport default QueryBox;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './StatusBar.css';\r\nimport { inject } from 'Store/container';\r\nimport { anyCredentials } from 'Epics/credentialsUtils';\r\nconst dateUtils = inject('DateUtils');\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    autoRefresh: state.autoRefresh,\r\n    fetchTime: state.fetchTime,\r\n    appName: state.appName,\r\n    error: state.error,\r\n    loading: state.loading,\r\n    connected: anyCredentials(state.credentials)\r\n  };\r\n};\r\n\r\nlet StatusBar = (props) => (\r\n  <div className=\"ail-footer-status\">\r\n    {\r\n      props.connected ?\r\n        <div className=\"ail-footer-status-item ail-footer-status--timestamp\">\r\n          {\r\n            !props.loading ? (\r\n              <div>\r\n                updated at {dateUtils.formatDateTime(props.fetchTime)} {props.autoRefresh ? '(auto)' : ''}\r\n              </div>\r\n            ) : 'Loading...'\r\n          }\r\n        </div>\r\n        :\r\n        <div className=\"ail-footer-status-item ail-footer-status--error\">\r\n          You must setup an authentication and an application on the right panel to start\r\n        </div>\r\n    }\r\n    {props.error ?\r\n      <div className=\"ail-footer-status-item ail-footer-status--error\">\r\n        {props.error}\r\n      </div> : ''\r\n    }\r\n  </div>\r\n);\r\nStatusBar = connect(mapStateToProps)(StatusBar);\r\nexport default StatusBar;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './App.css';\r\nimport Header from './Components/Header';\r\nimport Log from './Components/Log';\r\nimport Credentials from './Components/Settings/Credentials';\r\nimport QueryBox from './Components/QueryBox';\r\nimport { loadProfileAction } from './Actions/Profile';\r\nimport StatusBar from './Components/StatusBar';\r\nimport AuthenticationType from 'Models/AuthenticationType';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    hasCredentials: state.credentials.authenticationType !== AuthenticationType.none,\r\n    appName: !state.appName && state.logs.length > 0 ? 'You must project appName property in the query' : state.appName,\r\n    loading: state.loading,\r\n    activeTheme: state.ui.theme\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loadProfile: () => dispatch(loadProfileAction())\r\n  };\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sidebar: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadProfile();\r\n  }\r\n\r\n  toggleSidebar() {\r\n    this.setState({ sidebar: !this.state.sidebar });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`ait ${this.props.activeTheme} ${this.state.sidebar ? 'ail--sidebar-open' : ''}`}>\r\n        <div className=\"ail-container\">\r\n          <Header\r\n            sidebar={this.state.sidebar}\r\n            loading={this.props.loading}\r\n            toggleSidebar={() => this.toggleSidebar()}\r\n            appName={this.props.appName} />\r\n          <div className=\"ail-body\">\r\n            {\r\n              !this.props.hasCredentials ?\r\n                <h1>Welcome! To start, first set your credentials on top menu.</h1> :\r\n                <Log />\r\n            }\r\n          </div>\r\n          <div>\r\n            <StatusBar />\r\n            <QueryBox />\r\n          </div>\r\n        </div>\r\n        <div className=\"ail-sidebar\">\r\n          <Credentials />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp = connect(mapStateToProps, mapDispatchToProps)(App);\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Store';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport { inject } from './Store/container';\r\n\r\nconst domUtils = inject('DomUtils');\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n\r\nregisterServiceWorker();\r\n\r\ndomUtils.listenViewHeightChanges();"],"sourceRoot":""}