{"version":3,"sources":["Actions/Logs/getLogsAction.js","Actions/Logs/refreshLogsAction.js","Actions/Logs/setAutoRefreshAction.js","Actions/Logs/setLogsAction.js","Actions/Logs/setQueryAction.js","Actions/Logs/setSearchPeriodAction.js","Actions/Profile/availableAppsLoadedAction.js","Actions/Profile/clearDataAction.js","Actions/Profile/loadProfileAction.js","Actions/Profile/profileLoadedAction.js","Actions/Profile/setCredentialsAction.js","Actions/Profile/tryFindCredentialsAction.js","Reducers/initialState.js","Actions/UI/changeThemeAction.js","Actions/errorAction.js","Reducers/combineActiveReducers.js","Reducers/index.js","Reducers/Profile/clearDataReducer.js","Reducers/Profile/profileLoadedReducer.js","Reducers/Profile/availableAppsReducer.js","Reducers/Profile/setCredentialsReducer.js","Reducers/Logs/setAutoRefreshReducer.js","Reducers/Logs/setQueryReducer.js","Reducers/Logs/setSearchPeriodReducer.js","Reducers/Logs/setLogsReducer.js","Reducers/Logs/getLogsReducer.js","Reducers/UI/changeThemeReducer.js","Reducers/errorReducer.js","Epics/Logs/utils.js","Epics/Logs/autoRefreshEpic.js","Epics/Profile/clearDataEpic.js","Epics/index.js","Epics/Logs/getLogsEpic.js","Actions/emptyAction.js","Epics/Profile/setCredentialsEpic.js","Epics/Profile/findCredentialsCandidateEpic.js","Epics/Profile/setQueryEpic.js","Epics/Profile/loadProfileEpic.js","Epics/UI/changeThemeEpic.js","Epics/UI/loadUISettingsEpic.js","Utils/QueryStringUtils.js","Services/StorageRepository.js","Services/ProfileRepository.js","Services/Mock/HttpMock.js","Services/HttpClient.js","Services/ApplicationInsightsClient.js","Services/httpClientFactory.js","Utils/DomUtils.js","Utils/ConsoleDoc.js","Store/index.js","Components/Header.js","Utils/DateUtils.js","Models/SeverityLevel.js","Components/LogLine.js","Components/Log.js","Components/Settings/UISettings.js","Components/Settings/Credentials.js","Components/QueryBox.js","Components/StatusBar.js","App.js","registerServiceWorker.js","index.js"],"names":["GET_LOGS","USER_SEARCH_GET_LOGS_SOURCE","AUTOREFRESH_GET_LOGS_SOURCE","SET_AUTOREFRESH","SET_LOGS","SET_QUERY","SET_SEARCH_PERIOD","AVAILABLE_APPS_LOADED","CLEAR_DATA","LOAD_PROFILE","PROFILE_LOADED","SET_CREDENTIALS","setCredentialsAction","credentials","type","payload","TRY_FIND_CREDENTIALS","initialState","logs","appId","apiKey","query","searchPeriod","autoRefresh","refreshInterval","appName","fetchTime","loading","error","availableApps","ui","theme","CHANGE_UI_THEME","UIThemes","name","className","changeThemeAction","ERROR","rootReducer","reducers","state","arguments","length","undefined","action","currentState","forEach","reducer","newState","combineActiveReducers","Object","objectSpread","loadedProps","enabled","skipLoading","source","anyCredentials","isAutoRefreshEnabled","$state","value","profileLoaded","rootEpic","combineEpics","action$","state$","_ref","applicationInsightsClient","DomUtils","pipe","ofType","filter","switchMap","forceScrollEnd","isScrollEnd","hasToScroll","getLogs","mergeMap","of","setLogsAction","catchError","err","reason","message","errorAction","tap","scrollBottom","q","timer","map","t","store","profileRepository","storeCredentials","getStoredAppNamesCredentials","availableAppsLoadedAction","findCredentialsCanditate","storeQuery","clearData","ConsoleDoc","printHelpOnConsole","getCredentials","getQuery","profileLoadedAction","setUITheme","getUITheme","queryStringUtils","window","location","search","test","slice","split","reduce","params","param","_param$split","_param$split2","slicedToArray","key","decodeURIComponent","replace","history","url","href","pushState","StorageRepository","classCallCheck","this","localStorage","sessionStorage","parseObject","content","getItem","JSON","parse","e","serializeObject","setItem","stringify","clear","ProfileRepository","storageRepository","queryParams","QueryStringUtils","getParams","removeParams","storedCredentials","getSessionData","getLocalData","saveSessionData","saveLocalData","storeAppCredentials","credentialsByApp","getAllCredentials","keys","clearSessionData","clearLocalData","HttpMock","BasicTraceMockQuery","concat","response","mock","status","SampleQuery","sampleMock","HttpClient","uri","headers","request","body","method","requestHeaders","Accept","Content-Type","queryString","encodeURIComponent","join","buildQuery","ajax","responseType","ApplicationInsightsClient","httpClient","timespan","_this","push","get","buildAppUri","buildHeaders","httpResponse","mapQueryResponse","console","mapError","throwError","innererror","x-api-key","_this2","tables","Error","colIndexPropertyMap","buildColumnIndexPropertyMap","rows","row","itemType","reponseMapper","getResponseMapper","model","propertyMapper","r","sort","a","b","timestamp","getAppName","Date","responseMapper","columnsIndexMap","columns","c","i","columnsIndexPropertyMap","appNameIndex","trace","severityLevel","exception","domUtils","selector","document","querySelector","scrollTo","scrollHeight","scrollTop","offsetHeight","calcViewHeight","viewHeight","Math","max","documentElement","clientHeight","innerHeight","style","height","addEventListener","consoleDoc","log","epicMiddleware","createEpicMiddleware","dependencies","createStore","applyMiddleware","run","Header","props","sidebar","toggleSidebar","titleIconClass","react_default","createElement","hidden","role","aria-labelledby","id","onClick","dateUtils","date","formatTwoDigit","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","formatDate","formatTime","number","SeverityLevel","0","1","2","3","4","LogLine","DateUtils","formatDateTime","Log","react","item","src_Components_LogLine","connect","UISettings","possibleConstructorReturn","getPrototypeOf","call","handleThemeChange","bind","assertThisInitialized","changeTheme","nextTheme","Component","themeIndex","findIndex","dispatch","Credentials","validCredentials","selectedStoredCredential","editing","handleChange","handleSubmit","nextProps","credentialsChanged","setState","event","defineProperty","target","setSearchPeriod","preventDefault","setCredentials","tryFindCredentials","confirm","setAutoRefresh","credentials1","credentials2","onSubmit","placeholder","disabled","onChange","renderAppsDropDown","_this3","checkStoredAppCredentials","_this4","checked","toggleAutoRefresh","htmlFor","_this5","handlePeriodChange","renderCredentialsForm","renderGlobalOptions","renderPeriod","Settings_UISettings","toConsumableArray","tryFindCredentialsAction","setAutoRefreshAction","setSearchPeriodAction","QueryBox","setQuery","onEnterPress","keyCode","ctrlKey","onKeyDown","setQueryAction","StatusBar","App","loadProfile","activeTheme","src_Components_Header","hasCredentials","Components_Log","src_Components_StatusBar","src_Components_QueryBox","Components_Settings_Credentials","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","render","es","src_App_0","getElementById","URL","process","origin","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","listenViewHeightChanges"],"mappings":"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","file":"static/js/main.3c495ab9.chunk.js","sourcesContent":["export const GET_LOGS = 'GET_LOGS';\r\nexport const USER_SEARCH_GET_LOGS_SOURCE = 'USER_SEARCH';\r\n\r\nexport function getLogsAction() {\r\n  return { type: GET_LOGS, payload: { source: USER_SEARCH_GET_LOGS_SOURCE } };\r\n}","import { GET_LOGS } from './getLogsAction';\r\nexport const AUTOREFRESH_GET_LOGS_SOURCE = 'AUTOREFRESH';\r\n\r\nexport function refreshLogsAction() {\r\n  return { type: GET_LOGS, payload: { source: AUTOREFRESH_GET_LOGS_SOURCE } };\r\n}","export const SET_AUTOREFRESH = 'SET_AUTOREFRESH';\r\nexport function setAutoRefreshAction(enabled) {\r\n  return { type: SET_AUTOREFRESH, payload: { enabled } };\r\n}","export const SET_LOGS = 'SET_LOGS';\r\nexport function setLogsAction(logs) {\r\n  return { type: SET_LOGS, payload: logs };\r\n}\r\n","export const SET_QUERY = 'SET_QUERY';\r\nexport function setQueryAction(query) {\r\n  return { type: SET_QUERY, payload: { query } };\r\n}","export const SET_SEARCH_PERIOD = 'SET_SEARCH_PERIOD';\r\nexport function setSearchPeriodAction(searchPeriod) {\r\n  return { type: SET_SEARCH_PERIOD, payload: { searchPeriod } };\r\n}","export const AVAILABLE_APPS_LOADED = 'AVAILABLE_APPS_LOADED';\r\nexport function availableAppsLoadedAction(availableApps) {\r\n  return {\r\n    type: AVAILABLE_APPS_LOADED,\r\n    payload: {\r\n      availableApps\r\n    }\r\n  };\r\n}","export const CLEAR_DATA = 'CLEAR_DATA';\r\nexport function clearDataAction() {\r\n  return { type: CLEAR_DATA, payload: null };\r\n}","export const LOAD_PROFILE = 'LOAD_PROFILE';\r\nexport function loadProfileAction() {\r\n  return { type: LOAD_PROFILE };\r\n}","export const PROFILE_LOADED = 'PROFILE_LOADED';\r\nexport function profileLoadedAction(credentials, query, availableApps) {\r\n  return {\r\n    type: PROFILE_LOADED,\r\n    payload: {\r\n      credentials,\r\n      query,\r\n      availableApps\r\n    }\r\n  };\r\n}","export const SET_CREDENTIALS = 'SET_CREDENTIALS';\r\nexport function setCredentialsAction(credentials) {\r\n  return { type: SET_CREDENTIALS, payload: { credentials } };\r\n}","export const TRY_FIND_CREDENTIALS = 'TRY_FIND_CREDENTIALS';\r\nexport function tryFindCredentialsAction(appName) {\r\n  return { type: TRY_FIND_CREDENTIALS, payload: { appName } };\r\n}","export const initialState = () => {\r\n  return {\r\n    logs: [],\r\n    credentials: {\r\n      appId: '',\r\n      apiKey: ''\r\n    },\r\n    query: 'traces | sort by timestamp desc | limit 50',\r\n    searchPeriod: '',\r\n    autoRefresh: true,\r\n    refreshInterval: null,\r\n    appName: null,\r\n    fetchTime: null,\r\n    loading: false,\r\n    error: null,\r\n    availableApps: [],\r\n    ui: {\r\n      theme: 'theme-default'\r\n    }\r\n  }\r\n};","export const CHANGE_UI_THEME = 'CHANGE_UI_THEME';\r\n\r\nexport const UIThemes = [\r\n  {\r\n    name: 'Dark (default)',\r\n    className: 'theme-default'\r\n  },\r\n  {\r\n    name: 'Light',\r\n    className: 'theme-light'\r\n  }\r\n];\r\n\r\nexport function changeThemeAction(theme) {\r\n  return { type: CHANGE_UI_THEME, payload: { theme: theme } };\r\n}","export const ERROR = 'ERROR';\r\nexport function errorAction(reason) {\r\n  return { type: ERROR, payload: reason };\r\n}","export const combineActiveReducers = (reducers, initialState) => {\r\n  return (state = initialState, action) => {\r\n    let currentState = state;\r\n    reducers.forEach(reducer => {\r\n      const newState = reducer(currentState, action);\r\n      if (newState) {\r\n        currentState = newState;\r\n      }\r\n    });\r\n    return currentState;\r\n  };\r\n};","import {\r\n  getLogsReducer,\r\n  setAutoRefreshReducer,\r\n  setLogsReducer,\r\n  setQueryReducer,\r\n  setSearchPeriodReducer\r\n} from './Logs';\r\nimport {\r\n  clearDataReducer,\r\n  profileLoadedReducer,\r\n  setCredentialsReducer,\r\n  availableAppsReducer\r\n} from './Profile';\r\nimport { changeThemeReducer } from './UI';\r\nimport { initialState } from './initialState';\r\nimport { errorReducer } from './errorReducer';\r\nimport { combineActiveReducers } from './combineActiveReducers';\r\n\r\nexport const rootReducer = combineActiveReducers([\r\n  clearDataReducer,\r\n  profileLoadedReducer,\r\n  availableAppsReducer,\r\n  setCredentialsReducer,\r\n  setAutoRefreshReducer,\r\n  setQueryReducer,\r\n  setSearchPeriodReducer,\r\n  setLogsReducer,\r\n  getLogsReducer,\r\n  changeThemeReducer,\r\n  errorReducer\r\n], initialState());","import { initialState } from 'Reducers/initialState';\r\nimport { CLEAR_DATA } from 'Actions/Profile';\r\n\r\nexport function clearDataReducer(state, action) {\r\n  if (action.type !== CLEAR_DATA) return;\r\n  return { ...initialState() };\r\n}\r\n","import { PROFILE_LOADED } from 'Actions/Profile';\r\n\r\nexport function profileLoadedReducer(state, action) {\r\n  if (action.type !== PROFILE_LOADED) return;\r\n  const loadedProps = {};\r\n  if (action.payload.credentials) {\r\n    loadedProps.credentials = action.payload.credentials;\r\n  }\r\n  if (action.payload.query) {\r\n    loadedProps.query = action.payload.query;\r\n  }\r\n  return { ...state, ...loadedProps };\r\n}","import { PROFILE_LOADED, AVAILABLE_APPS_LOADED } from 'Actions/Profile';\r\n\r\nexport function availableAppsReducer(state, action) {\r\n  if (action.type !== PROFILE_LOADED && action.type !== AVAILABLE_APPS_LOADED) return;\r\n  const loadedProps = {};\r\n  if (action.payload.availableApps) {\r\n    loadedProps.availableApps = action.payload.availableApps;\r\n  }\r\n  return { ...state, ...loadedProps };\r\n}","import { SET_CREDENTIALS } from 'Actions/Profile';\r\n\r\nexport function setCredentialsReducer(state, action) {\r\n  if (action.type !== SET_CREDENTIALS) return;\r\n  return { ...state, credentials: action.payload.credentials };\r\n}","import { SET_AUTOREFRESH } from 'Actions/Logs';\r\n\r\nexport function setAutoRefreshReducer(state, action) {\r\n  if (action.type !== SET_AUTOREFRESH) return;\r\n  return { ...state, autoRefresh: action.payload.enabled };\r\n}","import { SET_QUERY } from 'Actions/Logs';\r\n\r\nexport function setQueryReducer(state, action) {\r\n  if (action.type !== SET_QUERY) return;\r\n  return { ...state, query: action.payload.query };\r\n}\r\n","import { SET_SEARCH_PERIOD } from 'Actions/Logs';\r\n\r\nexport function setSearchPeriodReducer(state, action) {\r\n  if (action.type !== SET_SEARCH_PERIOD) return;\r\n  return { ...state, searchPeriod: action.payload.searchPeriod };\r\n}\r\n","import { SET_LOGS } from 'Actions/Logs';\r\n\r\nexport function setLogsReducer(state, action) {\r\n  if (action.type !== SET_LOGS) return;\r\n  return {\r\n    ...state,\r\n    logs: action.payload.logs,\r\n    appName: action.payload.appName,\r\n    fetchTime: action.payload.fetchTime,\r\n    loading: false,\r\n    error: null\r\n  };\r\n}","import { GET_LOGS, AUTOREFRESH_GET_LOGS_SOURCE } from 'Actions/Logs';\r\n\r\nexport function getLogsReducer(state, action) {\r\n  if (action.type !== GET_LOGS) return;\r\n  const skipLoading = action.payload.source === AUTOREFRESH_GET_LOGS_SOURCE && state.error;\r\n  return { ...state, loading: skipLoading ? false : true };\r\n}\r\n","import { CHANGE_UI_THEME } from 'Actions/UI';\r\n\r\nexport function changeThemeReducer(state, action) {\r\n    if (action.type !== CHANGE_UI_THEME) return;\r\n\r\n    const ui = { ...state.ui, ...{ theme: action.payload.theme } };\r\n    return { ...state, ...{ ui: { ...ui } } };\r\n}","import { ERROR } from 'Actions';\r\n\r\nexport function errorReducer(state, action) {\r\n  if (action.type !== ERROR) return;\r\n  return { ...state, error: action.payload, loading: false };\r\n}","export function anyCredentials(credentials) {\r\n  return credentials && credentials.appId && credentials.apiKey;\r\n}","import { timer } from 'rxjs';\r\nimport { filter, switchMap, map } from 'rxjs/operators';\r\nimport { anyCredentials } from './utils';\r\nimport { refreshLogsAction, SET_AUTOREFRESH, SET_LOGS } from 'Actions/Logs';\r\nimport { emptyAction } from 'Actions';\r\nimport { PROFILE_LOADED } from 'Actions/Profile';\r\nconst refreshTimeThreshold = 30000;\r\n\r\nexport const autoRefreshEpic = (action$, $state) =>\r\n  action$\r\n    .pipe(\r\n      filter(q =>\r\n        (q.type === SET_AUTOREFRESH && q.payload.enabled) ||\r\n        // set auto refresh on startup and after setting logs, queue next refresh\r\n        (isAutoRefreshEnabled($state) && ((q.type === SET_LOGS) || profileLoaded(q)))\r\n      ),\r\n      switchMap(q => {\r\n        return timer(refreshTimeThreshold)\r\n          .pipe(\r\n            map(t => isAutoRefreshEnabled($state) ? refreshLogsAction() : emptyAction())\r\n          );\r\n      })\r\n    );\r\n\r\nconst isAutoRefreshEnabled = ($state) => $state.value.autoRefresh && !$state.value.loading;\r\nconst profileLoaded = (action) => action.type === PROFILE_LOADED && anyCredentials(action.payload.credentials);","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { CLEAR_DATA } from 'Actions/Profile';\r\nimport { emptyAction } from 'Actions';\r\n\r\nexport const clearDataEpic = (action$, store, { profileRepository }) =>\r\n  action$\r\n    .pipe(\r\n      ofType(CLEAR_DATA),\r\n      switchMap(q => {\r\n        profileRepository.clearData();\r\n        return of(emptyAction());\r\n      })\r\n    );\r\n","import { combineEpics } from 'redux-observable';\r\nimport { \r\n    getLogsEpic, \r\n    autoRefreshEpic \r\n} from './Logs';\r\n\r\nimport {\r\n    setCredentialsEpic,\r\n    findCredentialsCandidateEpic,\r\n    setQueryEpic,\r\n    clearDataEpic,\r\n    loadProfileEpic\r\n} from './Profile';\r\n\r\nimport {\r\n    changeThemeEpic,\r\n    loadUISettingsEpic\r\n} from './UI'\r\n\r\nexport const rootEpic = combineEpics(\r\n    getLogsEpic,\r\n    autoRefreshEpic,\r\n    \r\n    setCredentialsEpic,\r\n    findCredentialsCandidateEpic,\r\n    setQueryEpic,\r\n    clearDataEpic,\r\n    loadProfileEpic,\r\n\r\n    changeThemeEpic,\r\n    loadUISettingsEpic\r\n);","import { of } from 'rxjs';\r\nimport { filter, switchMap, mergeMap, catchError, tap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { anyCredentials } from './utils';\r\nimport { errorAction } from 'Actions';\r\nimport {\r\n  setCredentialsAction,\r\n  PROFILE_LOADED\r\n} from 'Actions/Profile';\r\nimport {\r\n  setLogsAction,\r\n  GET_LOGS,\r\n  AUTOREFRESH_GET_LOGS_SOURCE\r\n} from 'Actions/Logs';\r\n\r\nexport const getLogsEpic = (action$, state$, { applicationInsightsClient, DomUtils }) =>\r\n  action$\r\n    .pipe(\r\n      ofType(GET_LOGS, PROFILE_LOADED),\r\n      filter(action => {\r\n        const state = state$.value;\r\n        return anyCredentials(state.credentials) &&\r\n          !(action.payload.source === AUTOREFRESH_GET_LOGS_SOURCE && state.error);\r\n      }),\r\n      switchMap(action => {\r\n        // force scroll search is done by user or it is already at the end of scroll\r\n        const forceScrollEnd = hasToScroll(action, DomUtils);\r\n\r\n        const state = state$.value;\r\n        return applicationInsightsClient.getLogs(state.credentials, state.query, state.searchPeriod)\r\n          .pipe(\r\n            mergeMap(logs => of(\r\n              setLogsAction(logs),\r\n              setCredentialsAction({ ...state$.value.credentials, appName: logs.appName }))\r\n            ),\r\n            catchError(err => {\r\n              let reason = typeof (err) === 'string' ? err : err.message\r\n              return of(errorAction(reason || 'Error when getting logs'));\r\n            }),\r\n            tap(() => {\r\n              if (forceScrollEnd) {\r\n                DomUtils.scrollBottom('.ail-body');\r\n              }\r\n            })\r\n          );\r\n      })\r\n    )\r\n  ;\r\n\r\nfunction hasToScroll(action, DomUtils) {\r\n  return action.payload.source !== AUTOREFRESH_GET_LOGS_SOURCE ||\r\n    DomUtils.isScrollEnd('.ail-body');\r\n}\r\n","export function emptyAction() {\r\n  return { type: 'never' };\r\n}","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { SET_CREDENTIALS, availableAppsLoadedAction } from 'Actions/Profile';\r\n\r\nexport const setCredentialsEpic = (action$, store, { profileRepository }) =>\r\n  action$\r\n    .pipe(\r\n      ofType(SET_CREDENTIALS),\r\n      switchMap(q => {\r\n        profileRepository.storeCredentials(q.payload.credentials);\r\n        const availableApps = profileRepository.getStoredAppNamesCredentials();\r\n        return of(availableAppsLoadedAction(availableApps));\r\n      })\r\n    );\r\n","import { of } from 'rxjs';\r\nimport { switchMap, filter, map } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { emptyAction } from 'Actions';\r\nimport { TRY_FIND_CREDENTIALS, setCredentialsAction } from 'Actions/Profile';\r\n\r\nexport const findCredentialsCandidateEpic = (action$, store, { profileRepository }) =>\r\n  action$\r\n    .pipe(\r\n      ofType(TRY_FIND_CREDENTIALS),\r\n      switchMap(q => {\r\n        return of(profileRepository.findCredentialsCanditate(q.payload.appName))\r\n          .pipe(\r\n            filter(credentials => credentials !== null),\r\n            map(credentials => {\r\n              return credentials ? setCredentialsAction(credentials) : emptyAction();\r\n            })\r\n          )\r\n      })\r\n    );\r\n\r\n","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { SET_QUERY } from 'Actions/Logs';\r\nimport { emptyAction } from 'Actions';\r\n\r\nexport const setQueryEpic = (action$, store, { profileRepository }) =>\r\n  action$\r\n    .pipe(\r\n      ofType(SET_QUERY),\r\n      switchMap(q => {\r\n        profileRepository.storeQuery(q.payload.query);\r\n        return of(emptyAction());\r\n      })\r\n    );","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { profileLoadedAction, LOAD_PROFILE } from 'Actions/Profile';\r\n\r\nexport const loadProfileEpic = (action$, store, { profileRepository, ConsoleDoc }) =>\r\n  action$.pipe(\r\n    ofType(LOAD_PROFILE),\r\n    switchMap(q => {\r\n      ConsoleDoc.printHelpOnConsole();\r\n      const credentials = profileRepository.getCredentials();\r\n      const availableApps = profileRepository.getStoredAppNamesCredentials();\r\n      const query = profileRepository.getQuery();\r\n      return of(profileLoadedAction(credentials, query, availableApps));\r\n    })\r\n  );","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { emptyAction } from 'Actions';\r\nimport { CHANGE_UI_THEME } from 'Actions/UI';\r\n\r\nexport const changeThemeEpic = (action$, $state, { profileRepository }) =>\r\n  action$\r\n    .pipe(\r\n      ofType(CHANGE_UI_THEME),\r\n      switchMap(q => {\r\n        profileRepository.setUITheme(q.payload.theme);\r\n        return of(emptyAction());\r\n      })\r\n    );\r\n\r\n","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { emptyAction} from 'Actions';\r\nimport { LOAD_PROFILE } from 'Actions/Profile';\r\nimport { changeThemeAction} from 'Actions/UI';\r\n\r\nexport const loadUISettingsEpic = (action$, store, { profileRepository, ConsoleDoc }) =>\r\n  action$.pipe(\r\n    ofType(LOAD_PROFILE),\r\n    switchMap(q => {\r\n      const theme = profileRepository.getUITheme();\r\n      if (theme) {\r\n          return of(changeThemeAction(theme));\r\n      }\r\n      return of(emptyAction());\r\n    })\r\n  );","class QueryStringUtils {\r\n  getParams() {\r\n    if (!window.location) {\r\n      return {};\r\n    }\r\n\r\n    const query = window.location.search;\r\n    if (!query) {\r\n      return {};\r\n    }\r\n\r\n    return (/^[?#]/.test(query) ? query.slice(1) : query)\r\n      .split('&')\r\n      .reduce((params, param) => {\r\n        let [key, value] = param.split('=');\r\n        params[key] = value ? decodeURIComponent(value.replace(/\\+/g, ' ')) : '';\r\n        return params;\r\n      }, {});\r\n  }\r\n\r\n  removeParams() {\r\n    if (!window.history) {\r\n      return;\r\n    }\r\n    const url = window.location.href.split('?');\r\n    window.history.pushState({}, '', url[0]);\r\n  }\r\n}\r\nconst queryStringUtils = new QueryStringUtils();\r\nexport default queryStringUtils;","export default class StorageRepository {\r\n  constructor() {\r\n    const isTest = process.env.NODE_ENV === 'test';\r\n\r\n    this.localStorage = isTest ?\r\n      new MockStorage(mockLocalStorage) :\r\n      window.localStorage;\r\n\r\n    this.sessionStorage = isTest ?\r\n      new MockStorage(mockSessionStorage) :\r\n      window.sessionStorage;\r\n  }\r\n\r\n  getSessionData(key, parseObject) {\r\n    if (parseObject) {\r\n      const content = this.sessionStorage.getItem(key);\r\n      try {\r\n        return content ? JSON.parse(content) : null;\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    }\r\n    return this.sessionStorage.getItem(key);\r\n  }\r\n\r\n  saveSessionData(key, value, serializeObject) {\r\n    this.sessionStorage.setItem(key, serializeObject ? JSON.stringify(value) : value);\r\n  }\r\n\r\n  clearSessionData() {\r\n    this.sessionStorage.clear();\r\n  }\r\n\r\n  getLocalData(key, parseObject) {\r\n    if (parseObject) {\r\n      const content = this.localStorage.getItem(key);\r\n      try {\r\n        return content ? JSON.parse(content) : null;\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    }\r\n    return this.localStorage.getItem(key);\r\n  }\r\n\r\n  saveLocalData(key, value, serializeObject) {\r\n    this.localStorage.setItem(key, serializeObject ? JSON.stringify(value) : value);\r\n  }\r\n\r\n  clearLocalData() {\r\n    this.localStorage.clear();\r\n  }\r\n}\r\n\r\nconst mockLocalStorage = {};\r\nconst mockSessionStorage = {};\r\n\r\nclass MockStorage {\r\n  constructor(data) {\r\n    this.data = data;\r\n  }\r\n\r\n  getItem(key) {\r\n    return this.data[key];\r\n  }\r\n\r\n  setItem(key, value) {\r\n    this.data[key] = value;\r\n  }\r\n\r\n  removeItem(key) {\r\n    delete this.data[key];\r\n  }\r\n\r\n  clear() {\r\n    Object.keys(this.data).forEach(key => {\r\n      this.removeItem(key);\r\n    });\r\n  }\r\n}","import QueryStringUtils from 'Utils/QueryStringUtils';\r\nimport StorageRepository from './StorageRepository';\r\n\r\nexport default class ProfileRepository {\r\n  constructor() {\r\n    this.storageRepository = new StorageRepository();\r\n  }\r\n\r\n  getCredentials() {\r\n    const queryParams = QueryStringUtils.getParams();\r\n    if (queryParams['app_id'] && queryParams['api_key']) {\r\n      QueryStringUtils.removeParams();\r\n      return {\r\n        appId: queryParams['app_id'],\r\n        apiKey: queryParams['api_key'],\r\n      };\r\n    }\r\n\r\n    const storedCredentials = this.storageRepository.getSessionData('credentials', true);\r\n    if (storedCredentials) {\r\n      return storedCredentials;\r\n    } else {\r\n      const lastUsedCredentials = this.storageRepository.getLocalData('lruCredentials', true);\r\n      return lastUsedCredentials;\r\n    }\r\n  }\r\n\r\n  storeCredentials(credentials) {\r\n    this.storageRepository.saveSessionData('credentials', credentials, true);\r\n    this.storageRepository.saveLocalData('lruCredentials', credentials, true);\r\n    if (credentials.appName) {\r\n      this.storeAppCredentials(credentials, credentials.appName);\r\n    }\r\n  }\r\n\r\n  getQuery() {\r\n    return this.storageRepository.getSessionData('query');\r\n  }\r\n\r\n  storeQuery(query) {\r\n    this.storageRepository.saveSessionData('query', query);\r\n  }\r\n\r\n  storeAppCredentials(credentials, appName) {\r\n    if (!appName || !credentials.appId || !credentials.apiKey ||\r\n      credentials.appId === appName) {\r\n      return;\r\n    }\r\n\r\n    const credentialsByApp = this.getAllCredentials() || {};\r\n    credentialsByApp[appName] = credentials;\r\n    this.storageRepository.saveLocalData('credentialsByApp', credentialsByApp, true);\r\n  }\r\n\r\n  getAllCredentials() {\r\n    return this.storageRepository.getLocalData('credentialsByApp', true);\r\n  }\r\n\r\n  getStoredAppNamesCredentials() {\r\n    const credentialsByApp = this.getAllCredentials();\r\n    if (!credentialsByApp) {\r\n      return [];\r\n    }\r\n    const apps = Object.keys(credentialsByApp);\r\n    return apps;\r\n  }\r\n\r\n  findCredentialsCanditate(appName) {\r\n    const credentialsByApp = this.getAllCredentials();\r\n    if (!credentialsByApp) {\r\n      return null;\r\n    }\r\n    return credentialsByApp[appName];\r\n  }\r\n\r\n  getUITheme() {\r\n    return this.storageRepository.getLocalData('ui-theme');\r\n  }\r\n\r\n  setUITheme(theme) {\r\n    this.storageRepository.saveLocalData('ui-theme', theme);\r\n  }\r\n\r\n  clearData() {\r\n    this.storageRepository.clearSessionData();\r\n    this.storageRepository.clearLocalData();\r\n  }\r\n}","import mock from './BasicTraceMock.json';\r\nimport sampleMock from './SampleMock.json';\r\n\r\nconst HttpMock = { };\r\n\r\nconst BasicTraceMockQuery = 'https://api.applicationinsights.io/v1/apps/BasicTraceMock/query?query=';\r\nHttpMock[`${BasicTraceMockQuery}traces%20%7C%20sort%20by%20timestamp%20desc%20%7C%20limit%2050`] = {\r\n  response: mock,\r\n  status: 200\r\n};\r\n\r\nHttpMock[`${BasicTraceMockQuery}traces`] = {\r\n  response: mock,\r\n  status: 200\r\n};\r\n\r\nconst SampleQuery = 'https://api.applicationinsights.io/v1/apps/Sample/query?query=';\r\nHttpMock[`${SampleQuery}traces%20%7C%20sort%20by%20timestamp%20desc%20%7C%20limit%2050`] = {\r\n  response: sampleMock,\r\n  status: 200\r\n};\r\n\r\nHttpMock[`${SampleQuery}traces`] = {\r\n  response: sampleMock,\r\n    status: 200\r\n};\r\n\r\n\r\nexport default HttpMock;","import { ajax } from 'rxjs/ajax';\r\n\r\nexport default class HttpClient {\r\n  get(uri, headers, query) {\r\n    return this.request('GET', uri, headers, query);\r\n  }\r\n\r\n  post(uri, body, headers, query) {\r\n    return this.request('POST', uri, headers, query, body);\r\n  }\r\n\r\n  put(uri, body, headers, query) {\r\n    return this.request('PUT', uri, headers, query, body);\r\n  }\r\n\r\n  delete(uri, headers, query) {\r\n    return this.request('DELETE', uri, headers, query);\r\n  }\r\n\r\n  request(method, uri, headers, query, body) {\r\n    let requestHeaders = {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    };\r\n\r\n    if (headers) {\r\n      requestHeaders = { ...requestHeaders, ...headers };\r\n    }\r\n\r\n    const queryString = buildQuery(query);\r\n    return ajax({\r\n      url: queryString ? `${uri}?${queryString}` : uri,\r\n      method: method,\r\n      headers: requestHeaders,\r\n      responseType: 'json',\r\n      body: body\r\n    });\r\n  }\r\n}\r\n\r\nfunction buildQuery(query) {\r\n  if (!query || !query.length) return null;\r\n\r\n  return query.map(q => `${q.name}=${encodeURIComponent(q.value)}`).join('&');\r\n}","import httpClientFactory from './httpClientFactory';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\n\r\nexport default class ApplicationInsightsClient {\r\n  constructor() {\r\n    this.httpClient = httpClientFactory();\r\n  }\r\n\r\n  getLogs(credentials, query, timespan) {\r\n    const queryParams = [{ name: 'query', value: query }];\r\n    if (timespan) {\r\n      queryParams.push({ name: 'timespan', value: timespan });\r\n    }\r\n\r\n    return this.httpClient.get(\r\n        `${this.buildAppUri(credentials)}/query`,\r\n        this.buildHeaders(credentials),\r\n        queryParams\r\n      )\r\n      .pipe(\r\n        map(httpResponse => this.mapQueryResponse(httpResponse.response)),\r\n        catchError(error => {\r\n          console.error(error.response);\r\n          if (error.response && error.response.error) {\r\n            const reason = this.mapError('', error.response.error);\r\n            return throwError(reason);\r\n          } else if (typeof (error.response) === 'string') {\r\n            return throwError(`${error.status}: ${error.response}`);\r\n          }\r\n          return throwError(error);\r\n        })\r\n      );\r\n  }\r\n\r\n  mapError(message, error) {\r\n    if (!error || !error.message) {\r\n      return `${message}`;\r\n    }\r\n    return this.mapError(`${message}${error.message}. `, error.innererror);\r\n  }\r\n\r\n  buildAppUri(credentials) {\r\n    return `https://api.applicationinsights.io/v1/apps/${credentials.appId}`;\r\n  }\r\n\r\n  buildHeaders(credentials) {\r\n    return {\r\n      'x-api-key': credentials.apiKey\r\n    };\r\n  }\r\n\r\n  mapQueryResponse(response) {\r\n    if (!response || !response.tables) {\r\n      throw new Error('Unexpected response content from query');\r\n    }\r\n\r\n    const colIndexPropertyMap = this.buildColumnIndexPropertyMap(response);\r\n    const rows = response.tables[0].rows.map(row => {\r\n        const itemType = row[colIndexPropertyMap['itemType']];\r\n        const reponseMapper = this.getResponseMapper(itemType);\r\n        if (!reponseMapper) {\r\n          // when item type is not supported, skip\r\n          return null;\r\n        }\r\n\r\n        var model = {};\r\n        reponseMapper.forEach(propertyMapper => propertyMapper(row, colIndexPropertyMap, model));\r\n        return model;\r\n      })\r\n      .filter(r => r !== null)\r\n      .sort((a, b) => {\r\n        if (a.timestamp === b.timestamp) {\r\n          return 0;\r\n        } else if (a.timestamp > b.timestamp) {\r\n          return 1;\r\n        } else {\r\n          return -1;\r\n        }\r\n      });\r\n\r\n    return {\r\n      logs: rows,\r\n      appName: this.getAppName(response, colIndexPropertyMap),\r\n      fetchTime: new Date()\r\n    };\r\n  }\r\n\r\n  getResponseMapper(itemType) {\r\n    return responseMapper[itemType];\r\n  }\r\n\r\n  /**\r\n   * return a dictionary of property name and column index\r\n   * {[columnName: string]: columnIndex: number} response\r\n   */\r\n  buildColumnIndexPropertyMap(response) {\r\n    const columnsIndexMap = {};\r\n    response.tables[0].columns.forEach((c, i) => columnsIndexMap[c.name] = i);\r\n    return columnsIndexMap;\r\n  }\r\n\r\n  getAppName(response, columnsIndexPropertyMap) {\r\n    if (response.tables[0].rows.length < 1) {\r\n      return null;\r\n    }\r\n    const appNameIndex = columnsIndexPropertyMap['appName'];\r\n    return response.tables[0].rows[0][appNameIndex]\r\n  }\r\n}\r\n\r\nconst responseMapper = {\r\n  trace: [\r\n    (row, columnsIndexMap, model) => {\r\n      model.timestamp = new Date(row[columnsIndexMap['timestamp']]);\r\n    },\r\n    (row, columnsIndexMap, model) => {\r\n      model.message = row[columnsIndexMap['message']];\r\n    },\r\n    (row, columnsIndexMap, model) => {\r\n      model.severityLevel = row[columnsIndexMap['severityLevel']];\r\n    }\r\n  ],\r\n  exception: [\r\n    (row, columnsIndexMap, model) => {\r\n      model.timestamp = new Date(row[columnsIndexMap['timestamp']]);\r\n    },\r\n    (row, columnsIndexMap, model) => {\r\n      model.message = `${row[columnsIndexMap['problemId']]}: ${row[columnsIndexMap['outerMessage']]}`;\r\n      if (row[columnsIndexMap['outerMessage']] !== row[columnsIndexMap['innermostMessage']]) {\r\n        model.message += `\\r\\n${row[columnsIndexMap['innermostType']]}: ${row[columnsIndexMap['innermostMessage']]}.`;\r\n      }\r\n    },\r\n    (row, columnsIndexMap, model) => {\r\n      model.severityLevel = row[columnsIndexMap['severityLevel']];\r\n    }\r\n  ]\r\n};","import MockHttpClient from './Mock/MockHttpClient';\r\nimport HttpClient from './HttpClient';\r\n\r\nexport default function httpClientFactory() {\r\n  if (process.env.NODE_ENV === 'test' || process.env.REACT_APP_MODE === 'demo') {\r\n    return new MockHttpClient();\r\n  } else {\r\n    return new HttpClient();\r\n  }\r\n}","class DomUtils {\r\n  scrollBottom(selector) {\r\n    document.querySelector(selector).scrollTo(0, document.querySelector(selector).scrollHeight);\r\n  }\r\n\r\n  isScrollEnd(selector) {\r\n    const scrollPosition =\r\n      document.querySelector(selector).scrollTop +\r\n      document.querySelector(selector).offsetHeight;\r\n    return scrollPosition === document.querySelector(selector).scrollHeight;\r\n  }\r\n\r\n  listenViewHeightChanges() {\r\n    function calcViewHeight() {\r\n      const viewHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n      document.body.style.height = `${viewHeight}px`;\r\n    }\r\n\r\n    calcViewHeight();\r\n    window.addEventListener('onorientationchange', calcViewHeight, true);\r\n    window.addEventListener('resize', calcViewHeight, true);\r\n  }\r\n}\r\nconst domUtils = new DomUtils();\r\nexport default domUtils;","class ConsoleDoc {\r\n  printHelpOnConsole() {\r\n    if (process.env.NODE_ENV === 'test') {\r\n      return;\r\n    }\r\n\r\n    console.log(\r\n`Hello! Here are some tips you must think useful:\r\nQuery documentation (https://docs.loganalytics.io/docs/Language-Reference/):\r\nSeverity levels:\r\n0: 'verbose',\r\n1: 'information',\r\n2: 'warning',\r\n3: 'error',\r\n4: 'critical'\r\n\r\nQuery samples:\r\ntraces | where severityLevel > 2 | sort by timestamp desc | limit 200\r\ntraces | where message has 'Error' | sort by timestamp desc | limit 200\r\nexceptions | sort by timestamp desc | limit 200\r\nunion exceptions, traces | sort by timestamp desc | limit 200\r\ntraces | where timestamp > todatetime(\"2018-04-26 10:20:00Z\") | sort by timestamp desc | limit 100\r\ntraces | where timestamp > ago(1h)\r\n\r\nShare a url: ${window.location.href.split('?')[0]}?app_id={your_app_id}&api_key={your_api_key}`);\r\n  }\r\n}\r\nconst consoleDoc = new ConsoleDoc();\r\nexport default consoleDoc;","import { createStore, applyMiddleware } from 'redux';\r\nimport { createEpicMiddleware } from 'redux-observable';\r\nimport { rootReducer } from 'Reducers';\r\nimport { rootEpic } from 'Epics';\r\n\r\nimport ProfileRepository from 'Services/ProfileRepository';\r\nimport ApplicationInsightsClient from 'Services/ApplicationInsightsClient';\r\nimport DomUtils from 'Utils/DomUtils';\r\nimport ConsoleDoc from 'Utils/ConsoleDoc';\r\n\r\nconst epicMiddleware = createEpicMiddleware({\r\n  dependencies: {\r\n    applicationInsightsClient: new ApplicationInsightsClient(),\r\n    profileRepository: new ProfileRepository(),\r\n    DomUtils: DomUtils,\r\n    ConsoleDoc: ConsoleDoc\r\n  }\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  applyMiddleware(epicMiddleware)\r\n);\r\n\r\nepicMiddleware.run(rootEpic);\r\n\r\nexport default store;","import './Header.css';\r\nimport React from 'react';\r\n\r\nconst Header = (props) => {\r\n  const { sidebar, toggleSidebar, appName, loading } = props;\r\n  const titleIconClass = `ail-header-title_icon ${(loading ? 'ail-header-title_icon--loading' : '')}`;\r\n  return (\r\n    <header className=\"ail-header\">\r\n      <div className=\"ail-header-app_name\" hidden={!appName}>{appName}</div>\r\n      <strong className=\"ail-header-title\">\r\n        <span className={titleIconClass} role=\"img\" aria-labelledby=\"ail-header-title\">💡 </span>\r\n        <span id=\"ail-header-title\">Application Insights Log</span>\r\n      </strong>\r\n      <div className=\"ail-credentials-menu\">\r\n        <div className={`ail-icon-menu ${sidebar ? 'open' : ''}`}\r\n          onClick={() => toggleSidebar()}>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","class DateUtils {\r\n  formatDate(date) {\r\n    return `${this.formatTwoDigit(date.getFullYear())}-${this.formatTwoDigit(date.getMonth() + 1)}-${this.formatTwoDigit(date.getDate())}`;\r\n  }\r\n\r\n  formatTime(date) {\r\n    return `${this.formatTwoDigit(date.getHours())}:${this.formatTwoDigit(date.getMinutes())}:${this.formatTwoDigit(date.getSeconds())}`;\r\n  }\r\n\r\n  formatDateTime(date) {\r\n    if (!date) {\r\n      return '-';\r\n    }\r\n    return this.formatDate(date) + ' ' + this.formatTime(date);\r\n  }\r\n\r\n  formatTwoDigit(number) {\r\n    if (number < 10) {\r\n      return `0${number}`;\r\n    }\r\n    return number;\r\n  }\r\n}\r\nconst dateUtils = new DateUtils();\r\nexport default dateUtils;","const SeverityLevel = {\r\n  0: 'verbose',\r\n  1: 'information',\r\n  2: 'warning',\r\n  3: 'error',\r\n  4: 'critical'\r\n};\r\n\r\nexport default SeverityLevel;\r\n","import React from 'react';\r\nimport DateUtils from 'Utils/DateUtils'\r\nimport SeverityLevel from 'Models/SeverityLevel'\r\nimport './LogLine.css';\r\n\r\nconst LogLine = (props) => {\r\n  const { log } = props;\r\n  return (\r\n    <div className={`ail-log_line ail-log_line--${SeverityLevel[log.severityLevel]}`}>\r\n      <span className=\"ail-log_line-time\">[{DateUtils.formatDateTime(log.timestamp)}]</span>\r\n      <span className=\"ail-log_line-message\">{log.message}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogLine;","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DateUtils from 'Utils/DateUtils';\r\nimport LogLine from './LogLine';\r\n\r\nconst mapStateToProps = state => {\r\n  return { logs: state.logs, fetchTime: state.fetchTime, appName: state.appName };\r\n};\r\n\r\nlet Log = ({ logs, fetchTime, appName }) => (\r\n  <Fragment>\r\n    <h1>\r\n      {appName || 'No results'}\r\n    </h1>\r\n    <div className=\"ail-log\">\r\n      {logs.map((item, i) =>\r\n        <LogLine log={item} key={DateUtils.formatDate(fetchTime) + i} />\r\n      )}\r\n    </div>\r\n  </Fragment>\r\n);\r\nLog = connect(mapStateToProps)(Log);\r\nexport default Log;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  changeThemeAction,\r\n  UIThemes\r\n} from 'Actions/UI';\r\n\r\nconst mapStateToProps = state => {\r\n  let themeIndex = UIThemes.findIndex(t => t.className === state.ui.theme);\r\n  themeIndex = (themeIndex < UIThemes.length - 1) ? themeIndex + 1 : 0;\r\n  return {\r\n    nextTheme: UIThemes[themeIndex],\r\n    theme: state.ui.theme\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeTheme: theme => dispatch(changeThemeAction(theme))\r\n  };\r\n};\r\n\r\nclass UISettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.handleThemeChange = this.handleThemeChange.bind(this);\r\n  }\r\n\r\n  handleThemeChange(value) {\r\n    this.props.changeTheme(value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ail-credentials-section\">\r\n        <label>UI Theme</label>\r\n        <div className=\"ail-btn ail-btn--default\" onClick={() => this.handleThemeChange(this.props.nextTheme.className)}>\r\n          Toggle {this.props.nextTheme.name} theme\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nUISettings = connect(mapStateToProps, mapDispatchToProps)(UISettings);\r\nexport default UISettings;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setCredentialsAction,\r\n  clearDataAction,\r\n  tryFindCredentialsAction\r\n} from 'Actions/Profile';\r\nimport { setAutoRefreshAction, setSearchPeriodAction } from 'Actions/Logs';\r\nimport './Credentials.css';\r\nimport UISettings from './UISettings';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    autoRefresh: state.autoRefresh,\r\n    searchPeriod: state.searchPeriod,\r\n    availableApps: [...state.availableApps],\r\n    credentials: {\r\n      appId: state.credentials.appId,\r\n      apiKey: state.credentials.apiKey\r\n    }\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setCredentials: credentials => dispatch(setCredentialsAction(credentials)),\r\n    clearData: () => dispatch(clearDataAction()),\r\n    tryFindCredentials: appName => dispatch(tryFindCredentialsAction(appName)),\r\n    setAutoRefresh: enabled => dispatch(setAutoRefreshAction(enabled)),\r\n    setSearchPeriod: searchPeriod => dispatch(setSearchPeriodAction(searchPeriod)),\r\n  };\r\n};\r\n\r\nclass Credentials extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      credentials: {\r\n        appId: props.credentials.appId,\r\n        apiKey: props.credentials.apiKey\r\n      },\r\n      availableApps: props.availableApps,\r\n      selectedStoredCredential: '',\r\n      editing: props.credentials.appId === null\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.clearData = this.clearData.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (!this.state.editing && this.credentialsChanged(nextProps.credentials, this.state.credentials)) {\r\n      this.setState({\r\n        credentials: {\r\n          appId: nextProps.credentials.appId,\r\n          apiKey: nextProps.credentials.apiKey\r\n        },\r\n        selectedStoredCredential: ''\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange(event) {\r\n    let { credentials } = this.state;\r\n    credentials = { ...credentials, [event.target.id]: event.target.value };\r\n    this.setState({ credentials });\r\n  }\r\n\r\n  handlePeriodChange(event) {\r\n    this.props.setSearchPeriod(event.target.value);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    if (!this.state.editing) {\r\n      this.setState({ editing: !this.state.editing });\r\n      return;\r\n    }\r\n    this.props.setCredentials(this.state.credentials);\r\n    this.setState({ editing: !this.state.editing });\r\n  }\r\n\r\n  checkStoredAppCredentials(appName) {\r\n    this.setState({ editing: false });\r\n    this.props.tryFindCredentials(appName);\r\n    this.setState({ selectedStoredCredential: appName })\r\n  }\r\n\r\n  clearData() {\r\n    if (!window.confirm('Are you sure to clear all stored data?')) {\r\n      return;\r\n    }\r\n    this.props.clearData();\r\n  }\r\n\r\n  toggleAutoRefresh() {\r\n    this.props.setAutoRefresh(!this.props.autoRefresh);\r\n  }\r\n\r\n  credentialsChanged(credentials1, credentials2) {\r\n    return credentials1.appId !== credentials2.appId || credentials1.apiKey !== credentials2.apiKey;\r\n  }\r\n\r\n  validCredentials = () => {\r\n    return this.state.credentials.appId && this.state.credentials.apiKey;\r\n  }\r\n\r\n  renderCredentialsForm() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"ail-credentials-section ail-credentials\">\r\n          <label>Credentials</label>\r\n          <input className=\"ail-input\" value={this.state.credentials.appId}\r\n            placeholder='App id'\r\n            id=\"appId\"\r\n            disabled={!this.state.editing}\r\n            onChange={(e) => this.handleChange(e)} />\r\n          <input className=\"ail-input\" value={this.state.credentials.apiKey}\r\n            id=\"apiKey\"\r\n            placeholder='API key'\r\n            disabled={!this.state.editing}\r\n            onChange={(e) => this.handleChange(e)} />\r\n          {\r\n            this.state.editing ?\r\n              <button className={`ail-btn ail-btn--success u-w100 u-mt-2 ${(!this.validCredentials() ? 'disabled' : '')}`}>\r\n                Apply\r\n              </button> :\r\n              <button className={`ail-btn ail-btn--default u-w100 u-mt-2`}>Edit</button>\r\n          }\r\n        </div>\r\n        {this.renderAppsDropDown()}\r\n      </form>\r\n    );\r\n  }\r\n\r\n  renderAppsDropDown() {\r\n    if (this.props.availableApps.length === 0) {\r\n      return '';\r\n    }\r\n\r\n    return (\r\n      <div className=\"ail-credentials-section\">\r\n        <label>Switch apps</label>\r\n        <select value={this.state.selectedStoredCredential}\r\n          className=\"ail-input\"\r\n          onChange={(e) => this.checkStoredAppCredentials(e.target.value)}>\r\n          <option>Saved apps</option>\r\n          {this.props.availableApps.sort().map((appName, i) =>\r\n            <option key={i} value={appName}>{appName}</option>\r\n          )}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderGlobalOptions() {\r\n    return (\r\n      <div className=\"ail-credentials-section\">\r\n        <label>Settings</label>\r\n        <ul className=\"ail-btn-list\">\r\n          <li className=\"ail-toggle\">\r\n            <input className=\"hidden\" type=\"checkbox\" id=\"autorefresh\" checked={this.props.autoRefresh} onChange={(e) => this.toggleAutoRefresh()} />\r\n            <label htmlFor=\"autorefresh\" className=\"ail-btn\">Auto refresh</label>\r\n          </li>\r\n          <li className=\"ail-btn ail-btn--default\" onClick={() => this.clearData()}>Clear data</li>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderPeriod() {\r\n    return (\r\n      <div className=\"ail-credentials-section\">\r\n        <label>Search period</label>\r\n        <input className=\"ail-input\" value={this.props.searchPeriod}\r\n            placeholder='Specify period (P7D, PT1H...)'\r\n            id=\"searchPeriod\"\r\n            onChange={(e) => this.handlePeriodChange(e)} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderCredentialsForm()}\r\n        {this.renderGlobalOptions()}\r\n        {this.renderPeriod()}\r\n        <UISettings />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nCredentials = connect(mapStateToProps, mapDispatchToProps)(Credentials);\r\nexport default Credentials;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setQueryAction,\r\n  getLogsAction\r\n} from 'Actions/Logs';\r\nimport './QueryBox.css';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    query: state.query\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getLogs: () => dispatch(getLogsAction()),\r\n    setQuery: query => dispatch(setQueryAction(query))\r\n  };\r\n};\r\n\r\nclass QueryBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: props.query\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.state.query !== nextProps.query) {\r\n      this.setState({ query: nextProps.query });\r\n    }\r\n  }\r\n\r\n  setQuery = (event) => {\r\n    this.setState({ query: event.target.value });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.setQuery(this.state.query);\r\n    this.props.getLogs();\r\n  }\r\n\r\n  onEnterPress = (event) => {\r\n    if (event.keyCode === 13 && event.ctrlKey === true) {\r\n      this.handleSubmit(event);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"ail-footer\" onSubmit={this.handleSubmit}>\r\n        <textarea\r\n          className=\"ail-query\"\r\n          value={this.state.query}\r\n          placeholder=\"Write a query...\"\r\n          onKeyDown={this.onEnterPress}\r\n          onChange={this.setQuery} />\r\n        <button className=\"ail-search\" disabled={!this.state.query}>Search</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nQueryBox = connect(mapStateToProps, mapDispatchToProps)(QueryBox);\r\nexport default QueryBox;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport DateUtils from 'Utils/DateUtils';\r\nimport './StatusBar.css';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    autoRefresh: state.autoRefresh,\r\n    fetchTime: state.fetchTime,\r\n    appName: state.appName,\r\n    error: state.error,\r\n    loading: state.loading\r\n  };\r\n};\r\n\r\nlet StatusBar = (props) => (\r\n  <div className=\"ail-footer-status\">\r\n    <div className=\"ail-footer-status-item ail-footer-status--timestamp\">\r\n      {\r\n        !props.loading ? (\r\n          <div>\r\n            updated at {DateUtils.formatDateTime(props.fetchTime)} {props.autoRefresh ? '(auto)' : ''}\r\n          </div>\r\n        ) : 'Loading...'\r\n      }\r\n    </div>\r\n    {props.error ?\r\n      <div className=\"ail-footer-status-item ail-footer-status--error\">\r\n        {props.error}\r\n      </div> : ''\r\n    }\r\n  </div>\r\n);\r\nStatusBar = connect(mapStateToProps)(StatusBar);\r\nexport default StatusBar;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './App.css';\r\nimport Header from './Components/Header';\r\nimport Log from './Components/Log';\r\nimport Credentials from './Components/Settings/Credentials';\r\nimport QueryBox from './Components/QueryBox';\r\nimport { loadProfileAction } from './Actions/Profile';\r\nimport StatusBar from './Components/StatusBar';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    hasCredentials: state.credentials && state.credentials.appId,\r\n    appName: state.appName,\r\n    loading: state.loading,\r\n    activeTheme: state.ui.theme\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loadProfile: () => dispatch(loadProfileAction())\r\n  };\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sidebar: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadProfile();\r\n  }\r\n\r\n  toggleSidebar() {\r\n    this.setState({ sidebar: !this.state.sidebar });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`ait ${this.props.activeTheme} ${this.state.sidebar ? 'ail--sidebar-open' : ''}`}>\r\n        <div className=\"ail-container\">\r\n          <Header\r\n            sidebar={this.state.sidebar}\r\n            loading={this.props.loading}\r\n            toggleSidebar={() => this.toggleSidebar()}\r\n            appName={this.props.appName} />\r\n          <div className=\"ail-body\">\r\n            {\r\n              !this.props.hasCredentials ?\r\n                <h1>Welcome! To start, first set your credentials on top menu.</h1> :\r\n                <Log />\r\n            }\r\n          </div>\r\n          <div>\r\n            <StatusBar />\r\n            <QueryBox />\r\n          </div>\r\n        </div>\r\n        <div className=\"ail-sidebar\">\r\n          <Credentials />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp = connect(mapStateToProps, mapDispatchToProps)(App);\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Store';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport DomUtils from 'Utils/DomUtils';\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n\r\nregisterServiceWorker();\r\n\r\nDomUtils.listenViewHeightChanges();"],"sourceRoot":""}