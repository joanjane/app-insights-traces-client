{"version":3,"sources":["registerServiceWorker.js","Modules/Account/Models/AuthenticationType.js","Modules/Search/Store/initialState.js","Store/initialState.js","Modules/Shared/Store/initialState.js","Modules/UI/Store/initialState.js","Modules/Account/Store/initialState.js","Modules/Search/Actions/searchActionTypes.js","Modules/Search/Actions/getLogsAction.js","Modules/Search/Actions/refreshLogsAction.js","Modules/Search/Actions/setQueryAction.js","Modules/Search/Actions/setSearchPeriodAction.js","Modules/Search/Reducers/reducers.js","Modules/Search/Reducers/setAutoRefreshReducer.js","Modules/Search/Reducers/setQueryReducer.js","Modules/Search/Reducers/setSearchPeriodReducer.js","Modules/Search/Reducers/loadingReducer.js","Modules/Search/Reducers/setLogsReducer.js","Modules/Account/Actions/accountActionTypes.js","Modules/Account/Actions/clearDataAction.js","Modules/Account/Actions/setAuthenticationTypeAction.js","Modules/Account/Actions/authenticationChangedAction.js","Modules/Account/Actions/AAD/aadAccountActionTypes.js","Modules/Account/Actions/AAD/aadAuthenticatedAction.js","Modules/Account/Actions/AAD/aadSilentTokenRefreshAction.js","Modules/Account/Actions/AAD/setAADResourceAction.js","Modules/Account/Actions/AAD/setAADSubscriptionAction.js","Modules/Account/Actions/AAD/setAADTenantAction.js","Modules/Account/Reducers/AAD/aadSubscriptionsReducer.js","Modules/Account/Reducers/AAD/aadSubscriptionAppsReducer.js","Modules/Account/Actions/ApiKey/apiKeyAccountActionTypes.js","Modules/Account/Actions/ApiKey/setApiKeyAppsAction.js","Modules/Account/Actions/ApiKey/setApiKeyCredentialsAction.js","Modules/Account/Reducers/reducers.js","Modules/Account/Reducers/clearDataReducer.js","Modules/Account/Reducers/setAuthenticationTypeReducer.js","Modules/Account/Reducers/ApiKey/availableApiKeyAppsReducer.js","Modules/Account/Reducers/ApiKey/setApiKeyCredentialsReducer.js","Modules/Account/Reducers/AAD/setAADResourceReducer.js","Modules/Account/Reducers/AAD/setAADSubscriptionReducer.js","Modules/Account/Reducers/AAD/aadAuthenticatedReducer.js","Modules/Account/Reducers/AAD/aadLogoutReducer.js","Modules/Account/Reducers/AAD/aadTenantsReducer.js","Modules/Account/Reducers/AAD/setAADTenantReducer.js","Modules/UI/Actions/uiActionTypes.js","Modules/UI/Actions/changeThemeAction.js","Modules/UI/Reducers/reducers.js","Modules/UI/Reducers/changeThemeReducer.js","Modules/Shared/Actions/commonActionTypes.js","Modules/Shared/errorCodes.js","Modules/Shared/Actions/errorAction.js","Modules/Shared/Reducers/reducers.js","Modules/Shared/Reducers/errorReducer.js","Store/rootReducer.js","Store/combineActiveReducers.js","Modules/Account/Epics/accountUtils.js","Modules/Search/Epics/autoRefreshEpic.js","Modules/Shared/retryExceeded.js","Modules/Shared/Epics/handleError.js","Modules/Account/Actions/AAD/aadClearAccountAction.js","Modules/Search/Epics/getLogsEpic.js","Modules/Search/Epics/setQueryEpic.js","Modules/Search/Epics/epics.js","Modules/Shared/Actions/emptyAction.js","Modules/Search/Actions/setLogsAction.js","Modules/Search/Actions/loadingAction.js","Modules/Search/Epics/setSearchPeriodEpic.js","Modules/Account/Epics/AAD/setAADSubscriptionEpic.js","Modules/Account/Epics/epics.js","Modules/Account/Epics/clearDataEpic.js","Modules/Account/Epics/loadProfileEpic.js","Modules/Account/Epics/setAuthenticationTypeEpic.js","Modules/Account/Epics/AAD/loadSubscriptionsEpic.js","Modules/Account/Actions/AAD/subscriptionsLoadedAction.js","Modules/Account/Epics/AAD/loadSubscriptionsAppsEpic.js","Modules/Account/Actions/AAD/aiAppsLoadedAction.js","Modules/Account/Epics/AAD/aadLoginEpic.js","Modules/Account/Epics/AAD/aadLogoutEpic.js","Modules/Account/Epics/AAD/aadSilentTokenRefreshEpic.js","Modules/Account/Epics/AAD/loadTenantsEpic.js","Modules/Account/Actions/AAD/tenantsLoadedAction.js","Modules/Account/Epics/ApiKey/findApiKeyCredentialsCandidateEpic.js","Modules/Account/Epics/ApiKey/setApiKeyCredentialsEpic.js","Modules/UI/Epics/epics.js","Modules/UI/Epics/changeThemeEpic.js","Modules/UI/Epics/loadUISettingsEpic.js","Store/rootEpic.js","Utils/DomUtils.js","Utils/ConsoleDoc.js","Utils/QueryStringUtils.js","Utils/DateUtils.js","Services/ProfileRepository.js","Services/StorageRepository.js","Services/ResponseMappers/index.js","Services/ApplicationInsightsClient.js","Services/HttpClient.js","Services/AadAuthService.js","Services/Mock/HttpMock.js","Services/Mock/MockAadAuthService.js","Store/container.js","Store/index.js","Components/Header.js","Modules/UI/Components/UISettings.js","Modules/Account/Components/Settings/AadResourcePicker.js","Modules/Account/Actions/AAD/listAADTenantsAction.js","Modules/Account/Actions/AAD/listSubscriptionsAction.js","Modules/Account/Actions/AAD/listAIAppsAction.js","Modules/Account/Actions/AAD/aadLoginAction.js","Modules/Account/Actions/AAD/aadLogoutAction.js","Modules/Account/Components/Settings/AuthenticationModeSelector.js","Modules/Account/Components/Settings/ApiKeyCredentials.js","Modules/Account/Actions/ApiKey/tryFindApiCredentialsAction.js","Modules/Account/Components/Settings/ClearDataButton.js","Modules/Search/Components/Settings/SearchPeriodSetting.js","Modules/Search/Components/Settings/AutoRefreshSetting.js","Modules/Search/Actions/setAutoRefreshAction.js","Components/Settings.js","Components/StatusBar.js","Modules/Search/Models/SeverityLevel.js","Modules/Search/Components/LogLine.js","Modules/Search/Components/Log.js","Modules/Search/Components/QueryBox.js","Components/App.js","Modules/Account/Actions/loadProfileAction.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","AuthenticationType","none","apiKey","aad","initialState","errors","sharedInitialState","ui","theme","uiInitialState","search","logs","query","searchPeriod","autoRefresh","appName","fetchTime","loading","searchInitialState","account","authenticationType","appId","tenantId","subscriptionId","resourceId","authenticated","appVaults","availableApps","subscriptionsApps","subscriptions","tenants","accountInitialState","searchActionTypes","GET_LOGS","LOADING","SET_AUTOREFRESH","SET_LOGS","SET_QUERY","SET_SEARCH_PERIOD","SET_CURRENT_APP_NAME","USER_SEARCH_GET_LOGS_SOURCE","getLogsAction","type","payload","source","retry","AUTOREFRESH_GET_LOGS_SOURCE","setQueryAction","setSearchPeriodAction","reducers","action","enabled","Object","objectSpread","accountActionTypes","CLEAR_DATA","LOAD_PROFILE","PROFILE_LOADED","SET_AUTH_TYPE","AUTHENTICATION_CHANGED","clearDataAction","setAuthenticationTypeAction","authenticationChangedAction","aadAccountActionTypes","AAD_AUTHENTICATED","AAD_LOGIN","AAD_LOGOUT","AAD_SILENT_REFRESH","AI_APPS_LOADED","LIST_AI_APPS","LIST_AAD_SUBSCRIPTIONS","SET_AAD_RESOURCE","SET_AAD_SUBSCRIPTION","AAD_SUBSCRIPTIONS_LOADED","AAD_TENANTS_LOADED","LIST_AAD_TENANTS","SET_AAD_TENANT","AAD_CLEAR_ACCOUNT","aadAuthenticatedAction","aadSilentTokenRefreshAction","retryAction","setAADResourceAction","setAADSubscriptionAction","setAADTenantAction","sortByName","a","b","name","apiKeyAccountActionTypes","SET_APIKEY_APPS","SET_APIKEY_CREDENTIALS","TRY_FIND_CREDENTIALS","setApiKeyAppsAction","setApiKeyCredentialsAction","Error","sort","_action$payload","apps","uiActionTypes","CHANGE_UI_THEME","UIThemes","className","changeThemeAction","commonActionTypes","ERROR","errorCodes","Unknown","InvalidAuthenticationTokenTenant","errorAction","message","code","details","concat","toConsumableArray","rootReducer","arguments","length","undefined","currentState","forEach","reducer","newState","combineActiveReducers","searchReducers","accountReducers","uiReducers","sharedReducers","anyCredentials","isAutoRefreshEnabled","profileLoaded","authenticationChanged","retryExceeded","handleError","response","unknownErrorMessage","status","of","errorMessageParts","push","join","getLogsFilter","state$","value","epics","action$","$state","pipe","ofType","filter","q","autoRefreshFilter","switchMap","timer","map","t","_ref","inject","applicationInsightsClient","domUtils","forceScrollEnd","isScrollEnd","hasToScroll","getLogs","mergeMap","setLogsAction","setCredentialsAction","catchError","err","reason","tap","scrollBottom","store","profileRepository","storeQuery","storeSearchPeriod","clearData","consoleDoc","aadAuthService","runMigrations","printHelpOnConsole","getQuery","getSearchPeriod","apiKeyAccount","getApiKeyAccount","availableApiKeyApps","getAllApiKeyAccounts","aadAccount","getAADAccount","getAuthenticatedTenant","aadAuthenticated","isAuthenticated","getAuthenticationType","actions","apply","setAuthenticationType","listSubscriptions","subscriptionsLoadedAction","listAppInsightsAccounts","aiAppsLoadedAction","loginRedirect","removeAADAccount","logout","silentTokenRefresh","result","success","errorMessage","nextAction","getRetryAction","setAADAccount","listTenants","tenantsLoadedAction","apiKeyCredentials","find","c","setApiKeyAccount","setUITheme","getUITheme","rootEpic","combineEpics","searchEpics","accountEpics","uiEpics","DomUtils","classCallCheck","this","createClass","key","selector","document","querySelector","scrollTo","scrollHeight","scrollTop","offsetHeight","calcViewHeight","viewHeight","Math","max","documentElement","clientHeight","innerHeight","body","style","height","addEventListener","ConsoleDoc","href","split","QueryStringUtils","test","slice","reduce","params","param","_param$split","_param$split2","slicedToArray","decodeURIComponent","replace","history","url","pushState","DateUtils","date","formatTwoDigit","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","formatDate","formatTime","number","ProfileRepository","storageRepository","queryStringUtils","getLruData","selectors","setLruData","removeLruData","queryCredentials","getApiKeyCredentialsFromQuery","storeAppCredentials","getSessionData","saveSessionData","apiKeyAccounts","sortByApiKeyAccountName","saveLocalData","apiKeyApps","getLocalData","uiTheme","queryParams","getParams","removeParams","clearSessionData","clearLocalData","parseObject","data","serializeObject","removeSessionData","removeLocalData","migrateV2Model","e","oldTheme","credentialsByApp","keys","k","lruCredentials","api","StorageRepository","localStorage","sessionStorage","content","getItem","JSON","parse","setItem","stringify","removeItem","clear","traceMapper","row","colPropertiesIndex","hasRequiredProperties","model","timestamp","Date","severityLevel","responseMappers","trace","exception","v","props","prop","properties","every","ApplicationInsightsClient","httpClient","timespan","_this","get","buildAppUri","buildHeaders","httpResponse","mapQueryResponse","throwError","mapError","innererror","buildAadAuthorizationHeaders","x-api-key","warn","aadAccessToken","getToken","Authorization","toCamelCase","object","Array","isArray","mappedObject","objectProp","hasOwnProperty","newKey","charAt","toLowerCase","toString","constructor","tables","columns","i","propName","columnName","buildColumnPropertyIndex","rows","reponseMapper","itemType","getRowMapper","r","getAppName","columnsIndexPropertyMap","appNameIndex","uri","resource","id","AppId","displayName","HttpClient","headers","request","method","requestHeaders","Accept","Content-Type","queryString","encodeURIComponent","buildQuery","ajax","responseType","AadAuthService","clientId","process","scopes","iframeName","refreshingToken","tokenSubject","Subject","checkResponseCallback","fragmentParams","parseFragmentParams","alert","setHash","logoutUrl","buildLogoutUrl","setTimeout","createIFrameIfNotExists","redirectUrl","buildLoginUrl","open","fromEvent","event","origin","_unused","messageTypes","refresh_token_success","refresh_token_error","accessToken","remove","take","next","iframe","createElement","setAttribute","appendChild","parsedToken","parseToken","isExpired","hash","parent","postMessage","prompt","redirectUri","getAppUrl","formatQuery","pathname","getHash","substring","p","prev","current","token","jwtDecode","expirationDate","setUTCSeconds","exp","tokenClaims","tid","longquery","HttpMock","BasicTraceMockQuery","mock","SampleQuery","sampleMock","subscriptionsMock","subscriptionAppsMock","dependencies","dependencyFactory","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","epicMiddleware","createEpicMiddleware","createStore","applyMiddleware","run","Header","sidebar","toggleSidebar","titleIconClass","react_default","hidden","role","aria-labelledby","onClick","UISettings","possibleConstructorReturn","getPrototypeOf","call","handleThemeChange","bind","assertThisInitialized","changeTheme","_this2","nextTheme","Component","connect","themeIndex","findIndex","dispatch","AadResourcePicker","selectResource","app","s","setAADResource","selectSubscription","setAADSubscription","selectTenant","setAADTenant","login","nextProps","checkTenantsLoad","checkSubscriptionsLoad","checkAIAppsLoad","listAIApps","onChange","target","tenant","title","aria-label","_this3","subscription","_this4","_this$props$aad","subscriptionApps","_this5","react","disabled","renderLoginButton","renderTenantsDropDown","renderSubscriptionsDropDown","renderAppsDropDown","listAIAppsAction","AuthenticationModeSelector","changeAuthentication","setState","isActive","ApiKeyCredentials","handleChange","credentials","defineProperty","handleSubmit","preventDefault","setApiKeyCredentials","selectedStoredCredential","toggleEdit","validCredentials","editing","accountChanged","tryFindCredentials","credentials1","credentials2","onSubmit","placeholder","checkStoredAppCredentials","renderCredentialsForm","tryFindApiCredentialsAction","ClearDataButton","confirm","SearchPeriodSetting","setSearchPeriod","handlePeriodChange","onBlur","handleBlur","AutoRefreshSetting","setAutoRefresh","checked","toggleAutoRefresh","htmlFor","setAutoRefreshAction","Settings","Settings_ApiKeyCredentials","Settings_AadResourcePicker","Settings_AutoRefreshSetting","Settings_ClearDataButton","Settings_AuthenticationModeSelector","renderApplicationPicker","renderGlobalSettings","Settings_SearchPeriodSetting","Components_UISettings","dateUtils","StatusBar","connected","formatDateTime","SeverityLevel","0","1","2","3","4","LogLine","Log","item","Search_Components_LogLine","QueryBox","setQuery","onEnterPress","keyCode","ctrlKey","onKeyDown","App","loadProfile","activeTheme","src_Components_Header","hasCredentials","Components_Log","src_Components_StatusBar","Search_Components_QueryBox","src_Components_Settings","render","es","src_Components_App","getElementById","URL","fetch","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","listenViewHeightChanges"],"mappings":"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","file":"static/js/main.8199bc00.chunk.js","sourcesContent":["// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const AuthenticationType = {\r\n  none: 0,\r\n  apiKey: 1,\r\n  aad: 2\r\n};","export const initialState = (state) => {\r\n  state.search = {\r\n    logs: [],\r\n    query: 'traces | sort by timestamp desc | limit 50',\r\n    searchPeriod: '',\r\n    autoRefresh: true,\r\n    appName: '',\r\n    fetchTime: null,\r\n    loading: false,\r\n  };\r\n  return state;\r\n}","import { initialState as accountInitialState } from 'Modules/Account/Store';\r\nimport { initialState as searchInitialState } from 'Modules/Search/Store';\r\nimport { initialState as uiInitialState } from 'Modules/UI/Store';\r\nimport { initialState as sharedInitialState } from 'Modules/Shared/Store';\r\n\r\nexport const initialState = () => {\r\n  let state = { };\r\n\r\n  state = accountInitialState(state);\r\n  state = searchInitialState(state);\r\n  state = uiInitialState(state);\r\n  state = sharedInitialState(state);\r\n\r\n  return state;\r\n}","export const initialState = (state) => {\r\n  state.errors = [];\r\n  return state;\r\n}","export const initialState = (state) => {\r\n  state.ui = {\r\n    theme: 'theme-default'\r\n  };\r\n  return state;\r\n}","import { AuthenticationType } from 'Modules/Account/Models';\r\n\r\nexport const initialState = (state) => {\r\n  state.account = {\r\n    authenticationType: AuthenticationType.aad,\r\n    apiKey: apiKeyAccountInitialState(),\r\n    aad: aadAccountInitialState(),\r\n    appVaults: {\r\n      apiKey: apiKeyAppVaultInitialState(),\r\n      aad: aadAppVaultInitialState(),\r\n    },\r\n  };\r\n  return state;\r\n}\r\n\r\nexport function apiKeyAccountInitialState() {\r\n  return {\r\n    appId: '',\r\n    apiKey: ''\r\n  };\r\n}\r\n\r\nexport function apiKeyAppVaultInitialState() {\r\n  return {\r\n    availableApps: [],\r\n  };\r\n}\r\n\r\nexport function aadAppVaultInitialState() {\r\n  return {\r\n    subscriptionsApps: {},\r\n    subscriptions: [],\r\n    tenants: []\r\n  };\r\n}\r\n\r\nexport function aadAccountInitialState() {\r\n  return {\r\n    tenantId: '',\r\n    subscriptionId: '',\r\n    resourceId: '',\r\n    appId: '',\r\n    authenticated: false\r\n  };\r\n}\r\n","export const searchActionTypes = {\r\n  GET_LOGS: 'GET_LOGS',\r\n  LOADING: 'LOGS_LOADING',\r\n  SET_AUTOREFRESH: 'SET_AUTOREFRESH',\r\n  SET_LOGS: 'SET_LOGS',\r\n  SET_QUERY: 'SET_QUERY',\r\n  SET_SEARCH_PERIOD: 'SET_SEARCH_PERIOD',\r\n  SET_CURRENT_APP_NAME: 'SET_CURRENT_APP_NAME'\r\n};","import { searchActionTypes } from '.';\r\n\r\nexport const USER_SEARCH_GET_LOGS_SOURCE = 'USER_SEARCH';\r\n\r\nexport function getLogsAction() {\r\n  return { type: searchActionTypes.GET_LOGS, payload: { source: USER_SEARCH_GET_LOGS_SOURCE }, retry: 0 };\r\n}","import { searchActionTypes } from '.';\r\nexport const AUTOREFRESH_GET_LOGS_SOURCE = 'AUTOREFRESH';\r\n\r\nexport function refreshLogsAction() {\r\n  return { type: searchActionTypes.GET_LOGS, payload: { source: AUTOREFRESH_GET_LOGS_SOURCE }, retry: 0 };\r\n}","import { searchActionTypes } from '.';\r\n\r\nexport function setQueryAction(query) {\r\n  return { type: searchActionTypes.SET_QUERY, payload: { query } };\r\n}","import { searchActionTypes } from '.';\r\n\r\nexport function setSearchPeriodAction(searchPeriod) {\r\n  return { type: searchActionTypes.SET_SEARCH_PERIOD, payload: { searchPeriod } };\r\n}","import {\r\n  setAutoRefreshReducer,\r\n  setQueryReducer,\r\n  setSearchPeriodReducer,\r\n  loadingReducer,\r\n  setLogsReducer\r\n} from '.';\r\n\r\nexport const reducers = [\r\n  setAutoRefreshReducer,\r\n  setQueryReducer,\r\n  setSearchPeriodReducer,\r\n  loadingReducer,\r\n  setLogsReducer\r\n];","import { searchActionTypes } from 'Modules/Search/Actions';\r\n\r\nexport function setAutoRefreshReducer(state, action) {\r\n  if (action.type !== searchActionTypes.SET_AUTOREFRESH) return;\r\n\r\n  state.search.autoRefresh = action.payload.enabled;\r\n\r\n  return { ...state };\r\n}","import { searchActionTypes } from 'Modules/Search/Actions';\r\n\r\nexport function setQueryReducer(state, action) {\r\n  if (action.type !== searchActionTypes.SET_QUERY) return;\r\n\r\n  state.search.query = action.payload.query || '';\r\n\r\n  return { ...state };\r\n}\r\n","import { searchActionTypes } from 'Modules/Search/Actions';\r\n\r\nexport function setSearchPeriodReducer(state, action) {\r\n  if (action.type !== searchActionTypes.SET_SEARCH_PERIOD) return;\r\n\r\n  state.search.searchPeriod = action.payload.searchPeriod || '';\r\n\r\n  return { ...state };\r\n}\r\n","import { searchActionTypes } from 'Modules/Search/Actions';\r\n\r\nexport function loadingReducer(state, action) {\r\n  if (action.type !== searchActionTypes.LOADING) return;\r\n\r\n  state.search.loading = true;\r\n\r\n  return { ...state };\r\n}\r\n","import { searchActionTypes } from 'Modules/Search/Actions';\r\n\r\nexport function setLogsReducer(state, action) {\r\n  if (action.type !== searchActionTypes.SET_LOGS) return;\r\n\r\n  state.search.logs = action.payload.logs;\r\n  state.search.appName = action.payload.appName;\r\n  state.search.fetchTime = action.payload.fetchTime;\r\n  state.search.loading = false;\r\n  state.errors = [];\r\n\r\n  return { ...state };\r\n}","export const accountActionTypes = {\r\n  CLEAR_DATA: 'CLEAR_DATA',\r\n  LOAD_PROFILE: 'LOAD_PROFILE',\r\n  PROFILE_LOADED: 'PROFILE_LOADED',\r\n  SET_AUTH_TYPE: 'SET_AUTH_TYPE',\r\n  AUTHENTICATION_CHANGED: 'AUTHENTICATION_CHANGED'\r\n};","import { accountActionTypes } from '.';\r\n\r\nexport function clearDataAction() {\r\n  return { type: accountActionTypes.CLEAR_DATA, payload: null };\r\n}","import { accountActionTypes } from '.';\r\n\r\nexport function setAuthenticationTypeAction(authenticationType) {\r\n  return { type: accountActionTypes.SET_AUTH_TYPE, payload: { authenticationType } };\r\n}","import { accountActionTypes } from '.';\r\n\r\nexport function authenticationChangedAction() {\r\n  return { type: accountActionTypes.AUTHENTICATION_CHANGED, payload: {} };\r\n}","export const aadAccountActionTypes = {\r\n  AAD_AUTHENTICATED: 'AAD_AUTHENTICATED',\r\n  AAD_LOGIN: 'AAD_LOGIN',\r\n  AAD_LOGOUT: 'AAD_LOGOUT',\r\n  AAD_SILENT_REFRESH: 'AAD_SILENT_REFRESH',\r\n  AI_APPS_LOADED: 'AI_APPS_LOADED',\r\n  LIST_AI_APPS: 'LIST_AI_APPS',\r\n  LIST_AAD_SUBSCRIPTIONS: 'LIST_AAD_SUBSCRIPTIONS',\r\n  SET_AAD_RESOURCE: 'SET_AAD_RESOURCE',\r\n  SET_AAD_SUBSCRIPTION: 'SET_AAD_SUBSCRIPTION',\r\n  AAD_SUBSCRIPTIONS_LOADED: 'AAD_SUBSCRIPTIONS_LOADED',\r\n  AAD_TENANTS_LOADED: 'AAD_TENANTS_LOADED',\r\n  LIST_AAD_TENANTS: 'LIST_AAD_TENANTS',\r\n  SET_AAD_TENANT: 'SET_AAD_TENANT',\r\n  AAD_CLEAR_ACCOUNT: 'AAD_CLEAR_ACCOUNT'\r\n};","import { aadAccountActionTypes } from '.';\r\n\r\nexport function aadAuthenticatedAction(authenticated) {\r\n  return { type: aadAccountActionTypes.AAD_AUTHENTICATED, payload: { authenticated } };\r\n}","import { aadAccountActionTypes } from '.';\r\n\r\nexport function aadSilentTokenRefreshAction(retryAction) {\r\n  const payload = { };\r\n\r\n  if (retryAction) {\r\n    const retry = retryAction.retry + 1;\r\n    payload.retryAction = { type: retryAction.type, payload: retryAction.payload, retry };\r\n  }\r\n\r\n  return {\r\n    type: aadAccountActionTypes.AAD_SILENT_REFRESH,\r\n    payload\r\n  };\r\n}","import { aadAccountActionTypes } from '.';\r\n\r\nexport function setAADResourceAction(resourceId, appId) {\r\n  resourceId = resourceId || '';\r\n  appId = appId || '';\r\n  return { type: aadAccountActionTypes.SET_AAD_RESOURCE, payload: { resourceId, appId }};\r\n}","import { aadAccountActionTypes } from '.';\r\n\r\nexport function setAADSubscriptionAction(subscriptionId) {\r\n  subscriptionId = subscriptionId || '';\r\n  return { type: aadAccountActionTypes.SET_AAD_SUBSCRIPTION, payload: { subscriptionId }};\r\n}","import { aadAccountActionTypes } from '.';\r\n\r\nexport function setAADTenantAction(tenantId) {\r\n  tenantId = tenantId || '';\r\n  return { type: aadAccountActionTypes.SET_AAD_TENANT, payload: { tenantId }};\r\n}","import { aadAccountActionTypes } from 'Modules/Account/Actions/AAD';\r\n\r\nexport function aadSubscriptionsReducer(state, action) {\r\n  if (action.type !== aadAccountActionTypes.AAD_SUBSCRIPTIONS_LOADED) return;\r\n\r\n  let { subscriptions } = action.payload;\r\n  subscriptions = subscriptions.sort(sortByName);\r\n  state.account.appVaults.aad = { ...state.account.appVaults.aad, subscriptions };\r\n\r\n  return { ...state };\r\n}\r\n\r\nfunction sortByName(a,b) {\r\n  if (a.name < b.name) return -1;\r\n  if (a.name > b.name) return 1;\r\n  return 0;\r\n}","import { aadAccountActionTypes } from 'Modules/Account/Actions/AAD';\r\n\r\nexport function aadSubscriptionAppsReducer(state, action) {\r\n  if (action.type !== aadAccountActionTypes.AI_APPS_LOADED) return;\r\n\r\n  let { subscriptionId, apps } = action.payload;\r\n  const subscriptionsApps = { ...state.account.appVaults.aad.subscriptionsApps }\r\n  subscriptionsApps[subscriptionId] = apps;\r\n  apps = apps.sort(sortByName);\r\n\r\n  state.account.appVaults.aad.subscriptionsApps = subscriptionsApps;\r\n\r\n  return { ...state };\r\n}\r\nfunction sortByName(a,b) {\r\n  if (a.name < b.name) return -1;\r\n  if (a.name > b.name) return 1;\r\n  return 0;\r\n}","export const apiKeyAccountActionTypes = {\r\n  SET_APIKEY_APPS: 'SET_APIKEY_APPS',\r\n  SET_APIKEY_CREDENTIALS: 'SET_APIKEY_CREDENTIALS',\r\n  TRY_FIND_CREDENTIALS: 'TRY_FIND_CREDENTIALS'\r\n};","import { apiKeyAccountActionTypes } from '.';\r\n\r\nexport function setApiKeyAppsAction(availableApps) {\r\n  return {\r\n    type: apiKeyAccountActionTypes.SET_APIKEY_APPS,\r\n    payload: {\r\n      availableApps\r\n    }\r\n  };\r\n}","import { apiKeyAccountActionTypes } from '.';\r\n\r\nexport function setApiKeyCredentialsAction(appId, apiKey, appName) {\r\n  if (!appId || !apiKey) {\r\n    throw new Error('AppId and APIKey are required');\r\n  }\r\n  var payload = { appId, apiKey };\r\n  if (appName) {\r\n    payload.appName = appName;\r\n  }\r\n  return { type: apiKeyAccountActionTypes.SET_APIKEY_CREDENTIALS, payload };\r\n}","import {\r\n  clearDataReducer,\r\n  setAuthenticationTypeReducer\r\n} from '.';\r\n\r\nimport {\r\n  aadSubscriptionsReducer,\r\n  aadSubscriptionAppsReducer,\r\n  setAADResourceReducer,\r\n  setAADSubscriptionReducer,\r\n  aadAuthenticatedReducer,\r\n  aadLogoutReducer,\r\n  aadTenantsReducer,\r\n  setAADTenantReducer\r\n} from './AAD';\r\n\r\nimport {\r\n  availableApiKeyAppsReducer,\r\n  setApiKeyCredentialsReducer,\r\n} from './ApiKey';\r\n\r\nexport const reducers = [\r\n  clearDataReducer,\r\n  setAuthenticationTypeReducer,\r\n\r\n  availableApiKeyAppsReducer,\r\n  setApiKeyCredentialsReducer,\r\n\r\n  aadSubscriptionsReducer,\r\n  aadSubscriptionAppsReducer,\r\n  setAADResourceReducer,\r\n  setAADSubscriptionReducer,\r\n  aadAuthenticatedReducer,\r\n  aadLogoutReducer,\r\n  aadTenantsReducer,\r\n  setAADTenantReducer\r\n];","import { initialState } from 'Store/initialState';\r\nimport { accountActionTypes } from 'Modules/Account/Actions';\r\n\r\nexport function clearDataReducer(state, action) {\r\n  if (action.type !== accountActionTypes.CLEAR_DATA) return;\r\n\r\n  return { ...initialState() };\r\n}\r\n","import { accountActionTypes } from 'Modules/Account/Actions';\r\n\r\nexport function setAuthenticationTypeReducer(state, action) {\r\n  if (action.type !== accountActionTypes.SET_AUTH_TYPE) return;\r\n\r\n  state.account.authenticationType = action.payload.authenticationType;\r\n\r\n  return { ...state };\r\n}","import { accountActionTypes } from 'Modules/Account/Actions';\r\nimport { apiKeyAccountActionTypes } from 'Modules/Account/Actions/ApiKey';\r\n\r\nexport function availableApiKeyAppsReducer(state, action) {\r\n  if (action.type !== accountActionTypes.PROFILE_LOADED && action.type !== apiKeyAccountActionTypes.SET_APIKEY_APPS) return;\r\n\r\n  if (action.payload.availableApps) {\r\n    state.account.appVaults.apiKey.availableApps = action.payload.availableApps;\r\n  }\r\n\r\n  return { ...state };\r\n}","import { apiKeyAccountActionTypes } from 'Modules/Account/Actions/ApiKey';\r\n\r\nexport function setApiKeyCredentialsReducer(state, action) {\r\n  if (action.type !== apiKeyAccountActionTypes.SET_APIKEY_CREDENTIALS) return;\r\n\r\n  state.account.apiKey.appId = action.payload.appId;\r\n  state.account.apiKey.apiKey = action.payload.apiKey;\r\n\r\n  return { ...state };\r\n}\r\n","import { aadAccountActionTypes } from 'Modules/Account/Actions/AAD';\r\n\r\nexport function setAADResourceReducer(state, action) {\r\n  if (action.type !== aadAccountActionTypes.SET_AAD_RESOURCE) return;\r\n\r\n  state.account.aad.resourceId = action.payload.resourceId;\r\n  state.account.aad.appId = action.payload.appId;\r\n\r\n  return { ...state };\r\n}","import { aadAccountActionTypes } from 'Modules/Account/Actions/AAD';\r\n\r\nexport function setAADSubscriptionReducer(state, action) {\r\n  if (action.type !== aadAccountActionTypes.SET_AAD_SUBSCRIPTION) return;\r\n\r\n  state.account.aad.subscriptionId = action.payload.subscriptionId;\r\n  return { ...state };\r\n}","import { aadAccountActionTypes } from 'Modules/Account/Actions/AAD';\r\n\r\nexport function aadAuthenticatedReducer(state, action) {\r\n  if (action.type !== aadAccountActionTypes.AAD_AUTHENTICATED) return;\r\n\r\n  state.account.aad.authenticated = action.payload.authenticated;\r\n\r\n  return { ...state };\r\n}","import { aadAccountActionTypes } from 'Modules/Account/Actions/AAD';\r\nimport { aadAccountInitialState, aadAppVaultInitialState } from 'Modules/Account/Store/initialState';\r\n\r\nexport function aadLogoutReducer(state, action) {\r\n  if (action.type !== aadAccountActionTypes.AAD_LOGOUT && action.type !== aadAccountActionTypes.AAD_CLEAR_ACCOUNT) return;\r\n\r\n  state.account.aad = aadAccountInitialState();\r\n  state.account.appVaults.aad = aadAppVaultInitialState();\r\n\r\n  return { ...state };\r\n}","\r\nimport { aadAccountActionTypes } from 'Modules/Account/Actions/AAD';\r\n\r\nexport function aadTenantsReducer(state, action) {\r\n  if (action.type !== aadAccountActionTypes.AAD_TENANTS_LOADED) return;\r\n\r\n  let { tenants } = action.payload;\r\n  state.account.appVaults.aad = { ...state.account.appVaults.aad, tenants };\r\n\r\n  return { ...state };\r\n}","import { aadAccountActionTypes } from 'Modules/Account/Actions/AAD';\r\n\r\nexport function setAADTenantReducer(state, action) {\r\n  if (action.type !== aadAccountActionTypes.SET_AAD_TENANT) return;\r\n\r\n  state.account.aad.tenantId = action.payload.tenantId;\r\n\r\n  return { ...state };\r\n}","export const uiActionTypes = {\r\n  CHANGE_UI_THEME: 'CHANGE_UI_THEME'\r\n};","import { uiActionTypes } from '.';\r\n\r\nexport const UIThemes = [\r\n  {\r\n    name: 'Dark (default)',\r\n    className: 'theme-default'\r\n  },\r\n  {\r\n    name: 'Light',\r\n    className: 'theme-light'\r\n  }\r\n];\r\n\r\nexport function changeThemeAction(theme) {\r\n  return { type: uiActionTypes.CHANGE_UI_THEME, payload: { theme: theme } };\r\n}","import { changeThemeReducer } from '.';\r\n\r\nexport const reducers = [\r\n  changeThemeReducer\r\n];","import { uiActionTypes } from 'Modules/UI/Actions';\r\n\r\nexport function changeThemeReducer(state, action) {\r\n    if (action.type !== uiActionTypes.CHANGE_UI_THEME) return;\r\n\r\n    const ui = { ...state.ui, ...{ theme: action.payload.theme } };\r\n    return { ...state, ...{ ui: { ...ui } } };\r\n}","export const commonActionTypes = {\r\n  ERROR: 'ERROR'\r\n};","export const errorCodes = {\r\n  Unknown: 'UNKNOWN',\r\n  InvalidAuthenticationTokenTenant: 'InvalidAuthenticationTokenTenant'\r\n};\r\n","import { commonActionTypes } from '.';\r\nimport { errorCodes } from 'Modules/Shared/errorCodes';\r\n\r\nexport function errorAction(message, code) {\r\n  return {\r\n    type: commonActionTypes.ERROR,\r\n    payload: {\r\n      message,\r\n      code: code ? code : errorCodes.Unknown\r\n    }\r\n  };\r\n}","import {\r\n  errorReducer\r\n} from '.';\r\n\r\nexport const reducers = [\r\n  errorReducer\r\n];","import { commonActionTypes } from 'Modules/Shared/Actions';\r\nimport { errorCodes } from 'Modules/Shared/errorCodes';\r\n\r\nexport function errorReducer(state, action) {\r\n  if (action.type !== commonActionTypes.ERROR) return;\r\n\r\n  const error = typeof(action.payload) === 'string' ?\r\n    { message: action.payload, code: errorCodes.Unknown, details: null } :\r\n    action.payload;\r\n\r\n  if (error.code === errorCodes.InvalidAuthenticationTokenTenant) {\r\n    state.account.aad.tenantId = '';\r\n    state.account.aad.subscriptionId = '';\r\n    state.account.aad.resourceId = '';\r\n    state.account.aad.appId = '';\r\n    state.account.aad.authenticated = false;\r\n  }\r\n\r\n  state.errors = [...state.errors, error ];\r\n\r\n  state.search.loading = false;\r\n\r\n  return { ...state };\r\n}","import { combineActiveReducers } from './combineActiveReducers';\r\nimport { initialState } from './initialState';\r\nimport { reducers as searchReducers } from 'Modules/Search/Reducers/reducers';\r\nimport { reducers as accountReducers } from 'Modules/Account/Reducers/reducers';\r\nimport { reducers as uiReducers } from 'Modules/UI/Reducers/reducers';\r\nimport { reducers as sharedReducers } from 'Modules/Shared/Reducers/reducers';\r\n\r\nexport const rootReducer = combineActiveReducers([\r\n  ...searchReducers,\r\n  ...accountReducers,\r\n  ...uiReducers,\r\n  ...sharedReducers\r\n], initialState());","export const combineActiveReducers = (reducers, initialState) => {\r\n  return (state = initialState, action) => {\r\n    let currentState = state;\r\n    reducers.forEach(reducer => {\r\n      const newState = reducer(currentState, action);\r\n      if (newState) {\r\n        currentState = newState;\r\n      }\r\n    });\r\n    return currentState;\r\n  };\r\n};","import { AuthenticationType } from 'Modules/Account/Models';\r\n\r\nexport function anyCredentials(account) {\r\n  if (account.authenticationType === AuthenticationType.none) {\r\n    return false;\r\n  } else if (account.authenticationType === AuthenticationType.aad) {\r\n    return !(!account.aad.authenticated || !account.aad.subscriptionId || !account.aad.resourceId);\r\n  } else if (account.authenticationType === AuthenticationType.apiKey) {\r\n    return !(!account.apiKey.appId || !account.apiKey.apiKey);\r\n  }\r\n}","import { timer } from 'rxjs';\r\nimport { filter, switchMap, map } from 'rxjs/operators';\r\nimport { anyCredentials } from 'Modules/Account/Epics/accountUtils';\r\nimport { refreshLogsAction, searchActionTypes } from 'Modules/Search/Actions';\r\nimport { emptyAction } from 'Modules/Shared/Actions';\r\nimport { accountActionTypes } from 'Modules/Account/Actions';\r\nimport { ofType } from 'redux-observable';\r\n\r\nconst refreshTimeThreshold = 30000;\r\n\r\nexport const autoRefreshEpic = (action$, $state) =>\r\n  action$\r\n    .pipe(\r\n      ofType(\r\n        searchActionTypes.SET_AUTOREFRESH,\r\n        searchActionTypes.SET_LOGS,\r\n        accountActionTypes.PROFILE_LOADED,\r\n        accountActionTypes.AUTHENTICATION_CHANGED\r\n      ),\r\n      filter(q => autoRefreshFilter(q, $state)),\r\n      switchMap(q => {\r\n        return timer(refreshTimeThreshold)\r\n          .pipe(\r\n            map(t => isAutoRefreshEnabled($state.value) ? refreshLogsAction() : emptyAction())\r\n          );\r\n      })\r\n    );\r\n\r\nconst isAutoRefreshEnabled = (state) => state.search.autoRefresh && !state.search.loading;\r\nconst profileLoaded = (action) => action.type === accountActionTypes.PROFILE_LOADED && anyCredentials(action.payload.account);\r\nconst authenticationChanged = (action, state) => action.type === accountActionTypes.AUTHENTICATION_CHANGED && anyCredentials(state.account);\r\n\r\nfunction autoRefreshFilter(action, $state) {\r\n  if (action.type === searchActionTypes.SET_AUTOREFRESH && action.payload.enabled) {\r\n    return true;\r\n  }\r\n\r\n  if (isAutoRefreshEnabled($state.value)) {\r\n    if (action.type === searchActionTypes.SET_LOGS) {\r\n      return true;\r\n    } else if (profileLoaded(action)) {\r\n      return true;\r\n    } else if (authenticationChanged(action, $state.value)) {\r\n      return true;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n","export const retryExceeded = (action) => (+action.retry) > 0;","import { of } from 'rxjs';\r\nimport { errorAction } from 'Modules/Shared/Actions';\r\nimport { retryExceeded } from 'Modules/Shared/retryExceeded';\r\nimport { aadSilentTokenRefreshAction, aadClearAccountAction } from 'Modules/Account/Actions/AAD';\r\nimport { errorCodes } from 'Modules/Shared/errorCodes';\r\nimport { AuthenticationType } from 'Modules/Account/Models';\r\n\r\nexport function handleError(response, action, unknownErrorMessage, state) {\r\n  if (response.status === 401 &&\r\n    response.response.error &&\r\n    response.response.error.code === errorCodes.InvalidAuthenticationTokenTenant) {\r\n    return of(aadClearAccountAction());\r\n  }\r\n\r\n  if (response.status === 401 && !retryExceeded(action) &&\r\n    state.account.authenticationType === AuthenticationType.aad) {\r\n    return of(aadSilentTokenRefreshAction(action));\r\n  }\r\n\r\n  const errorMessageParts = [unknownErrorMessage];\r\n  if (response.status) {\r\n    errorMessageParts.push(`HTTP Status ${response.status}`);\r\n  }\r\n\r\n  const details = response.response && response.response.error ? ` ${response.response.error.code}: ${response.response.error.message}` : '';\r\n  if (details) {\r\n    errorMessageParts.push(details);\r\n  }\r\n\r\n  return of(errorAction(errorMessageParts.join('. ')));\r\n}\r\n","import { aadAccountActionTypes } from '.';\r\n\r\nexport function aadClearAccountAction() {\r\n  return { type: aadAccountActionTypes.AAD_CLEAR_ACCOUNT, payload: {} };\r\n}\r\n","import { of } from 'rxjs';\r\nimport { filter, switchMap, mergeMap, catchError, tap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { anyCredentials } from 'Modules/Account/Epics/accountUtils';\r\nimport { emptyAction } from 'Modules/Shared/Actions';\r\nimport { accountActionTypes } from 'Modules/Account/Actions';\r\nimport {\r\n  setLogsAction,\r\n  searchActionTypes,\r\n  loadingAction,\r\n  AUTOREFRESH_GET_LOGS_SOURCE\r\n} from 'Modules/Search/Actions';\r\nimport { AuthenticationType } from 'Modules/Account/Models';\r\nimport { setApiKeyCredentialsAction } from 'Modules/Account/Actions/ApiKey';\r\nimport { handleError } from 'Modules/Shared/Epics/handleError';\r\n\r\nexport const getLogsEpic = (action$, state$, { inject }) => {\r\n  const applicationInsightsClient = inject('ApplicationInsightsClient');\r\n  const domUtils = inject('DomUtils');\r\n\r\n  return action$\r\n    .pipe(\r\n      ofType(searchActionTypes.GET_LOGS, accountActionTypes.PROFILE_LOADED),\r\n      filter(action => getLogsFilter(state$)),\r\n      switchMap(action => {\r\n        // force scroll search is done by user or it is already at the end of scroll\r\n        const forceScrollEnd = hasToScroll(action, domUtils);\r\n\r\n        const state = state$.value;\r\n        return applicationInsightsClient.getLogs(state.account, state.search.query, state.search.searchPeriod)\r\n          .pipe(\r\n            mergeMap(logs => of(\r\n              setLogsAction(logs),\r\n              setCredentialsAction(state, logs.appName))\r\n            ),\r\n            catchError(err => {\r\n              let reason = (typeof (err) === 'string' ? err : err.message) || 'Error when getting logs';\r\n              return handleError(err, action, reason, state);\r\n            }),\r\n            tap(() => {\r\n              if (forceScrollEnd) {\r\n                domUtils.scrollBottom('.ail-body');\r\n              }\r\n            })\r\n          );\r\n      })\r\n    )\r\n  ;\r\n}\r\n\r\nexport const loadingEpic = (action$, state$) => {\r\n  return action$\r\n    .pipe(\r\n      ofType(searchActionTypes.GET_LOGS, accountActionTypes.PROFILE_LOADED),\r\n      filter(action => getLogsFilter(state$)),\r\n      switchMap(action => {\r\n        return of(loadingAction(true, action.payload.source));\r\n      })\r\n    )\r\n  ;\r\n}\r\n\r\nfunction getLogsFilter(state$) {\r\n  const state = state$.value;\r\n\r\n  return anyCredentials(state.account);\r\n}\r\n\r\nfunction hasToScroll(action, domUtils) {\r\n  return action.payload.source !== AUTOREFRESH_GET_LOGS_SOURCE ||\r\n    domUtils.isScrollEnd('.ail-body');\r\n}\r\n\r\nfunction setCredentialsAction(state, appName) {\r\n  return state.account.authenticationType === AuthenticationType.apiKey ?\r\n    setApiKeyCredentialsAction(state.account.apiKey.appId, state.account.apiKey.apiKey, appName) :\r\n    emptyAction()\r\n}","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { searchActionTypes } from 'Modules/Search/Actions';\r\nimport { emptyAction } from 'Modules/Shared/Actions';\r\n\r\nexport const setQueryEpic = (action$, store, { inject }) => {\r\n  const profileRepository = inject('ProfileRepository');\r\n  return action$\r\n    .pipe(\r\n      ofType(searchActionTypes.SET_QUERY),\r\n      switchMap(q => {\r\n        profileRepository.storeQuery(q.payload.query);\r\n        return of(emptyAction());\r\n      })\r\n    );\r\n}","import {\r\n  autoRefreshEpic,\r\n  getLogsEpic,\r\n  loadingEpic,\r\n  setQueryEpic,\r\n  setSearchPeriodEpic\r\n} from '.';\r\n\r\nexport const epics = [\r\n  autoRefreshEpic,\r\n  getLogsEpic,\r\n  loadingEpic,\r\n  setQueryEpic,\r\n  setSearchPeriodEpic\r\n];","export function emptyAction() {\r\n  return { type: 'never', payload: { }, retry: 0 };\r\n}","import { searchActionTypes } from '.';\r\n\r\nexport function setLogsAction(logs) {\r\n  return { type: searchActionTypes.SET_LOGS, payload: logs };\r\n}\r\n","import { searchActionTypes } from '.';\r\n\r\nexport function loadingAction(loading, source) {\r\n  return { type: searchActionTypes.LOADING, payload: { loading, source } };\r\n}","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { searchActionTypes } from 'Modules/Search/Actions';\r\nimport { emptyAction } from 'Modules/Shared/Actions';\r\n\r\nexport const setSearchPeriodEpic = (action$, store, { inject }) => {\r\n  const profileRepository = inject('ProfileRepository');\r\n  return action$\r\n    .pipe(\r\n      ofType(searchActionTypes.SET_SEARCH_PERIOD),\r\n      switchMap(q => {\r\n        profileRepository.storeSearchPeriod(q.payload.searchPeriod);\r\n        return of(emptyAction());\r\n      })\r\n    );\r\n}","import { map } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { aadAccountActionTypes } from 'Modules/Account/Actions/AAD';\r\nimport { authenticationChangedAction } from 'Modules/Account/Actions';\r\n\r\nexport const setAADSubscriptionEpic = (action$, state$, { inject }) => {\r\n  const profileRepository = inject('ProfileRepository');\r\n\r\n  return action$\r\n    .pipe(\r\n      ofType(\r\n        aadAccountActionTypes.SET_AAD_TENANT,\r\n        aadAccountActionTypes.SET_AAD_SUBSCRIPTION,\r\n        aadAccountActionTypes.SET_AAD_RESOURCE,\r\n        aadAccountActionTypes.AAD_LOGOUT\r\n      ),\r\n      map(() => {\r\n        profileRepository.setAADAccount(state$.value.account.aad);\r\n        return authenticationChangedAction();\r\n      })\r\n    )\r\n  ;\r\n}","import {\r\n  clearDataEpic,\r\n  loadProfileEpic,\r\n  setAuthenticationTypeEpic\r\n} from '.';\r\n\r\nimport {\r\n  loadSubscriptionsEpic,\r\n  loadSubscriptionsAppsEpic,\r\n  aadLoginEpic,\r\n  aadLogoutEpic,\r\n  aadSilentTokenRefreshEpic,\r\n  setAADSubscriptionEpic,\r\n  loadTenantsEpic\r\n} from './AAD';\r\n\r\nimport {\r\n  findApiKeyCredentialsCandidateEpic,\r\n  setApiKeyCredentialsEpic\r\n} from './ApiKey';\r\n\r\nexport const epics = [\r\n  clearDataEpic,\r\n  loadProfileEpic,\r\n  setAuthenticationTypeEpic,\r\n\r\n  loadSubscriptionsEpic,\r\n  loadSubscriptionsAppsEpic,\r\n  aadLoginEpic,\r\n  aadLogoutEpic,\r\n  aadSilentTokenRefreshEpic,\r\n  setAADSubscriptionEpic,\r\n  loadTenantsEpic,\r\n\r\n  findApiKeyCredentialsCandidateEpic,\r\n  setApiKeyCredentialsEpic\r\n];","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { accountActionTypes } from 'Modules/Account/Actions';\r\nimport { emptyAction } from 'Modules/Shared/Actions';\r\n\r\nexport const clearDataEpic = (action$, store, { inject }) => {\r\n  const profileRepository = inject('ProfileRepository');\r\n  return action$\r\n    .pipe(\r\n      ofType(accountActionTypes.CLEAR_DATA),\r\n      switchMap(q => {\r\n        profileRepository.clearData();\r\n        return of(emptyAction());\r\n      })\r\n    );\r\n}\r\n","import { of } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { AuthenticationType } from 'Modules/Account/Models';\r\nimport {\r\n  accountActionTypes,\r\n  setAuthenticationTypeAction\r\n} from 'Modules/Account/Actions';\r\nimport {\r\n  setQueryAction,\r\n  setSearchPeriodAction,\r\n  getLogsAction\r\n} from 'Modules/Search/Actions';\r\nimport {\r\n  setApiKeyAppsAction,\r\n  setApiKeyCredentialsAction\r\n} from 'Modules/Account/Actions/ApiKey';\r\nimport {\r\n  setAADSubscriptionAction,\r\n  setAADResourceAction,\r\n  aadAuthenticatedAction,\r\n  aadSilentTokenRefreshAction,\r\n  setAADTenantAction\r\n} from 'Modules/Account/Actions/AAD';\r\n\r\nexport const loadProfileEpic = (action$, state$, { inject }) => {\r\n  const profileRepository = inject('ProfileRepository');\r\n  const consoleDoc = inject('ConsoleDoc');\r\n  const aadAuthService = inject('AadAuthService');\r\n\r\n  return action$.pipe(\r\n    ofType(accountActionTypes.LOAD_PROFILE),\r\n    mergeMap(q => {\r\n      profileRepository.runMigrations();\r\n\r\n      consoleDoc.printHelpOnConsole();\r\n      const query = profileRepository.getQuery();\r\n      const searchPeriod = profileRepository.getSearchPeriod();\r\n      const apiKeyAccount = profileRepository.getApiKeyAccount();\r\n      const availableApiKeyApps = profileRepository.getAllApiKeyAccounts();\r\n      const aadAccount = profileRepository.getAADAccount();\r\n\r\n      const tenantId = aadAuthService.getAuthenticatedTenant() || (aadAccount && aadAccount.tenantId);\r\n      let aadAuthenticated = aadAuthService.isAuthenticated();\r\n      let authenticationType = profileRepository.getAuthenticationType();\r\n\r\n      if (authenticationType !== AuthenticationType.apiKey && aadAccount && aadAccount.authenticated) {\r\n        authenticationType = AuthenticationType.aad;\r\n      }\r\n\r\n      let actions = [\r\n        setApiKeyAppsAction(availableApiKeyApps),\r\n        aadAuthenticatedAction(aadAuthenticated)\r\n      ];\r\n\r\n      if (searchPeriod) {\r\n        actions.push(setSearchPeriodAction(searchPeriod));\r\n      }\r\n\r\n      if (query) {\r\n        actions.push(setQueryAction(query));\r\n      }\r\n\r\n      if (authenticationType != null) {\r\n        actions.push(setAuthenticationTypeAction(authenticationType));\r\n      }\r\n\r\n      if (aadAccount) {\r\n        if (tenantId) {\r\n          actions.push(setAADTenantAction(tenantId));\r\n        }\r\n\r\n        if (aadAccount.tenantId === tenantId) {\r\n          if (aadAccount.subscriptionId) {\r\n            actions.push(setAADSubscriptionAction(aadAccount.subscriptionId));\r\n          }\r\n          if (aadAccount.resourceId && aadAccount.appId) {\r\n            actions.push(setAADResourceAction(aadAccount.resourceId, aadAccount.appId));\r\n          }\r\n        } else {\r\n          actions.push(setAADSubscriptionAction());\r\n          actions.push(setAADResourceAction());\r\n        }\r\n\r\n        if (authenticationType === AuthenticationType.aad && !aadAuthenticated) {\r\n          actions.push(aadSilentTokenRefreshAction(getLogsAction()));\r\n        }\r\n      }\r\n\r\n      if (apiKeyAccount && apiKeyAccount.appId && apiKeyAccount.apiKey) {\r\n        actions.push(setApiKeyCredentialsAction(\r\n          apiKeyAccount.appId,\r\n          apiKeyAccount.apiKey,\r\n          apiKeyAccount.appName\r\n        ));\r\n      }\r\n\r\n      actions.push(getLogsAction());\r\n\r\n      return of(...actions);\r\n    })\r\n  );\r\n}","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { accountActionTypes, authenticationChangedAction } from 'Modules/Account/Actions';\r\n\r\nexport const setAuthenticationTypeEpic = (action$, store, { inject }) => {\r\n  const profileRepository = inject('ProfileRepository');\r\n  return action$\r\n    .pipe(\r\n      ofType(accountActionTypes.SET_AUTH_TYPE),\r\n      switchMap(q => {\r\n        const { authenticationType } = q.payload;\r\n        profileRepository.setAuthenticationType(authenticationType);\r\n        return of(authenticationChangedAction());\r\n      })\r\n    );\r\n}\r\n\r\n\r\n","import { switchMap, map, filter, catchError } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport {\r\n  aadAccountActionTypes,\r\n  subscriptionsLoadedAction\r\n} from 'Modules/Account/Actions/AAD';\r\nimport { handleError } from 'Modules/Shared/Epics/handleError';\r\n\r\nexport const loadSubscriptionsEpic = (action$, state$, { inject }) => {\r\n  const applicationInsightsClient = inject('ApplicationInsightsClient');\r\n\r\n  return action$\r\n    .pipe(\r\n      ofType(aadAccountActionTypes.LIST_AAD_SUBSCRIPTIONS),\r\n      filter(() => state$.value.account.aad.authenticated),\r\n      switchMap((action) => {\r\n        return applicationInsightsClient.listSubscriptions()\r\n          .pipe(\r\n            map(subscriptions => subscriptionsLoadedAction(subscriptions)),\r\n            catchError(response => handleError(response, action, 'Error loading subscription', state$.value))\r\n          );\r\n      }),\r\n    );\r\n}","import { aadAccountActionTypes } from '.';\r\n\r\nexport function subscriptionsLoadedAction(subscriptions) {\r\n  return { type: aadAccountActionTypes.AAD_SUBSCRIPTIONS_LOADED, payload: { subscriptions }};\r\n}","import { switchMap, map, filter, catchError } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport {\r\n  aadAccountActionTypes,\r\n  aiAppsLoadedAction} from 'Modules/Account/Actions/AAD';\r\nimport { handleError } from 'Modules/Shared/Epics/handleError';\r\n\r\nexport const loadSubscriptionsAppsEpic = (action$, state$, { inject }) => {\r\n  const applicationInsightsClient = inject('ApplicationInsightsClient');\r\n\r\n  return action$\r\n    .pipe(\r\n      ofType(aadAccountActionTypes.LIST_AI_APPS),\r\n      filter(action => {\r\n        const { aad } = state$.value.account;\r\n        return aad.authenticated;\r\n      }),\r\n      switchMap((action) => {\r\n        const subscriptionId = action.payload.subscriptionId;\r\n        return applicationInsightsClient.listAppInsightsAccounts(subscriptionId)\r\n          .pipe(\r\n            map(apps => aiAppsLoadedAction(subscriptionId, apps)),\r\n            catchError(response => handleError(response, action, 'Error loading subscription apps', state$.value))\r\n          );\r\n      }),\r\n    );\r\n}","import { aadAccountActionTypes } from '.';\r\n\r\nexport function aiAppsLoadedAction(subscriptionId, apps) {\r\n  return { type: aadAccountActionTypes.AI_APPS_LOADED, payload: { subscriptionId, apps }};\r\n}","import { map } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { aadAccountActionTypes } from 'Modules/Account/Actions/AAD';\r\nimport { emptyAction } from 'Modules/Shared/Actions';\r\n\r\nexport const aadLoginEpic = (action$, state$, { inject }) => {\r\n  const aadAuthService = inject('AadAuthService');\r\n\r\n  return action$\r\n    .pipe(\r\n      ofType(aadAccountActionTypes.AAD_LOGIN),\r\n      map(() => {\r\n        aadAuthService.loginRedirect(state$.value.account.aad.tenantId);\r\n        return emptyAction();\r\n      })\r\n    )\r\n  ;\r\n}","import { of } from 'rxjs';\r\nimport { mergeMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { aadAccountActionTypes } from 'Modules/Account/Actions/AAD';\r\nimport { authenticationChangedAction } from 'Modules/Account/Actions';\r\nimport { setAADSubscriptionAction, setAADResourceAction, setAADTenantAction } from 'Modules/Account/Actions/AAD';\r\n\r\nexport const aadLogoutEpic = (action$, state$, { inject }) => {\r\n  const aadAuthService = inject('AadAuthService');\r\n  const profileRepository = inject('ProfileRepository');\r\n\r\n  return action$\r\n    .pipe(\r\n      ofType(aadAccountActionTypes.AAD_LOGOUT),\r\n      mergeMap(() => {\r\n        profileRepository.removeAADAccount();\r\n        aadAuthService.logout();\r\n        return of(\r\n          setAADTenantAction(''),\r\n          setAADSubscriptionAction(''),\r\n          setAADResourceAction('', ''),\r\n          authenticationChangedAction()\r\n        );\r\n      })\r\n    )\r\n  ;\r\n}","import { of } from 'rxjs';\r\nimport { mergeMap, filter } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { emptyAction, errorAction } from 'Modules/Shared/Actions';\r\nimport { aadAccountActionTypes, aadAuthenticatedAction } from 'Modules/Account/Actions/AAD';\r\nimport { AuthenticationType } from 'Modules/Account/Models';\r\n\r\nexport const aadSilentTokenRefreshEpic = (action$, state$, { inject }) => {\r\n  const aadAuthService = inject('AadAuthService');\r\n\r\n  return action$\r\n    .pipe(\r\n      ofType(aadAccountActionTypes.AAD_SILENT_REFRESH),\r\n      filter(action => {\r\n        const state = state$.value;\r\n        return state.account.authenticationType === AuthenticationType.aad;\r\n      }),\r\n      mergeMap((action) => {\r\n        return aadAuthService.silentTokenRefresh(state$.value.account.aad.tenantId)\r\n          .pipe(\r\n            mergeMap(result => {\r\n              if (!result.success) {\r\n                return of(\r\n                  aadAuthenticatedAction(false),\r\n                  errorAction(`An error has occurred while refreshing token silently: ${result.errorMessage}. Login again.`)\r\n                );\r\n              }\r\n\r\n              const nextAction = getRetryAction(action);\r\n              return of(aadAuthenticatedAction(true), nextAction);\r\n            })\r\n          );\r\n      })\r\n    )\r\n  ;\r\n}\r\n\r\nfunction getRetryAction(action) {\r\n  const retryAction = action.payload.retryAction;\r\n  const nextAction = retryAction ? { ...retryAction } : emptyAction();\r\n  nextAction.retry++;\r\n  return nextAction;\r\n}\r\n","import { switchMap, map, filter, catchError } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport {\r\n  aadAccountActionTypes,\r\n  tenantsLoadedAction} from 'Modules/Account/Actions/AAD';\r\nimport { handleError } from 'Modules/Shared/Epics/handleError';\r\n\r\nexport const loadTenantsEpic = (action$, state$, { inject }) => {\r\n  const applicationInsightsClient = inject('ApplicationInsightsClient');\r\n\r\n  return action$\r\n    .pipe(\r\n      ofType(aadAccountActionTypes.LIST_AAD_TENANTS),\r\n      filter(() => {\r\n        const { aad } = state$.value.account;\r\n        return aad.authenticated;\r\n      }),\r\n      switchMap((action) => {\r\n        return applicationInsightsClient.listTenants()\r\n          .pipe(\r\n            map(tenants => tenantsLoadedAction(tenants)),\r\n            catchError(response => handleError(response, action, 'Error loading Azure AD tenants', state$.value))\r\n          );\r\n      }),\r\n    );\r\n}\r\n\r\n","import { aadAccountActionTypes } from '.';\r\n\r\nexport function tenantsLoadedAction(tenants) {\r\n  return { type: aadAccountActionTypes.AAD_TENANTS_LOADED, payload: { tenants }};\r\n}","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { emptyAction } from 'Modules/Shared/Actions';\r\nimport { apiKeyAccountActionTypes, setApiKeyCredentialsAction } from 'Modules/Account/Actions/ApiKey';\r\n\r\nexport const findApiKeyCredentialsCandidateEpic = (action$, state$, { inject }) => {\r\n  return action$\r\n    .pipe(\r\n      ofType(apiKeyAccountActionTypes.TRY_FIND_CREDENTIALS),\r\n      switchMap(q => {\r\n        const { appName } = q.payload;\r\n        const availableApps = state$.value.account.appVaults.apiKey.availableApps;\r\n        const apiKeyCredentials = availableApps.find(c => c.appId === appName || (c.appName && c.appName === appName));\r\n\r\n        return apiKeyCredentials ?\r\n          of(setApiKeyCredentialsAction(\r\n            apiKeyCredentials.appId,\r\n            apiKeyCredentials.apiKey,\r\n            apiKeyCredentials.appName)) :\r\n          of(emptyAction());\r\n      })\r\n    );\r\n}","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { apiKeyAccountActionTypes, setApiKeyAppsAction } from 'Modules/Account/Actions/ApiKey';\r\nimport { authenticationChangedAction } from 'Modules/Account/Actions';\r\n\r\nexport const setApiKeyCredentialsEpic = (action$, store, { inject }) => {\r\n  const profileRepository = inject('ProfileRepository');\r\n  return action$\r\n    .pipe(\r\n      ofType(apiKeyAccountActionTypes.SET_APIKEY_CREDENTIALS),\r\n      switchMap(q => {\r\n        profileRepository.setApiKeyAccount(q.payload);\r\n        const availableApps = profileRepository.getAllApiKeyAccounts();\r\n        return of(setApiKeyAppsAction(availableApps), authenticationChangedAction());\r\n      })\r\n    );\r\n}","import {\r\n  changeThemeEpic,\r\n  loadUISettingsEpic\r\n} from '.';\r\n\r\nexport const epics = [\r\n  changeThemeEpic,\r\n  loadUISettingsEpic\r\n];","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { emptyAction } from 'Modules/Shared/Actions';\r\nimport { uiActionTypes } from 'Modules/UI/Actions';\r\n\r\nexport const changeThemeEpic = (action$, $state, { inject }) => {\r\n  const profileRepository = inject('ProfileRepository');\r\n  return action$\r\n    .pipe(\r\n      ofType(uiActionTypes.CHANGE_UI_THEME),\r\n      switchMap(q => {\r\n        profileRepository.setUITheme(q.payload.theme);\r\n        return of(emptyAction());\r\n      })\r\n    );\r\n}","import { of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { ofType } from 'redux-observable';\r\nimport { emptyAction} from 'Modules/Shared/Actions';\r\nimport { accountActionTypes } from 'Modules/Account/Actions';\r\nimport { changeThemeAction} from 'Modules/UI/Actions';\r\n\r\nexport const loadUISettingsEpic = (action$, store, { inject }) => {\r\n  const profileRepository = inject('ProfileRepository');\r\n  return action$.pipe(\r\n    ofType(accountActionTypes.LOAD_PROFILE),\r\n    switchMap(q => {\r\n      const theme = profileRepository.getUITheme();\r\n      if (theme) {\r\n          return of(changeThemeAction(theme));\r\n      }\r\n      return of(emptyAction());\r\n    })\r\n  );\r\n}","import { combineEpics } from 'redux-observable';\r\nimport { epics as searchEpics } from 'Modules/Search/Epics/epics';\r\nimport { epics as accountEpics } from 'Modules/Account/Epics/epics';\r\nimport { epics as uiEpics } from 'Modules/UI/Epics/epics';\r\n\r\nexport const rootEpic = combineEpics(\r\n    ...searchEpics,\r\n    ...accountEpics,\r\n    ...uiEpics\r\n);","export class DomUtils {\r\n  scrollBottom(selector) {\r\n    document.querySelector(selector).scrollTo(0, document.querySelector(selector).scrollHeight);\r\n  }\r\n\r\n  isScrollEnd(selector) {\r\n    const scrollPosition =\r\n      document.querySelector(selector).scrollTop +\r\n      document.querySelector(selector).offsetHeight;\r\n    return scrollPosition === document.querySelector(selector).scrollHeight;\r\n  }\r\n\r\n  listenViewHeightChanges() {\r\n    function calcViewHeight() {\r\n      const viewHeight = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);\r\n      document.body.style.height = `${viewHeight}px`;\r\n    }\r\n\r\n    calcViewHeight();\r\n    window.addEventListener('onorientationchange', calcViewHeight, true);\r\n    window.addEventListener('resize', calcViewHeight, true);\r\n  }\r\n}","export class ConsoleDoc {\r\n  printHelpOnConsole() {\r\n    if (process.env.NODE_ENV === 'test') {\r\n      return;\r\n    }\r\n\r\n    console.log(\r\n`Hello! Here are some tips you must think useful:\r\nQuery documentation (https://docs.loganalytics.io/docs/Language-Reference/):\r\nSeverity levels:\r\n0: 'verbose',\r\n1: 'information',\r\n2: 'warning',\r\n3: 'error',\r\n4: 'critical'\r\n\r\nQuery samples:\r\ntraces | where severityLevel > 2 | sort by timestamp desc | limit 200\r\ntraces | where message has 'Error' | sort by timestamp desc | limit 200\r\nexceptions | sort by timestamp desc | limit 200\r\nunion exceptions, traces | sort by timestamp desc | limit 200\r\ntraces | where timestamp > todatetime(\"2018-04-26 10:20:00Z\") | sort by timestamp desc | limit 100\r\ntraces | where timestamp > ago(1h)\r\n\r\nShare a url: ${window.location.href.split('?')[0]}?app_id={your_app_id}&api_key={your_api_key}`);\r\n  }\r\n}","export class QueryStringUtils {\r\n  getParams() {\r\n    if (!window.location) {\r\n      return {};\r\n    }\r\n\r\n    const query = window.location.search;\r\n    if (!query) {\r\n      return {};\r\n    }\r\n\r\n    return (/^[?#]/.test(query) ? query.slice(1) : query)\r\n      .split('&')\r\n      .reduce((params, param) => {\r\n        let [key, value] = param.split('=');\r\n        params[key] = value ? decodeURIComponent(value.replace(/\\+/g, ' ')) : '';\r\n        return params;\r\n      }, {});\r\n  }\r\n\r\n  removeParams() {\r\n    if (!window.history) {\r\n      return;\r\n    }\r\n    const url = window.location.href.split('?');\r\n    window.history.pushState({}, '', url[0]);\r\n  }\r\n}","export class DateUtils {\r\n  formatDate(date) {\r\n    return `${this.formatTwoDigit(date.getFullYear())}-${this.formatTwoDigit(date.getMonth() + 1)}-${this.formatTwoDigit(date.getDate())}`;\r\n  }\r\n\r\n  formatTime(date) {\r\n    return `${this.formatTwoDigit(date.getHours())}:${this.formatTwoDigit(date.getMinutes())}:${this.formatTwoDigit(date.getSeconds())}`;\r\n  }\r\n\r\n  formatDateTime(date) {\r\n    if (!date) {\r\n      return '-';\r\n    }\r\n    return this.formatDate(date) + ' ' + this.formatTime(date);\r\n  }\r\n\r\n  formatTwoDigit(number) {\r\n    if (number < 10) {\r\n      return `0${number}`;\r\n    }\r\n    return number;\r\n  }\r\n}","import { AuthenticationType } from 'Modules/Account/Models';\r\n\r\nexport class ProfileRepository {\r\n  constructor(storageRepository, queryStringUtils) {\r\n    this.storageRepository = storageRepository;\r\n    this.queryStringUtils = queryStringUtils;\r\n  }\r\n\r\n  getAuthenticationType() {\r\n    return this.getLruData(selectors.authenticationType, true);\r\n  }\r\n\r\n  setAuthenticationType(authenticationType) {\r\n    this.setLruData(selectors.authenticationType, authenticationType, true);\r\n  }\r\n\r\n  getAADAccount() {\r\n    return this.getLruData(selectors.aadAccount, true);\r\n  }\r\n\r\n  setAADAccount(aadAccount) {\r\n    this.setLruData(selectors.aadAccount, aadAccount, true);\r\n  }\r\n\r\n  removeAADAccount() {\r\n    this.removeLruData(selectors.aadAccount);\r\n  }\r\n\r\n  getApiKeyAccount() {\r\n    const queryCredentials = this.getApiKeyCredentialsFromQuery();\r\n    if (queryCredentials) {\r\n      return queryCredentials;\r\n    }\r\n    return this.getLruData(selectors.apiKeyAccount, true);\r\n  }\r\n\r\n  setApiKeyAccount(apiKeyAccount) {\r\n    this.setLruData(selectors.apiKeyAccount, apiKeyAccount, true);\r\n    if (apiKeyAccount.appName) {\r\n      this.storeAppCredentials(apiKeyAccount, apiKeyAccount.appName);\r\n    }\r\n  }\r\n\r\n  getQuery() {\r\n    return this.storageRepository.getSessionData(selectors.query);\r\n  }\r\n\r\n  storeQuery(query) {\r\n    this.storageRepository.saveSessionData(selectors.query, query);\r\n  }\r\n\r\n  getSearchPeriod() {\r\n    return this.storageRepository.getSessionData(selectors.searchPeriod);\r\n  }\r\n\r\n  storeSearchPeriod(searchPeriod) {\r\n    this.storageRepository.saveSessionData(selectors.searchPeriod, searchPeriod);\r\n  }\r\n\r\n  storeAppCredentials(apiKeyCredentials, appName) {\r\n    if (!appName || !apiKeyCredentials.appId || !apiKeyCredentials.apiKey || apiKeyCredentials.appId === appName) {\r\n      return;\r\n    }\r\n\r\n    let apiKeyAccounts = (this.getAllApiKeyAccounts() || []).filter(c => c.appId !== apiKeyCredentials.appId);\r\n    apiKeyAccounts.push(apiKeyCredentials);\r\n    apiKeyAccounts = apiKeyAccounts.sort(sortByApiKeyAccountName);\r\n    this.storageRepository.saveLocalData(selectors.apiKeyApps, apiKeyAccounts, true);\r\n  }\r\n\r\n  getAllApiKeyAccounts() {\r\n    const apiKeyAccounts = this.storageRepository.getLocalData(selectors.apiKeyApps, true);\r\n    if (!apiKeyAccounts) {\r\n      return apiKeyAccounts;\r\n    }\r\n    return apiKeyAccounts.sort(sortByApiKeyAccountName);\r\n  }\r\n\r\n  getUITheme() {\r\n    return this.storageRepository.getLocalData(selectors.uiTheme);\r\n  }\r\n\r\n  setUITheme(theme) {\r\n    this.storageRepository.saveLocalData(selectors.uiTheme, theme);\r\n  }\r\n\r\n  getApiKeyCredentialsFromQuery() {\r\n    const queryParams = this.queryStringUtils.getParams();\r\n    if (queryParams['app_id'] && queryParams['api_key']) {\r\n      this.queryStringUtils.removeParams();\r\n      this.setAuthenticationType(AuthenticationType.apiKey);\r\n      return {\r\n        appId: queryParams['app_id'],\r\n        apiKey: queryParams['api_key'],\r\n      };\r\n    }\r\n    return null;\r\n  }\r\n\r\n  clearData() {\r\n    this.storageRepository.clearSessionData();\r\n    this.storageRepository.clearLocalData();\r\n  }\r\n\r\n  getLruData(key, parseObject) {\r\n    let data = this.storageRepository.getSessionData(key, parseObject);\r\n    if (data == null) {\r\n      data = this.storageRepository.getLocalData(`lru.${key}`, parseObject);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  setLruData(key, value, serializeObject) {\r\n    let data = this.storageRepository.saveSessionData(key, value, serializeObject);\r\n    if (data == null) {\r\n      data = this.storageRepository.saveLocalData(`lru.${key}`, value, serializeObject);\r\n    }\r\n\r\n    return data;\r\n  }\r\n\r\n  removeLruData(key) {\r\n    this.storageRepository.removeSessionData(key);\r\n    this.storageRepository.removeLocalData(`lru.${key}`);\r\n  }\r\n\r\n  runMigrations() {\r\n    try {\r\n      this.migrateV2Model();\r\n    } catch (e) {\r\n      console.error('Error running migrations', e);\r\n    }\r\n  }\r\n\r\n  migrateV2Model() {\r\n    // Migrate theme\r\n    const oldTheme = this.storageRepository.getLocalData('ui-theme');\r\n    if (oldTheme) {\r\n      this.setUITheme(oldTheme);\r\n      this.storageRepository.removeLocalData('ui-theme');\r\n    }\r\n\r\n    // Migrate api key app credentials\r\n    const credentialsByApp = this.storageRepository.getLocalData('credentialsByApp', true);\r\n    if (credentialsByApp) {\r\n      const apps = Object.keys(credentialsByApp).map(k => credentialsByApp[k]);\r\n      this.storageRepository.saveLocalData(selectors.apiKeyApps, apps, true);\r\n      this.storageRepository.removeLocalData('credentialsByApp');\r\n    }\r\n\r\n    // Migrate credentials\r\n    const lruCredentials = this.storageRepository.getLocalData('lruCredentials', true);\r\n    if (lruCredentials) {\r\n      if (lruCredentials.api) {\r\n        this.setApiKeyAccount(lruCredentials.api);\r\n      }\r\n\r\n      if (lruCredentials.aad) {\r\n        this.setAADAccount(lruCredentials.aad);\r\n      }\r\n\r\n      if (lruCredentials.authenticationType) {\r\n        this.setAuthenticationType(lruCredentials.authenticationType);\r\n      }\r\n      this.storageRepository.removeLocalData('lruCredentials');\r\n    }\r\n  }\r\n}\r\n\r\nconst selectors = {\r\n  query: 'search.query',\r\n  searchPeriod: 'search.searchPeriod',\r\n  apiKeyApps: 'account.appVaults.apiKey.availableApps',\r\n  authenticationType: 'account.authenticationType',\r\n  aadAccount: 'account.aad',\r\n  apiKeyAccount: 'account.apiKey',\r\n  uiTheme: 'ui.theme'\r\n};\r\n\r\n\r\nfunction sortByApiKeyAccountName(a,b) {\r\n  if (a.appName < b.appName) return -1;\r\n  if (a.appName > b.appName) return 1;\r\n  return 0;\r\n}","export class StorageRepository {\r\n  constructor(localStorage, sessionStorage) {\r\n    this.localStorage = localStorage;\r\n    this.sessionStorage = sessionStorage;\r\n  }\r\n\r\n  getSessionData(key, parseObject) {\r\n    if (parseObject) {\r\n      const content = this.sessionStorage.getItem(key);\r\n      try {\r\n        return content ? JSON.parse(content) : null;\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    }\r\n    return this.sessionStorage.getItem(key);\r\n  }\r\n\r\n  saveSessionData(key, value, serializeObject) {\r\n    this.sessionStorage.setItem(key, serializeObject ? JSON.stringify(value) : value);\r\n  }\r\n\r\n  removeSessionData(key) {\r\n    this.sessionStorage.removeItem(key);\r\n  }\r\n\r\n  clearSessionData() {\r\n    this.sessionStorage.clear();\r\n  }\r\n\r\n  getLocalData(key, parseObject) {\r\n    if (parseObject) {\r\n      const content = this.localStorage.getItem(key);\r\n      try {\r\n        return content ? JSON.parse(content) : null;\r\n      } catch (e) {\r\n        return null;\r\n      }\r\n    }\r\n    return this.localStorage.getItem(key);\r\n  }\r\n\r\n  saveLocalData(key, value, serializeObject) {\r\n    this.localStorage.setItem(key, serializeObject ? JSON.stringify(value) : value);\r\n  }\r\n\r\n  removeLocalData(key) {\r\n    this.localStorage.removeItem(key);\r\n  }\r\n\r\n  clearLocalData() {\r\n    this.localStorage.clear();\r\n  }\r\n}","const traceMapper = (row, colPropertiesIndex) => {\r\n  if (!hasRequiredProperties(['timestamp', 'message'], row, colPropertiesIndex)) {\r\n    return null;\r\n  }\r\n  const model = { };\r\n  model.timestamp = new Date(row[colPropertiesIndex['timestamp']]);\r\n  model.severityLevel = row[colPropertiesIndex['severityLevel']] || 0;\r\n  model.message = row[colPropertiesIndex['message']];\r\n\r\n  return model;\r\n};\r\n\r\nconst exceptionMapper = (row, colPropertiesIndex) => {\r\n  if (!hasRequiredProperties(['timestamp'], row, colPropertiesIndex)) {\r\n    return null;\r\n  }\r\n  const model = { };\r\n  model.timestamp = new Date(row[colPropertiesIndex['timestamp']]);\r\n  model.severityLevel = row[colPropertiesIndex['severityLevel']] || 0;\r\n  model.message =\r\n  [\r\n    row[colPropertiesIndex['problemId']],\r\n    row[colPropertiesIndex['outerMessage']]\r\n  ]\r\n  .filter(v => v != null)\r\n  .join(': ');\r\n\r\n  if (row[colPropertiesIndex['outerMessage']] !== row[colPropertiesIndex['innermostMessage']] && row[colPropertiesIndex['innermostMessage']]) {\r\n    model.message += '\\r\\n' +\r\n    [\r\n      row[colPropertiesIndex['innermostType']],\r\n      row[colPropertiesIndex['innermostMessage']]\r\n    ]\r\n    .filter(v => v != null)\r\n    .join(': ');\r\n  }\r\n  return model;\r\n};\r\n\r\nconst propsMapper = (row, colPropertiesIndex) => {\r\n  if (!hasRequiredProperties(['timestamp'], row, colPropertiesIndex)) {\r\n    return null;\r\n  }\r\n  const model = { };\r\n  model.timestamp = new Date(row[colPropertiesIndex['timestamp']]);\r\n  model.severityLevel = row[colPropertiesIndex['severityLevel']] || 0;\r\n  model.message = '';\r\n\r\n  Object.keys(colPropertiesIndex)\r\n    .filter(prop => prop !== 'timestamp' && prop !== 'severityLevel')\r\n    .forEach(prop => {\r\n      model.message += `${prop}: ${row[colPropertiesIndex[prop]]}\\n`;\r\n    });\r\n\r\n  return model;\r\n};\r\n\r\n\r\nconst responseMappers = {\r\n  'trace': traceMapper,\r\n  'exception': exceptionMapper,\r\n  'log': traceMapper,\r\n  'props': propsMapper\r\n};\r\n\r\nexport function getRowMapper(row, colPropertiesIndex) {\r\n  const itemType = row[colPropertiesIndex['itemType']];\r\n  if (responseMappers[itemType]) {\r\n    return responseMappers[itemType];\r\n  }\r\n  if (hasRequiredProperties(['timestamp', 'message'], row, colPropertiesIndex)) {\r\n    return responseMappers['log'];\r\n  }\r\n  return responseMappers['props'];\r\n}\r\n\r\n/**\r\n * return a dictionary of property name and column index\r\n * {[columnName: string]: columnIndex: number} response\r\n */\r\nexport function buildColumnPropertyIndex(response) {\r\n  const colPropertiesIndex = {};\r\n  response.tables[0].columns.forEach((c, i) => {\r\n    const propName = c.name || c.columnName;\r\n    colPropertiesIndex[propName] = i;\r\n  });\r\n  return colPropertiesIndex;\r\n}\r\n\r\nexport function toCamelCase(object) {\r\n  if (Array.isArray(object)) {\r\n    return object.map((value) => {\r\n        if (typeof value === 'object') {\r\n          value = toCamelCase(value);\r\n        }\r\n        return value;\r\n    });\r\n  } else if (typeof object === 'object') {\r\n    let mappedObject = null;\r\n    for (const objectProp in object) {\r\n      if (!mappedObject) {\r\n        mappedObject = {};\r\n      }\r\n      if (object.hasOwnProperty(objectProp)) {\r\n        const newKey = (objectProp.charAt(0).toLowerCase() + objectProp.slice(1) || objectProp).toString();\r\n        let value = object[objectProp];\r\n        if (value instanceof Array || (value != null && value.constructor === Object)) {\r\n          value = toCamelCase(value);\r\n        }\r\n        mappedObject[newKey] = value;\r\n      }\r\n    }\r\n    return mappedObject;\r\n  } else {\r\n    return object;\r\n  }\r\n}\r\n\r\nfunction hasRequiredProperties(properties, row, colPropertiesIndex) {\r\n  return properties.every(prop => row[colPropertiesIndex[prop]] != null);\r\n}","import { throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { buildColumnPropertyIndex, getRowMapper, toCamelCase } from './ResponseMappers';\r\nimport { AuthenticationType } from 'Modules/Account/Models';\r\n\r\nexport class ApplicationInsightsClient {\r\n  constructor(httpClient, aadAuthService) {\r\n    this.httpClient = httpClient;\r\n    this.aadAuthService = aadAuthService;\r\n  }\r\n\r\n  getLogs(account, query, timespan) {\r\n    const queryParams = [{ name: 'query', value: query }, { name: 'api-version', value: '2018-05-01-preview' }];\r\n    if (timespan) {\r\n      queryParams.push({ name: 'timespan', value: timespan });\r\n    }\r\n    try {\r\n      return this.httpClient.get(\r\n        `${this.buildAppUri(account)}/query`,\r\n        this.buildHeaders(account),\r\n        queryParams\r\n      )\r\n        .pipe(\r\n          map(httpResponse => this.mapQueryResponse(httpResponse.response)),\r\n          catchError(error => {\r\n            console.error(error);\r\n            if (error.status === 401) {\r\n              return throwError(error);\r\n            } else if (error.response && error.response.error) {\r\n              const reason = this.mapError('', error.response.error);\r\n              return throwError(reason);\r\n            } else if (typeof (error.response) === 'string') {\r\n              return throwError(`${error.status}: ${error.response}`);\r\n            }\r\n            return throwError(error);\r\n          })\r\n        );\r\n\r\n    } catch (e) {\r\n      return throwError(e);\r\n    }\r\n  }\r\n\r\n  mapError(message, error) {\r\n    if (!error || !error.message) {\r\n      return `${message}`;\r\n    }\r\n    return this.mapError(`${message}${error.message}. `, error.innererror);\r\n  }\r\n\r\n  buildAppUri(account) {\r\n    if (account.authenticationType === AuthenticationType.aad) {\r\n      return `https://management.azure.com/${account.aad.resourceId}/api`;\r\n    } else if (account.authenticationType === AuthenticationType.apiKey) {\r\n      return `https://api.applicationinsights.io/v1/apps/${account.apiKey.appId}`;\r\n    }\r\n    throw new Error('You must setup an authentication to fetch logs');\r\n  }\r\n\r\n  buildHeaders(account) {\r\n    if (account.authenticationType === AuthenticationType.none) {\r\n      throw new Error('You must setup an authentication');\r\n    }\r\n\r\n    if (account.authenticationType === AuthenticationType.aad) {\r\n      return this.buildAadAuthorizationHeaders();\r\n    }\r\n\r\n    return {\r\n      'x-api-key': account.apiKey.apiKey\r\n    };\r\n  }\r\n\r\n  buildAadAuthorizationHeaders() {\r\n    if (!this.aadAuthService.isAuthenticated()) {\r\n      console.warn('AzureAD request not being authenticated');\r\n    }\r\n\r\n    const aadAccessToken = this.aadAuthService.getToken();\r\n    return {\r\n      'Authorization': `Bearer ${aadAccessToken}`\r\n    };\r\n  }\r\n\r\n  mapQueryResponse(response) {\r\n    response = toCamelCase(response);\r\n    if (!response || !response.tables) {\r\n      throw new Error('Unexpected response content from query');\r\n    }\r\n\r\n    const colPropertiesIndex = buildColumnPropertyIndex(response);\r\n    const rows = response.tables[0].rows.map(row => {\r\n      const reponseMapper = getRowMapper(row, colPropertiesIndex);\r\n      if (!reponseMapper) {\r\n        // when item type is not supported, skip\r\n        return null;\r\n      }\r\n\r\n      var model = reponseMapper(row, colPropertiesIndex);\r\n      return model;\r\n    })\r\n      .filter(r => r !== null)\r\n      .sort((a, b) => {\r\n        if (a.timestamp === b.timestamp) {\r\n          return 0;\r\n        } else if (a.timestamp > b.timestamp) {\r\n          return 1;\r\n        } else {\r\n          return -1;\r\n        }\r\n      });\r\n\r\n    return {\r\n      logs: rows,\r\n      appName: this.getAppName(response, colPropertiesIndex),\r\n      fetchTime: new Date()\r\n    };\r\n  }\r\n\r\n  getAppName(response, columnsIndexPropertyMap) {\r\n    if (response.tables[0].rows.length < 1) {\r\n      return null;\r\n    }\r\n    const appNameIndex = columnsIndexPropertyMap['appName'];\r\n    return response.tables[0].rows[0][appNameIndex]\r\n  }\r\n\r\n  listAppInsightsAccounts(subscriptionId) {\r\n    const queryParams = [{ name: 'api-version', value: '2015-05-01' }];\r\n    let uri = `https://management.azure.com/subscriptions/${subscriptionId}/providers/Microsoft.Insights/components`;\r\n\r\n    return this.httpClient.get(uri, this.buildAadAuthorizationHeaders(), queryParams)\r\n      .pipe(map(r => r.response.value.map(resource => {\r\n        return {\r\n          id: resource.id,\r\n          name: resource.name,\r\n          appId: resource.properties.AppId\r\n        };\r\n      })));\r\n  }\r\n\r\n  listSubscriptions() {\r\n    const queryParams = [{ name: 'api-version', value: '2015-05-01' }];\r\n    const uri = `https://management.azure.com/subscriptions`;\r\n\r\n    return this.httpClient.get(uri, this.buildAadAuthorizationHeaders(), queryParams)\r\n      .pipe(map(r => r.response.value.map(resource => {\r\n        return {\r\n          id: resource.subscriptionId,\r\n          name: resource.displayName\r\n        };\r\n      })));\r\n  }\r\n\r\n  listTenants() {\r\n    const queryParams = [{ name: 'api-version', value: '2017-08-01' }];\r\n    const uri = `https://management.azure.com/tenants`;\r\n\r\n    const tenants = this.httpClient.get(uri, this.buildAadAuthorizationHeaders(), queryParams)\r\n      .pipe(\r\n        map(r => r.response.value.map(resource => {\r\n            return {\r\n              id: resource.tenantId,\r\n              name: resource.displayName\r\n            };\r\n          })\r\n        )\r\n      );\r\n\r\n    return tenants;\r\n  }\r\n}","import { ajax } from 'rxjs/ajax';\r\n\r\nexport class HttpClient {\r\n  get(uri, headers, query) {\r\n    return this.request('GET', uri, headers, query);\r\n  }\r\n\r\n  post(uri, body, headers, query) {\r\n    return this.request('POST', uri, headers, query, body);\r\n  }\r\n\r\n  put(uri, body, headers, query) {\r\n    return this.request('PUT', uri, headers, query, body);\r\n  }\r\n\r\n  delete(uri, headers, query) {\r\n    return this.request('DELETE', uri, headers, query);\r\n  }\r\n\r\n  request(method, uri, headers, query, body) {\r\n    let requestHeaders = {\r\n      'Accept': 'application/json',\r\n      'Content-Type': 'application/json'\r\n    };\r\n\r\n    if (headers) {\r\n      requestHeaders = { ...requestHeaders, ...headers };\r\n    }\r\n\r\n    const queryString = buildQuery(query);\r\n    return ajax({\r\n      url: queryString ? `${uri}?${queryString}` : uri,\r\n      method: method,\r\n      headers: requestHeaders,\r\n      responseType: 'json',\r\n      body: body\r\n    });\r\n  }\r\n}\r\n\r\nfunction buildQuery(query) {\r\n  if (!query || !query.length) return null;\r\n\r\n  return query.map(q => `${q.name}=${encodeURIComponent(q.value)}`).join('&');\r\n}","import { fromEvent } from 'rxjs';\r\nimport { filter, map, take, tap } from 'rxjs/operators';\r\nimport { Subject } from 'rxjs';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\nexport class AadAuthService {\r\n  constructor(storageRepository) {\r\n    this.storageRepository = storageRepository;\r\n    this.clientId = process.env.REACT_APP_CLIENT_ID;\r\n    this.scopes = [\r\n      'openid',\r\n      'profile',\r\n      'https://management.azure.com/user_impersonation',\r\n      // 'https://api5.applicationinsights.io/Data.Read' // AAD Gives an error (AADSTS28000) if more than 1 scope. Really MSFT!?\r\n    ];\r\n    this.iframeName = 'aad-silent-refresh';\r\n    this.refreshingToken = false;\r\n    this.tokenSubject = new Subject();\r\n\r\n    this.checkResponseCallback();\r\n  }\r\n\r\n  checkResponseCallback() {\r\n    const fragmentParams = this.parseFragmentParams();\r\n    if (!fragmentParams) return;\r\n\r\n    if (fragmentParams['error']) {\r\n      const err = `Error: ${fragmentParams['error']}\\nDetails: ${fragmentParams['error_description']}`;\r\n      this.storageRepository.removeSessionData('access_token');\r\n      alert(err);\r\n      this.setHash('');\r\n    } else if (fragmentParams['access_token']) {\r\n      this.storageRepository.saveSessionData('access_token', fragmentParams['access_token']);\r\n      this.setHash('');\r\n    }\r\n  }\r\n\r\n  logout(tenantId) {\r\n    this.storageRepository.removeSessionData('access_token');\r\n    const logoutUrl = this.buildLogoutUrl(tenantId);\r\n\r\n    setTimeout(() => {\r\n      document.location.href = logoutUrl;\r\n    }, 1000);\r\n  }\r\n\r\n  silentTokenRefresh(tenantId) {\r\n    if (this.refreshingToken) {\r\n      console.warn('Refresh token silent is already in progress');\r\n      return this.tokenSubject;\r\n    }\r\n    this.refreshingToken = true;\r\n    this.createIFrameIfNotExists();\r\n\r\n    const redirectUrl = this.buildLoginUrl(tenantId, 'none');\r\n    setTimeout(() => window.open(redirectUrl, this.iframeName), 1000);\r\n    return fromEvent(window, 'message')\r\n      .pipe(\r\n        filter(event => {\r\n          if (event.origin !== window.origin) {\r\n            return false;\r\n          }\r\n\r\n          let message = null;\r\n          try {\r\n            message = JSON.parse(event.data);\r\n          } catch { }\r\n          return message && (\r\n            message.type === messageTypes.refresh_token_success ||\r\n            message.type === messageTypes.refresh_token_error\r\n          );\r\n        }),\r\n        map(e => JSON.parse(e.data)),\r\n        map(message => {\r\n          if (message.type === messageTypes.refresh_token_success) {\r\n            this.storageRepository.saveSessionData('access_token', message.accessToken);\r\n          } else {\r\n            this.storageRepository.removeSessionData('access_token');\r\n            this.storageRepository.saveSessionData('aad.error', message.errorMessage);\r\n          }\r\n\r\n          this.refreshingToken = false;\r\n          document.querySelector(`#${this.iframeName}`).remove();\r\n          return {\r\n            success: message.type === messageTypes.refresh_token_success,\r\n            errorMessage: message.errorMessage ? message.errorMessage : null\r\n          };\r\n        }),\r\n        take(1),\r\n        tap(message => this.tokenSubject.next(message)),\r\n      );\r\n  }\r\n\r\n  createIFrameIfNotExists() {\r\n    if (!document.querySelector(`#${this.iframeName}`)) {\r\n      const iframe = document.createElement('iframe');\r\n      iframe.setAttribute('id', this.iframeName);\r\n      iframe.setAttribute('name', this.iframeName);\r\n      iframe.setAttribute('hidden', 'true');\r\n      document.body.appendChild(iframe);\r\n    }\r\n  }\r\n\r\n  loginRedirect(tenantId) {\r\n    const redirectUrl = this.buildLoginUrl(tenantId);\r\n    document.location.href = redirectUrl;\r\n  }\r\n\r\n  getToken() {\r\n    return this.storageRepository.getSessionData('access_token');\r\n  }\r\n\r\n  isAuthenticated() {\r\n    const parsedToken = this.parseToken();\r\n    if (!parsedToken) {\r\n      return false;\r\n    }\r\n\r\n    return !parsedToken.isExpired()\r\n  }\r\n\r\n  getHash() {\r\n    return document.location.hash;\r\n  }\r\n\r\n  setHash(hash) {\r\n    return document.location.hash = hash;\r\n  }\r\n\r\n  postMessageToParent(message) {\r\n    window.parent.postMessage(JSON.stringify(message), '*');\r\n  }\r\n\r\n  buildLoginUrl(tenantId, prompt) {\r\n    if (!tenantId) {\r\n      tenantId = 'organizations';\r\n    }\r\n    let redirectUri = this.getAppUrl();\r\n    if (!prompt) {\r\n      prompt = 'select_account';\r\n    } else if (prompt === 'none') {\r\n      redirectUri = `${redirectUri}aadrefreshtokensilent.html`\r\n    }\r\n    const queryParams = [\r\n      { name: 'client_id', value: this.clientId },\r\n      { name: 'response_type', value: 'token' },\r\n      { name: 'redirect_uri', value: redirectUri },\r\n      { name: 'scope', value: this.scopes.join(' ') },\r\n      { name: 'prompt', value: prompt },\r\n    ];\r\n    const redirectUrl = `https://login.microsoftonline.com/${tenantId}/oauth2/v2.0/authorize?${this.formatQuery(queryParams)}`;\r\n    return redirectUrl;\r\n  }\r\n\r\n  buildLogoutUrl(tenantId) {\r\n    tenantId = tenantId || 'organizations';\r\n    const queryParams = [{\r\n      name: 'post_logout_redirect_uri',\r\n      value: this.getAppUrl()\r\n    }];\r\n    const ssoSignOutUrl = `https://login.microsoftonline.com/${tenantId}/oauth2/v2.0/logout?${this.formatQuery(queryParams)}`;\r\n    return ssoSignOutUrl;\r\n  }\r\n\r\n  getAppUrl() {\r\n    return `${document.location.origin}${document.location.pathname}`;\r\n  }\r\n\r\n  parseFragmentParams() {\r\n    if (this.getHash() === '') {\r\n      return null;\r\n    }\r\n    const params = this.getHash().substring(1).split('&')\r\n      .map(p => {\r\n        const prop = p.split('=');\r\n        return {\r\n          name: prop[0],\r\n          value: decodeURIComponent(prop[1].replace(/\\+/g, '%20'))\r\n        }\r\n      }).reduce((prev, current) => {\r\n        prev[current.name] = current.value;\r\n        return prev;\r\n      }, {});\r\n\r\n    return params;\r\n  }\r\n\r\n  formatQuery(queryParams) {\r\n    const query = queryParams.map(q => `${q.name}=${encodeURIComponent(q.value)}`).join('&');\r\n    return query;\r\n  }\r\n\r\n  parseToken() {\r\n    const token = this.getToken();\r\n    if (!token) {\r\n      return null;\r\n    }\r\n\r\n    const parsedToken = jwtDecode(token);\r\n    parsedToken.expirationDate = new Date(0);\r\n    parsedToken.expirationDate.setUTCSeconds(parsedToken.exp);\r\n    parsedToken.isExpired = function () {\r\n      const isExpired = this.expirationDate < new Date();\r\n      return isExpired;\r\n    };\r\n    return parsedToken;\r\n  }\r\n\r\n  getAuthenticatedTenant() {\r\n    const tokenClaims = this.parseToken();\r\n    return tokenClaims && tokenClaims.tid;\r\n  }\r\n}\r\n\r\nconst messageTypes = {\r\n  refresh_token_success: 'refresh_token_success',\r\n  refresh_token_error: 'refresh_token_error',\r\n};","import mock from './BasicTraceMock.json';\r\nimport sampleMock from './SampleMock.json';\r\nimport subscriptionsMock from './AADSubscriptionsMock.json';\r\nimport subscriptionAppsMock from './AADSubscriptionAppsMock.json';\r\n\r\nconst longquery = 'traces%20%7C%20sort%20by%20timestamp%20desc%20%7C%20limit%2050';\r\nconst shortquery = 'traces';\r\nconst HttpMock = { };\r\n\r\nconst BasicTraceMockQuery = 'https://api.applicationinsights.io/v1/apps/DEMO/query?query=';\r\nHttpMock[`${BasicTraceMockQuery}${longquery}&api-version=2018-05-01-preview`] = {\r\n  response: mock,\r\n  status: 200\r\n};\r\n\r\nHttpMock[`${BasicTraceMockQuery}${shortquery}&api-version=2018-05-01-preview`] = {\r\n  response: mock,\r\n  status: 200\r\n};\r\n\r\nconst SampleQuery = 'https://api.applicationinsights.io/v1/apps/Sample/query?query=';\r\nHttpMock[`${SampleQuery}${longquery}&api-version=2018-05-01-preview`] = {\r\n  response: sampleMock,\r\n  status: 200\r\n};\r\n\r\nHttpMock[`${SampleQuery}${shortquery}&api-version=2018-05-01-preview`] = {\r\n  response: sampleMock,\r\n  status: 200\r\n};\r\n\r\nHttpMock[`https://management.azure.com/subscriptions?api-version=2015-05-01`] = {\r\n  response: subscriptionsMock,\r\n  status: 200\r\n};\r\n\r\nHttpMock[`https://management.azure.com/subscriptions//subscriptions/demo/providers/Microsoft.Insights/components?api-version=2015-05-01`] = {\r\n  response: subscriptionAppsMock,\r\n  status: 200\r\n};\r\n\r\nHttpMock[`https://management.azure.com//subscriptions/demo/resourceGroups/demo/providers/microsoft.insights/components/ail-demo/api/query?query=${longquery}&api-version=2018-05-01-preview`] = {\r\n  response: mock,\r\n  status: 200\r\n}\r\n\r\n\r\nexport default HttpMock;","import { of } from 'rxjs';\r\n\r\nexport class MockAadAuthService {\r\n  logout() {\r\n\r\n  }\r\n\r\n  silentTokenRefresh() {\r\n    return of({success: true, errorMessage: null });\r\n  }\r\n\r\n  loginRedirect() {\r\n\r\n  }\r\n\r\n  getToken() {\r\n    return 'demo';\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.getToken() != null;\r\n  }\r\n}","import { DomUtils } from 'Utils/DomUtils';\r\nimport { ConsoleDoc } from 'Utils/ConsoleDoc';\r\nimport { QueryStringUtils } from 'Utils/QueryStringUtils';\r\nimport { DateUtils } from 'Utils/DateUtils';\r\nimport { ProfileRepository } from 'Services/ProfileRepository';\r\nimport { StorageRepository } from 'Services/StorageRepository';\r\nimport { ApplicationInsightsClient } from 'Services/ApplicationInsightsClient';\r\nimport { HttpClient } from 'Services/HttpClient';\r\nimport { AadAuthService } from 'Services/AadAuthService';\r\nimport {\r\n  MockHttpClient,\r\n  MockAadAuthService,\r\n  MockStorage\r\n} from 'Services/Mock';\r\n\r\nconst isDemo = process.env.REACT_APP_MODE === 'demo';\r\nconst isTest = process.env.NODE_ENV === 'test';\r\n\r\nconst dependencies = {\r\n  ApplicationInsightsClient: (c) => new ApplicationInsightsClient(\r\n    c('HttpClient'),\r\n    c('AadAuthService')\r\n  ),\r\n  ProfileRepository: (c) => new ProfileRepository(c('StorageRepository'), c('QueryStringUtils')),\r\n  DomUtils: () => new DomUtils(),\r\n  ConsoleDoc: () => new ConsoleDoc(),\r\n  QueryStringUtils: () => new QueryStringUtils(),\r\n  DateUtils: () => new DateUtils(),\r\n  AadAuthService: (c) => isTest || isDemo ? new MockAadAuthService() : new AadAuthService(c('StorageRepository')),\r\n  HttpClient: () => isTest || isDemo ? new MockHttpClient() : new HttpClient(),\r\n  StorageRepository: () => {\r\n    const localStorage = isTest ?\r\n      new MockStorage({}) :\r\n      window.localStorage;\r\n\r\n    const sessionStorage = isTest ?\r\n      new MockStorage({}) :\r\n      window.sessionStorage;\r\n    return new StorageRepository(localStorage, sessionStorage);\r\n  }\r\n};\r\n\r\nexport function inject(name) {\r\n  const dependencyFactory = dependencies[name];\r\n  if (!dependencyFactory) {\r\n    throw new Error(`${name} is not registered`);\r\n  }\r\n  return dependencyFactory(inject);\r\n}","import { createStore, applyMiddleware, compose } from 'redux';\r\nimport { createEpicMiddleware } from 'redux-observable';\r\nimport { rootReducer } from './rootReducer';\r\nimport { rootEpic } from './rootEpic';\r\nimport { inject } from './container';\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' &&\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ?\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n    }) : compose;\r\n\r\nconst epicMiddleware = createEpicMiddleware({\r\n  dependencies: {\r\n    inject: inject\r\n  }\r\n});\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(\r\n    applyMiddleware(epicMiddleware)\r\n  )\r\n);\r\n\r\nepicMiddleware.run(rootEpic);\r\n\r\nexport default store;","import './Header.css';\r\nimport React from 'react';\r\n\r\nconst Header = (props) => {\r\n  const { sidebar, toggleSidebar, appName, loading } = props;\r\n  const titleIconClass = `ail-header-title_icon ${(loading ? 'ail-header-title_icon--loading' : '')}`;\r\n  return (\r\n    <header className=\"ail-header\">\r\n      <div className=\"ail-header-app_name\" hidden={!appName}>{appName}</div>\r\n      <strong className=\"ail-header-title\">\r\n        <span className={titleIconClass} role=\"img\" aria-labelledby=\"ail-header-title\">💡 </span>\r\n        <span id=\"ail-header-title\">Application Insights Log</span>\r\n      </strong>\r\n      <div className=\"ail-account-menu\">\r\n        <div className={`ail-icon-menu ${sidebar ? 'open' : ''}`}\r\n          onClick={() => toggleSidebar()}>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n          <span></span>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  changeThemeAction,\r\n  UIThemes\r\n} from 'Modules/UI/Actions';\r\n\r\nconst mapStateToProps = state => {\r\n  let themeIndex = UIThemes.findIndex(t => t.className === state.ui.theme);\r\n  themeIndex = (themeIndex < UIThemes.length - 1) ? themeIndex + 1 : 0;\r\n  return {\r\n    nextTheme: UIThemes[themeIndex],\r\n    theme: state.ui.theme\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeTheme: theme => dispatch(changeThemeAction(theme))\r\n  };\r\n};\r\n\r\nclass UISettings extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n    this.handleThemeChange = this.handleThemeChange.bind(this);\r\n  }\r\n\r\n  handleThemeChange(value) {\r\n    this.props.changeTheme(value);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ail-account-section\">\r\n        <label>UI Theme</label>\r\n        <div className=\"ail-btn ail-btn--default\" onClick={() => this.handleThemeChange(this.props.nextTheme.className)}>\r\n          Toggle {this.props.nextTheme.name} theme\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nUISettings = connect(mapStateToProps, mapDispatchToProps)(UISettings);\r\nexport default UISettings;","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setAADSubscriptionAction,\r\n  setAADResourceAction,\r\n  listSubscriptionsAction,\r\n  listAIAppsAction,\r\n  aadLoginAction,\r\n  aadLogoutAction,\r\n  listAADTenantsAction,\r\n  setAADTenantAction\r\n} from 'Modules/Account/Actions/AAD';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    subscriptionsApps: { ...state.account.appVaults.aad.subscriptionsApps },\r\n    subscriptions: [...state.account.appVaults.aad.subscriptions],\r\n    tenants: [...state.account.appVaults.aad.tenants],\r\n    aad: { ...state.account.aad }\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setAADTenant: tenantId => dispatch(setAADTenantAction(tenantId)),\r\n    setAADSubscription: subscriptionId => dispatch(setAADSubscriptionAction(subscriptionId)),\r\n    setAADResource: (resourceId, appId) => dispatch(setAADResourceAction(resourceId, appId)),\r\n    listTenants: () => dispatch(listAADTenantsAction()),\r\n    listSubscriptions: () => dispatch(listSubscriptionsAction()),\r\n    listAIApps: subscriptionId => dispatch(listAIAppsAction(subscriptionId)),\r\n    login: () => dispatch(aadLoginAction()),\r\n    logout: () => dispatch(aadLogoutAction()),\r\n  };\r\n};\r\n\r\nclass AadResourcePicker extends Component {\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.aad.authenticated) {\r\n      const authenticationChanged = nextProps.aad.authenticated !== this.props.aad.authenticated;\r\n      if (authenticationChanged) {\r\n        this.checkTenantsLoad(nextProps);\r\n        this.checkSubscriptionsLoad(nextProps);\r\n      }\r\n      if (authenticationChanged || this.props.aad.subscriptionId !== nextProps.aad.subscriptionId) {\r\n        this.checkAIAppsLoad(nextProps);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkTenantsLoad(props) {\r\n    if (props.aad.authenticated && props.tenants.length === 0) {\r\n      this.props.listTenants();\r\n    }\r\n  }\r\n\r\n  checkSubscriptionsLoad(props) {\r\n    if (props.aad.authenticated && props.subscriptions.length === 0) {\r\n      this.props.listSubscriptions();\r\n    }\r\n  }\r\n\r\n  checkAIAppsLoad(props) {\r\n    if (!props.aad.authenticated ||\r\n      !props.aad.subscriptionId ||\r\n      props.subscriptionsApps[props.aad.subscriptionId]\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.props.listAIApps(props.aad.subscriptionId);\r\n  }\r\n\r\n  selectResource = (resourceId) => {\r\n    const app = this.props.subscriptionsApps[this.props.aad.subscriptionId]\r\n      .find(s => s.id === resourceId);\r\n\r\n    const appId = app ? app.appId : '';\r\n    this.props.setAADResource(resourceId, appId);\r\n  }\r\n\r\n  selectSubscription = (subscriptionId) => {\r\n    this.props.setAADSubscription(subscriptionId);\r\n    this.props.setAADResource();\r\n  }\r\n\r\n  selectTenant = (tenantId) => {\r\n    this.props.setAADTenant(tenantId);\r\n    this.props.setAADSubscription();\r\n    this.props.setAADResource();\r\n    this.props.login();\r\n  }\r\n\r\n  renderTenantsDropDown() {\r\n    const tenants = this.props.tenants;\r\n    if (tenants.length === 0) {\r\n      return;\r\n    }\r\n\r\n    return (\r\n      <div className=\"ail-account-section\">\r\n        <label>Azure AD Tenant</label>\r\n        <div className=\"ail-select ail-select--refresh\">\r\n          <select value={this.props.aad.tenantId}\r\n            className=\"ail-input\"\r\n            onChange={(e) => this.selectTenant(e.target.value)}>\r\n            {tenants.map((tenant) =>\r\n              <option key={tenant.id} value={tenant.id}>{tenant.name}</option>\r\n            )}\r\n          </select>\r\n          <button type=\"button\" className=\"ail-select-refresh_btn\" title=\"Refresh\" onClick={() => this.props.listTenants()}>\r\n            <span role=\"img\" aria-label=\"Refresh\">🔄</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderSubscriptionsDropDown() {\r\n    if (!this.props.aad.authenticated) return '';\r\n    const subscriptions = this.props.subscriptions;\r\n\r\n    return (\r\n      <div className=\"ail-account-section\">\r\n        <label>Subscription</label>\r\n        <div className=\"ail-select ail-select--refresh\">\r\n          <select value={this.props.aad.subscriptionId}\r\n            className=\"ail-input\"\r\n            onChange={(e) => this.selectSubscription(e.target.value)}>\r\n            <option value=\"\">Select subscription</option>\r\n            {subscriptions.map((subscription) =>\r\n              <option key={subscription.id} value={subscription.id}>{subscription.name}</option>\r\n            )}\r\n          </select>\r\n          <button type=\"button\" className=\"ail-select-refresh_btn\" title=\"Refresh\" onClick={() => this.props.listSubscriptions()}>\r\n            <span role=\"img\" aria-label=\"Refresh\">🔄</span>\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderAppsDropDown() {\r\n    if (!this.props.aad.authenticated) return '';\r\n    const { subscriptionId, resourceId } = this.props.aad;\r\n    const subscriptionApps = this.props.subscriptionsApps[subscriptionId] || [];\r\n\r\n    return (\r\n      <div className=\"ail-account-section\">\r\n        <label>Application Insights Resource</label>\r\n        <div className=\"ail-select ail-select--refresh\">\r\n          <select value={resourceId}\r\n            className=\"ail-input\"\r\n            onChange={(e) => this.selectResource(e.target.value)}>\r\n            <option value=\"\">Select application</option>\r\n            {subscriptionApps.map((app) =>\r\n              <option key={app.id} value={app.id}>{app.name}</option>\r\n            )}\r\n          </select>\r\n          {\r\n            subscriptionId ?\r\n              <button type=\"button\" className=\"ail-select-refresh_btn\" title=\"Refresh\" onClick={() => this.props.listAIApps(subscriptionId)}>\r\n                <span role=\"img\" aria-label=\"Refresh\">🔄</span>\r\n              </button> :\r\n              ''\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  login = () => {\r\n    this.props.login();\r\n  }\r\n\r\n  logout = () => {\r\n    this.props.logout();\r\n  }\r\n\r\n  renderLoginButton() {\r\n    return (<Fragment>{\r\n      this.props.aad.authenticated ?\r\n        <button type=\"button\" className={`ail-btn ail-btn--success u-w100 u-mt-2`} onClick={() => this.logout()}>\r\n          Logout <span role=\"img\" aria-label=\"lock\">🔒</span>\r\n        </button> :\r\n        <button type=\"button\"\r\n          className={`ail-btn ail-btn--default u-w100 u-mt-2`}\r\n          onClick={() => this.login()}\r\n          disabled={this.props.aad.tenantId == null}>Login <span role=\"img\" aria-label=\"key\">🔑</span></button>\r\n    }</Fragment>);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form>\r\n        {this.renderLoginButton()}\r\n        {this.renderTenantsDropDown()}\r\n        {this.renderSubscriptionsDropDown()}\r\n        {this.renderAppsDropDown()}\r\n      </form>\r\n    );\r\n  }\r\n}\r\nAadResourcePicker = connect(mapStateToProps, mapDispatchToProps)(AadResourcePicker);\r\nexport default AadResourcePicker;","import { aadAccountActionTypes } from '.';\r\n\r\nexport function listAADTenantsAction() {\r\n  return { type: aadAccountActionTypes.LIST_AAD_TENANTS, payload: { }, retry: 0};\r\n}","import { aadAccountActionTypes } from '.';\r\n\r\nexport function listSubscriptionsAction() {\r\n  return { type: aadAccountActionTypes.LIST_AAD_SUBSCRIPTIONS, payload: { }, retry: 0};\r\n}","import { aadAccountActionTypes } from '.';\r\n\r\nexport function listAIAppsAction(subscriptionId) {\r\n  return { type: aadAccountActionTypes.LIST_AI_APPS, payload: { subscriptionId }, retry: 0 };\r\n}","import { aadAccountActionTypes } from '.';\r\n\r\nexport function aadLoginAction() {\r\n  return { type: aadAccountActionTypes.AAD_LOGIN, payload: {} };\r\n}","import { aadAccountActionTypes } from '.';\r\n\r\nexport function aadLogoutAction() {\r\n  return { type: aadAccountActionTypes.AAD_LOGOUT, payload: {} };\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setAuthenticationTypeAction,\r\n} from 'Modules/Account/Actions';\r\nimport { AuthenticationType } from 'Modules/Account/Models';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authenticationType: state.account.authenticationType\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setAuthenticationType: type => dispatch(setAuthenticationTypeAction(type))\r\n  };\r\n};\r\n\r\nclass AuthenticationModeSelector extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      authenticationType: props.authenticationType\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      authenticationType: nextProps.authenticationType\r\n    });\r\n  }\r\n\r\n  changeAuthentication = (authenticationType) => {\r\n    this.props.setAuthenticationType(authenticationType);\r\n  }\r\n\r\n  isActive(authenticationType) {\r\n    return this.props.authenticationType === authenticationType;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label>Authentication Mode</label>\r\n        <div className=\"ail-btn-group\">\r\n          <button type=\"button\" className={`ail-btn ${this.isActive(AuthenticationType.aad) ? 'is-active' : ''} u-mt-2`}\r\n            title=\"Connect to Application Insights using an Azure Active Directory account\"\r\n            onClick={() => this.changeAuthentication(AuthenticationType.aad)}>\r\n            Azure AD\r\n          </button>\r\n          <button type=\"button\" className={`ail-btn ${this.isActive(AuthenticationType.apiKey) ? 'is-active' : ''} u-mt-2`}\r\n            title=\"Connect to Application Insights using an AppID and Api key\"\r\n            onClick={() => this.changeAuthentication(AuthenticationType.apiKey)}>\r\n            API Key\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nAuthenticationModeSelector = connect(mapStateToProps, mapDispatchToProps)(AuthenticationModeSelector);\r\nexport default AuthenticationModeSelector;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setApiKeyCredentialsAction,\r\n  tryFindApiCredentialsAction\r\n} from 'Modules/Account/Actions/ApiKey';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    availableApps: [...state.account.appVaults.apiKey.availableApps],\r\n    credentials: { ...state.account.apiKey }\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setApiKeyCredentials: (appId, apiKey) => dispatch(setApiKeyCredentialsAction(appId, apiKey)),\r\n    tryFindCredentials: appName => dispatch(tryFindApiCredentialsAction(appName)),\r\n  };\r\n};\r\n\r\nclass ApiKeyCredentials extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      credentials: { ...props.credentials },\r\n      availableApps: props.availableApps,\r\n      selectedStoredCredential: props.credentials.appId,\r\n      editing: !props.credentials.appId\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (!this.state.editing && this.accountChanged(nextProps.credentials, this.state.credentials)) {\r\n      this.setState({\r\n        credentials: nextProps.credentials,\r\n        selectedStoredCredential: nextProps.credentials.appId,\r\n      });\r\n    }\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    let { credentials } = this.state;\r\n    credentials = { ...credentials, [event.target.id]: event.target.value };\r\n    this.setState({ credentials: { ...this.state.credentials, ...credentials } });\r\n  }\r\n\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    this.props.setApiKeyCredentials(\r\n      this.state.credentials.appId,\r\n      this.state.credentials.apiKey,\r\n    );\r\n    this.setState({ selectedStoredCredential: this.state.credentials.appId });\r\n\r\n    this.toggleEdit();\r\n  }\r\n\r\n  checkStoredAppCredentials(appId) {\r\n    this.setState({ editing: false });\r\n    this.props.tryFindCredentials(appId);\r\n    this.setState({ selectedStoredCredential: appId })\r\n  }\r\n\r\n  accountChanged(credentials1, credentials2) {\r\n    return credentials1.appId !== credentials2.appId || credentials1.apiKey !== credentials2.apiKey;\r\n  }\r\n\r\n  validCredentials = () => {\r\n    return this.state.credentials.appId && this.state.credentials.apiKey;\r\n  }\r\n\r\n  toggleEdit = (event) => {\r\n    event && event.preventDefault();\r\n    this.setState({ editing: !this.state.editing });\r\n  }\r\n\r\n  renderCredentialsForm() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <div className=\"ail-account-section ail-account\">\r\n          <label>Credentials</label>\r\n          <input className=\"ail-input\" value={this.state.credentials.appId}\r\n            placeholder='App id'\r\n            id=\"appId\"\r\n            disabled={!this.state.editing}\r\n            onChange={(e) => this.handleChange(e)} />\r\n          <input className=\"ail-input\" value={this.state.credentials.apiKey}\r\n            id=\"apiKey\"\r\n            placeholder='API key'\r\n            disabled={!this.state.editing}\r\n            onChange={(e) => this.handleChange(e)} />\r\n          {\r\n            this.state.editing ?\r\n              <button className={`ail-btn ail-btn--success u-w100 u-mt-2 ${(!this.validCredentials() ? 'disabled' : '')}`}>\r\n                Apply\r\n              </button> :\r\n              <button type=\"button\" className={`ail-btn ail-btn--default u-w100 u-mt-2`}\r\n                onClick={(e) => this.toggleEdit(e)}>Edit</button>\r\n          }\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n\r\n  renderAppsDropDown() {\r\n    if (this.props.availableApps.length === 0) {\r\n      return '';\r\n    }\r\n\r\n    return (\r\n      <div className=\"ail-account-section\">\r\n        <label>Switch apps</label>\r\n        <select value={this.state.selectedStoredCredential}\r\n          className=\"ail-input\"\r\n          onChange={(e) => this.checkStoredAppCredentials(e.target.value)}>\r\n          <option>Saved apps</option>\r\n          {this.props.availableApps.sort().map((app, i) =>\r\n            <option key={`${i}${app.appId}`} value={app.appId}>{app.appName}</option>\r\n          )}\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.renderCredentialsForm()}\r\n        {this.renderAppsDropDown()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nApiKeyCredentials = connect(mapStateToProps, mapDispatchToProps)(ApiKeyCredentials);\r\nexport default ApiKeyCredentials;","import { apiKeyAccountActionTypes } from '.';\r\n\r\nexport function tryFindApiCredentialsAction(appName) {\r\n  return { type: apiKeyAccountActionTypes.TRY_FIND_CREDENTIALS, payload: { appName } };\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { clearDataAction } from 'Modules/Account/Actions';\r\n\r\nconst mapStateToProps = state => {\r\n  return {};\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    clearData: () => dispatch(clearDataAction())\r\n  };\r\n};\r\n\r\nclass ClearDataButton extends Component {\r\n  clearData = () => {\r\n    if (!window.confirm('Are you sure to clear all stored data?')) {\r\n      return;\r\n    }\r\n    this.props.clearData();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li className=\"ail-btn ail-btn--default\" onClick={() => this.clearData()}>Clear data</li>\r\n    );\r\n  }\r\n}\r\n\r\nClearDataButton = connect(mapStateToProps, mapDispatchToProps)(ClearDataButton);\r\nexport default ClearDataButton;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { setSearchPeriodAction } from 'Modules/Search/Actions';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    searchPeriod: state.search.searchPeriod\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setSearchPeriod: searchPeriod => dispatch(setSearchPeriodAction(searchPeriod)),\r\n  };\r\n};\r\n\r\nclass SearchPeriodSetting extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchPeriod: props.searchPeriod\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.state.searchPeriod !== nextProps.searchPeriod) {\r\n      this.setState({ searchPeriod: nextProps.searchPeriod });\r\n    }\r\n  }\r\n\r\n  handlePeriodChange(event) {\r\n    this.setState({ searchPeriod: event.target.value });\r\n  }\r\n\r\n  handleBlur() {\r\n    this.props.setSearchPeriod(this.state.searchPeriod);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ail-account-section\">\r\n        <label>Search period</label>\r\n        <input className=\"ail-input\" value={this.state.searchPeriod}\r\n          placeholder='Specify period (P7D, PT1H...)'\r\n          id=\"searchPeriod\"\r\n          onChange={(e) => this.handlePeriodChange(e)}\r\n          onBlur={(e) => this.handleBlur()} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchPeriodSetting = connect(mapStateToProps, mapDispatchToProps)(SearchPeriodSetting);\r\nexport default SearchPeriodSetting;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { clearDataAction } from 'Modules/Account/Actions';\r\nimport { setAutoRefreshAction } from 'Modules/Search/Actions';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    autoRefresh: state.search.autoRefresh,\r\n    authenticationType: state.account.authenticationType\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    clearData: () => dispatch(clearDataAction()),\r\n    setAutoRefresh: enabled => dispatch(setAutoRefreshAction(enabled)),\r\n  };\r\n};\r\n\r\nclass AutoRefreshSetting extends Component {\r\n  toggleAutoRefresh() {\r\n    this.props.setAutoRefresh(!this.props.autoRefresh);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li className=\"ail-toggle\">\r\n        <input className=\"hidden\" type=\"checkbox\" id=\"autorefresh\" checked={this.props.autoRefresh} onChange={() => this.toggleAutoRefresh()} />\r\n        <label htmlFor=\"autorefresh\" className=\"ail-btn\">Auto refresh</label>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nAutoRefreshSetting = connect(mapStateToProps, mapDispatchToProps)(AutoRefreshSetting);\r\nexport default AutoRefreshSetting;","import { searchActionTypes } from '.';\r\n\r\nexport function setAutoRefreshAction(enabled) {\r\n  return { type: searchActionTypes.SET_AUTOREFRESH, payload: { enabled } };\r\n}","import './Settings.css';\r\nimport React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { AuthenticationType } from 'Modules/Account/Models';\r\nimport UISettings from 'Modules/UI/Components/UISettings';\r\nimport AadResourcePicker from 'Modules/Account/Components/Settings/AadResourcePicker';\r\nimport AuthenticationModeSelector from 'Modules/Account/Components/Settings/AuthenticationModeSelector';\r\nimport ApiKeyCredentials from 'Modules/Account/Components/Settings/ApiKeyCredentials';\r\nimport ClearDataButton from 'Modules/Account/Components/Settings/ClearDataButton';\r\nimport SearchPeriodSetting from 'Modules/Search/Components/Settings/SearchPeriodSetting';\r\nimport AutoRefreshSetting from 'Modules/Search/Components/Settings/AutoRefreshSetting';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    authenticationType: state.account.authenticationType\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return { };\r\n};\r\n\r\nclass Settings extends Component {\r\n  renderApplicationPicker() {\r\n    return (\r\n      <Fragment>\r\n        {this.props.authenticationType === AuthenticationType.apiKey ? <ApiKeyCredentials /> : ''}\r\n        {this.props.authenticationType === AuthenticationType.aad ? <AadResourcePicker /> : ''}\r\n      </Fragment>\r\n    );\r\n  }\r\n\r\n  renderGlobalSettings() {\r\n    return (\r\n      <div className=\"ail-account-section\">\r\n        <label>Settings</label>\r\n        <ul className=\"ail-btn-list\">\r\n          <AutoRefreshSetting />\r\n          <ClearDataButton />\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AuthenticationModeSelector />\r\n        {this.renderApplicationPicker()}\r\n        {this.renderGlobalSettings()}\r\n        <SearchPeriodSetting />\r\n        <UISettings />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSettings = connect(mapStateToProps, mapDispatchToProps)(Settings);\r\nexport default Settings;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './StatusBar.css';\r\nimport { inject } from 'Store/container';\r\nimport { anyCredentials } from 'Modules/Account/Epics/accountUtils';\r\nconst dateUtils = inject('DateUtils');\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    autoRefresh: state.search.autoRefresh,\r\n    fetchTime: state.search.fetchTime,\r\n    appName: state.search.appName,\r\n    error: state.errors[state.errors.length - 1],\r\n    loading: state.search.loading,\r\n    connected: anyCredentials(state.account)\r\n  };\r\n};\r\n\r\nlet StatusBar = (props) => (\r\n  <div className=\"ail-footer-status\">\r\n    {\r\n      props.connected ?\r\n        <div className=\"ail-footer-status-item ail-footer-status--timestamp\">\r\n          {\r\n            !props.loading ? (\r\n              <div>\r\n                updated at {dateUtils.formatDateTime(props.fetchTime)} {props.autoRefresh ? '(auto)' : ''}\r\n              </div>\r\n            ) : 'Loading...'\r\n          }\r\n        </div>\r\n        :\r\n        <div className=\"ail-footer-status-item ail-footer-status--error\">\r\n          You must setup an authentication and an application on the right panel to start\r\n        </div>\r\n    }\r\n    {props.error ?\r\n      <div className=\"ail-footer-status-item ail-footer-status--error\">\r\n        {props.error.message}\r\n      </div> : ''\r\n    }\r\n  </div>\r\n);\r\nStatusBar = connect(mapStateToProps)(StatusBar);\r\nexport default StatusBar;","export const SeverityLevel = {\r\n  0: 'verbose',\r\n  1: 'information',\r\n  2: 'warning',\r\n  3: 'error',\r\n  4: 'critical'\r\n};","import React from 'react';\r\nimport { SeverityLevel } from 'Modules/Search/Models';\r\nimport { inject } from 'Store/container';\r\nimport './LogLine.css';\r\n\r\nconst dateUtils = inject('DateUtils');\r\n\r\nconst LogLine = (props) => {\r\n  const { log } = props;\r\n  return (\r\n    <div className={`ail-log_line ail-log_line--${SeverityLevel[log.severityLevel]}`}>\r\n      <span className=\"ail-log_line-time\">[{dateUtils.formatDateTime(log.timestamp)}]</span>\r\n      <span className=\"ail-log_line-message\">{log.message}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogLine;","import React, { Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport LogLine from './LogLine';\r\nimport { inject } from 'Store/container';\r\n\r\nconst dateUtils = inject('DateUtils');\r\n\r\nconst mapStateToProps = state => {\r\n  return { logs: state.search.logs, fetchTime: state.search.fetchTime, appName: state.search.appName };\r\n};\r\n\r\nlet Log = ({ logs, fetchTime, appName }) => (\r\n  <Fragment>\r\n    <h1>\r\n      {appName || 'No results'}\r\n    </h1>\r\n    <div className=\"ail-log\">\r\n      {logs.map((item, i) =>\r\n        <LogLine log={item} key={dateUtils.formatDate(fetchTime) + i} />\r\n      )}\r\n    </div>\r\n  </Fragment>\r\n);\r\nLog = connect(mapStateToProps)(Log);\r\nexport default Log;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  setQueryAction,\r\n  getLogsAction\r\n} from 'Modules/Search/Actions';\r\nimport {\r\n  anyCredentials\r\n} from 'Modules/Account/Epics/accountUtils';\r\nimport './QueryBox.css';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    query: state.search.query,\r\n    connected: anyCredentials(state.account)\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    getLogs: () => dispatch(getLogsAction()),\r\n    setQuery: query => dispatch(setQueryAction(query))\r\n  };\r\n};\r\n\r\nclass QueryBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: props.query\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (this.state.query !== nextProps.query) {\r\n      this.setState({ query: nextProps.query });\r\n    }\r\n  }\r\n\r\n  setQuery = (event) => {\r\n    this.setState({ query: event.target.value });\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    this.props.setQuery(this.state.query);\r\n    this.props.getLogs();\r\n  }\r\n\r\n  onEnterPress = (event) => {\r\n    if (event.keyCode === 13 && event.ctrlKey === true) {\r\n      this.handleSubmit(event);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"ail-footer\" onSubmit={this.handleSubmit}>\r\n        <textarea\r\n          className=\"ail-query\"\r\n          value={this.state.query}\r\n          placeholder=\"Write a query...\"\r\n          onKeyDown={this.onEnterPress}\r\n          onChange={this.setQuery} />\r\n        <button className=\"ail-search\" disabled={!this.state.query || !this.props.connected}>Search</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nQueryBox = connect(mapStateToProps, mapDispatchToProps)(QueryBox);\r\nexport default QueryBox;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './App.css';\r\nimport Header from 'Components/Header';\r\nimport Settings from 'Components/Settings';\r\nimport StatusBar from 'Components/StatusBar';\r\nimport Log from 'Modules/Search/Components/Log';\r\nimport QueryBox from 'Modules/Search/Components/QueryBox';\r\nimport { loadProfileAction } from 'Modules/Account/Actions';\r\nimport { anyCredentials } from 'Modules/Account/Epics/accountUtils';\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    hasCredentials: anyCredentials(state.account),\r\n    appName: state.search.appName,\r\n    loading: state.search.loading,\r\n    activeTheme: state.ui.theme\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    loadProfile: () => dispatch(loadProfileAction())\r\n  };\r\n};\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      sidebar: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.loadProfile();\r\n  }\r\n\r\n  toggleSidebar() {\r\n    this.setState({ sidebar: !this.state.sidebar });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`ait ${this.props.activeTheme} ${this.state.sidebar ? 'ail--sidebar-open' : ''}`}>\r\n        <div className=\"ail-container\">\r\n          <Header\r\n            sidebar={this.state.sidebar}\r\n            loading={this.props.loading}\r\n            toggleSidebar={() => this.toggleSidebar()}\r\n            appName={this.props.appName} />\r\n          <div className=\"ail-body\">\r\n            {\r\n              !this.props.hasCredentials ?\r\n                <h1>Welcome! To start, first set your account on top menu.</h1> :\r\n                <Log />\r\n            }\r\n          </div>\r\n          <div>\r\n            <StatusBar />\r\n            <QueryBox />\r\n          </div>\r\n        </div>\r\n        <div className=\"ail-sidebar\">\r\n          <Settings />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp = connect(mapStateToProps, mapDispatchToProps)(App);\r\nexport default App;\r\n","import { accountActionTypes } from '.';\r\n\r\nexport function loadProfileAction() {\r\n  return { type: accountActionTypes.LOAD_PROFILE };\r\n}","import './index.css';\r\nimport React from 'react';\r\nimport { render } from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport store from 'Store';\r\nimport { inject } from 'Store/container';\r\nimport App from 'Components/App';\r\n\r\nconst domUtils = inject('DomUtils');\r\n\r\nrender(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root'));\r\n\r\nregisterServiceWorker();\r\n\r\ndomUtils.listenViewHeightChanges();"],"sourceRoot":""}